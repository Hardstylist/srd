	_panic(0 ,);
	_panic("panic: ticket lock acquired check done outside of kernel debugger @%s:%d");
	_panic_spin_forever();
	_panic("ipc_entry_dealloc() @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic();
	_panic("ipc_eventlink_wait_block @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic("disabling imp_receiver on task with pending importance boosts! @%s:%d");
	_panic("disabling de-nap on task with pending de-nap boosts! @%s:%d");
	_panic(0 ,);
	_panic("panic: spinlock acquired check done outside of kernel debugger @%s:%d");
	_panic("size too large for the fast kmsg zone (%d) @%s:%d");
	_panic(?);
	_panic("ipc_kmsg_free @%s:%d");
	_panic("ipc_kmsg_rmqueue: inconsistent prev/next pointers. (prev->next: %p, next->prev: %p, kmsg: %p) @%s:%d");
	_panic("invalid descriptor type: (%p: %d) @%s:%d");
	_panic("round msg overflow @%s:%d");
	_panic("ipc_kmsg_body_sig: invalid message descriptor @%s:%d");
	_panic("invalid descriptor type %d @%s:%d");
	_panic("round msg overflow @%s:%d");
	_panic("ikm_validate_sig: %s signature mismatch: kmsg=0x%p, id=%d, sig=0x%zx (expected 0x%zx) @%s:%d");
	_panic("Inconsistent OOL/copyout size on %p: expected %d, got %lld @%p @%s:%d");
	_panic("untyped IPC copyout body: invalid message descriptor @%s:%d");
	_panic("Scatter lists disabled @%s:%d");
	_panic("round msg overflow @%s:%d");
	_panic("ipc_mqueue_send @%s:%d");
	_panic("ipc_mqueue_receive_results: strange wait_result @%s:%d");
	_panic("ipc_mqueue_receive_results: strange ith_state @%s:%d");
	_panic("ipc_mqueue_receive_results: strange wait_result @%s:%d");
	_panic("Unknown waitq type 0x%x: likely memory corruption! @%s:%d");
	_panic("ipc_mqueue_receive_on_thread: sleep walking @%s:%d");
	_panic("round msg overflow @%s:%d");
	_panic(?);
	_panic("ipc_object_copyin_from_kernel: strange rights @%s:%d");
	_panic("ipc_object_destroy: strange rights @%s:%d");
	_panic("ipc_object_destroy_dest: strange rights @%s:%d");
	_panic("ipc_object_copyout_dest: strange rights @%s:%d");
	_panic(0 ,);
	_panic("ipc_port_destroy: invalid state @%s:%d");
	_panic("Over-release of port %p send right! @%s:%d");
	_panic("Over-release of port %p send-once right! @%s:%d");
	_panic("Trying to free an active port. port %p @%s:%d");
	_panic("port(%p, %p): prealloc message in an invalid state @%s:%d");
	_panic("ipc_right_terminate: strange type - 0x%x @%s:%d");
	_panic("ipc_right_destroy: strange type @%s:%d");
	_panic("ipc_right_delta: strange right %d for 0x%x (%p) in space:%p @%s:%d");
	_panic("ipc_right_copyin_check: strange rights @%s:%d");
	_panic("ipc_right_copyout: Copyout kobject/kolabel as receive right @%s:%d");
	_panic("ipc_right_copyout: strange rights @%s:%d");
	_panic("Service port name = 0x%x doesnt match the stored launchd port name = 0x%x @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic("Voucher user-data manager released @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("index >= ivac->ivac_table_size @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("deallocing a resource manager with live refs to its attr values @%s:%d");
	_panic(?);
	_panic("index >= ivac->ivac_table_size @%s:%d");
	_panic(0 ,);
	_panic("key_index >= iv->iv_table_size @%s:%d");
	_panic("index >= ivac->ivac_table_size @%s:%d");
	_panic("Cannot grow ipc space beyond IVAC_ENTRIES_MAX. Some process is leaking vouchers @%s:%d");
	_panic("Failed to grow ivac table to size %d @%s:%d");
	_panic("index >= ivac->ivac_table_size @%s:%d");
	_panic("key_index >= iv->iv_table_size @%s:%d");
	_panic("index >= ivac->ivac_table_size @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic("mach_port_get_refs: strange rights @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("aset_num = %d in %s @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("overflow detected @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("BTLog: Missing hashelem for element list of record 0x%lx @%s:%d");
	_panic("BTLog: Eviction requested on btlog (0x%lx) with an empty active list. @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Explicit removal of entry is not permitted for this btlog (%p). @%s:%d");
	_panic("panic: ticket lock acquired check done outside of kernel debugger @%s:%d");
	_panic("clock_alarm_deliver @%s:%d");
	_panic("couldn't create coalition ledger template @%s:%d");
	_panic("couldn't create entries for coaliton ledger template @%s:%d");
	_panic("couldn't create coalition task ledger template @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("%s: invalid role(%d) for task @%s:%d");
	_panic("%s: task %p attempting to set role %d in coalition %p to which it does not belong! @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("%s: coalition %p id:%llu type:%s task_count(%llu) < dead_task_count(%llu) @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("%s: coalition %p id:%llu type:%s task_count(%llu) < dead_task_count(%llu) @%s:%d");
	_panic(?);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("resurrecting coalition %p id:%llu type:%s, active_count:%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("resurrecting coalition %p id:%llu type:%s, active_count:%u @%s:%d");
	_panic("failed to adopt task %p into default coalition: %d @%s:%d");
	_panic("failed to adopt task %p into corpse coalition: %d @%s:%d");
	_panic("deallocating task %p was not a member of a resource coalition @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s: could not create init %s coalition: kr:%d @%s:%d");
	_panic("%s: could not create corpse %s coalition: kr:%d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("Unknown CA event type: %s. @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("phys_carveout_mb size overflowed (%luMB) @%s:%d");
	_panic("failed to allocate %luMB for phys_carveout_mb: %u @%s:%d");
	_panic("failed to allocate %u for phys_carveout_metadata: %u @%s:%d");
_panic_trap_to_debugger:
	_kdbg_dump_trace_to_file("/var/log/panic.trace",0 );
	_DebuggerSaveState(0x3,"panic",0 ,0 ,0 ,0 ,0x1);
	_panic_spin_forever(?);
_panic_spin_forever:
	_paniclog_append_noflush("\nPlease go to https://panic.apple.com to report this panic\n");
	_panic_spin_forever(?);
	_paniclog_append_noflush("panic(cpu %d caller 0x%lx): ");
	_paniclog_append_noflush("\n");
	_panic_spin_forever(?);
	_panic("register_additional_panic_data_buffer called with invalid producer_name @%s:%d");
	_panic("register_additional_panic_data_buffer called with invalid buffer pointer @%s:%d");
	_panic("register_additional_panic_data_buffer called with invalid length @%s:%d");
	_panic("register_additional_panic_data_buffer called with buffer already registered @%s:%d");
	_paniclog_append_noflush("Invalid %s pointer: %p (size %d)\n");
	_paniclog_append_noflush("\nProcess name corresponding to current thread (%p): %s\n");
	_paniclog_append_noflush("System model name: %s\n");
	_paniclog_append_noflush("Kernel UUID: %s\n");
	_paniclog_append_noflush("KernelCache slide: 0x%016lx\n");
	_paniclog_append_noflush("KernelCache base:  %p\n");
	_paniclog_append_noflush("Kernel slide:      0x%016lx\n");
	_paniclog_append_noflush("Kernel text base:  %p\n");
	_paniclog_append_noflush("Kernel text exec slide: 0x%016lx\n");
	_paniclog_append_noflush("Kernel slide:      0x%016lx\n");
	_paniclog_append_noflush("Kernel text base:  %p\n");
	_paniclog_append_noflush("ECC Corrections:%u\n");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Count of %u on ecc event is too large. @%s:%d");
	_pe_arm_get_soc_base_phys("-panic_on_exception_triage",SP + 0xc,0x4,0 );
	_panic("bad exception behavior! @%s:%d");
	_panic("mach_exception_raise_identity_protected() must be code64 @%s:%d");
	_panic("called exception_triage when it was forbidden by the boot environment @%s:%d");
	_panic("DEBUG4K %s:%d thread %p task %p map %p exception %d codes 0x%llx 0x%llx @%s:%d");
	_panic("attempted to set invalid special port %d @%s:%d");
	_panic("attempted to get invalid special port %d @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("ipc_kobject_alloc_port(): failed to allocate port @%s:%d");
	_panic("unexpected host object: %p @%s:%d");
	_panic("%s: unexpected make-send count: %p[%d], %d, %d @%s:%d");
	_panic("invalid kobject type %d @%s:%d");
	_panic("port %p of type %d, expecting %d @%s:%d");
	_panic("%s: unexpected send right count: %p[%d], %d @%s:%d");
	_panic("the msgh_ids in mig_e[] aren't valid! @%s:%d");
	_panic("multiple entries with the same msgh_id @%s:%d");
	_panic("the mig dispatch table is too small @%s:%d");
	_panic("mig subsystem %d (%p) replies are too large (%d > %d) @%s:%d");
	_panic("ipc_kobject_server: strange destination rights @%s:%d");
	_panic("ipc_kobject_alloc_port(): failed to allocate port @%s:%d");
	_panic("%s: unexpected kotype of port %p: want %d, got %d @%s:%d");
	_panic("port %p of type %d, expecting %d @%s:%d");
	_panic("invalid kobject type %d @%s:%d");
	_panic("Over-release of port %p send-once right! @%s:%d");
	_panic(?);
	_panic("invalid kobject type %d @%s:%d");
	_panic("trying to destroy an permanent port %p @%s:%d");
	_panic("ipc_kobject_label_check: attempted receive right copyout for labeled kobject @%s:%d");
	_panic("port %p of type %d, expecting %d @%s:%d");
	_panic("subst-once port %p was consumed twice @%s:%d");
	_panic("unexpected label: %llx @%s:%d");
	_panic("mach_msg_rpc_from_kernel @%s:%d");
	_panic("kernel_mach_msg_rpc @%s:%d");
	_panic("ipc_task_init @%s:%d");
	_panic("ipc_kobject_alloc_port(): failed to allocate port @%s:%d");
	_panic();
	_panic("mach_task_self() name changed @%s:%d");
	_panic("strange kobject type @%s:%d");
	_panic("strange task flavor @%s:%d");
	_panic("userspace has control access to a kernel map %p through task %p @%s:%d");
	_panic("userspace has access to a kernel map %p through task %p @%s:%d");
	_panic("strange thread flavor @%s:%d");
	_panic("strange task flavor @%s:%d");
	_panic("address %p not allocated via kalloc, map %p @%s:%d");
	_panic("address %p inside vm entry %p [%p:%p), map %p @%s:%d");
	_panic("address %p not managed by kalloc (entry %p, map %p) @%s:%d");
	_panic("trying to kalloc(Z_NOFAIL) with a large size (%zd) @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(LocalFrame[-0x38],);
	_panic("kfree: address range (%p, %ld) doesn't belong to the kernel @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("kfree: size %lu > kalloc_largest_allocated %lu @%s:%d");
	_panic("kfree: vm_map_remove_locked() failed for addr: %p, map: %p ret: %d @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("OSMalloc_Tagfree():'%s' has bad state 0x%08X @%s:%d");
	_panic("OSMalloc_Tagref():'%s' has bad state 0x%08X @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("OSMalloc_Tagref():'%s' has bad state 0x%08X @%s:%d");
	_panic("OSMalloc_Tagrele():'%s' has refcnt 0 @%s:%d");
	_panic("OSMalloc_Tagref():'%s' has bad state 0x%08X @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Attempt to create a lookup table for a ledger template with too many entries. lt_table_size=%u, MAX_LEDGER_ENTRIES=%lu\n @%s:%d");
	_panic(?);
	_panic("Attempt to create a lookup table for a ledger template with too many entries. lt_table_size=%u, MAX_LEDGER_ENTRIES=%lu\n @%s:%d");
	_panic("Attempt to create a ledger template with more than MAX_LEDGER_ENTRIES. MAX_LEDGER_ENTRIES=%lu, old_cnt=%u, new_cnt=%u\n @%s:%d");
	_panic("Attempt to create a lookup table for a ledger template with too many entries. lt_table_size=%u, MAX_LEDGER_ENTRIES=%lu\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic(?);
	_panic("ledger_entry_check_new_balance(%p,%d): negative ledger %p credit:%lld debit:%lld balance:%lld @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic(0 ,);
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic(0 ,);
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, index=0x%x, entry_size=%d\n @%s:%d");
	_panic("Unknown ledger entry size! ledger=%p, entry=0x%x, entry_size=%d\n @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?);
	_panic("lck_grp_lckcnt_incr(): invalid lock type: %d @%s:%d");
	_panic("lck_grp_lckcnt_decr(): invalid lock type: %d @%s:%d");
	_panic(?);
	_panic("Wait while equals timeout @ *%p == %p @%s:%d");
	_panic("Spinlock[%p] timeout after %llu ticks; current owner: %p, start time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("Spinlock[%p] timeout after %llu ticks; current owner: %p (on cpu %d), start time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("Spinlock[%p] timeout after %llu ticks; current state: %p, start time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("Invalid lock sleep action %x @%s:%d");
	_panic(?);
	_panic("Invalid lock sleep action %x @%s:%d");
	_panic(?);
	_panic("Invalid lock sleep action %x @%s:%d");
	_panic("lck_mtx_unlock_wakeup: mutex %p holder %p @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("invalid %s flag %d @%s:%d");
	_panic(?);
	_panic("invalid %s flag %d @%s:%d");
	_panic("panic: ticket lock acquired check done outside of kernel debugger @%s:%d");
	_panic("elem_sz:%d for table:'%s' must be a power of two! @%s:%d");
	_panic("Cannot initialize %s table: kernel_memory_allocate failed:%d\n @%s:%d");
	_panic("No more room to grow table: %p (nelem: %d, used: %d) @%s:%d");
	_panic("Invalid index:%d slab:%d (NULL) for table:%p @%s:%d");
	_panic("link_table_aloc of invalid elem type:%d from table @%p @%s:%d");
	_panic("No more room to grow table: 0x%p size:%d, used:%d, requested elem:%d @%s:%d");
	_panic("Too many alloc retries: %d, table:%p, type:%d, nelem:%d @%s:%d");
	_panic("Can't grow table %p with preemption disabled! @%s:%d");
	_panic("Invalid index:%d slab:%d (NULL) for table:%p @%s:%d");
	_panic("id:0x%llx : idx:%d > %d @%s:%d");
	_panic("Invalid index:%d slab:%d (NULL) for table:%p @%s:%d");
	_panic("id:0x%llx : idx:%d > %d @%s:%d");
	_panic("Invalid index:%d slab:%d (NULL) for table:%p @%s:%d");
	_panic("Valid/unreserved element %p (0x%x) in reserved list @%s:%d");
	_panic("Invalid element for id:0x%llx @%s:%d");
	_panic("Invalid index:%d slab:%d (NULL) for table:%p @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /machine-timeouts/%s @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/%s @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /machine-timeouts/%s-scale @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/%s-scale @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /machine-timeouts/global-scale @%s:%d");
	_panic("%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/global-scale @%s:%d");
	_panic("zombie processor @%s:%d");
	_panic("Invalid size %d for ml_io_read(%p) @%s:%d");
	_panic("Invalid size %d for ml_io_write(%p, 0x%llx) @%s:%d");
	_panic("can't allocate cpu_callback_chain_elem @%s:%d");
	_panic("Unfortunately, cpu_event_unregister_callback is unimplemented. @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("mpsc_queue[%p]: use after cancelation @%s:%d");
	_panic("mpsc_queue[%p]: invalid kind (%d) @%s:%d");
	_panic("mpsc_queue[%p]: use after cancelation @%s:%d");
	_panic("mpsc_queue[%p]: invalid kind (%d) @%s:%d");
	_panic("mpsc_queue[%p]: cancelled twice (%x) @%s:%d");
	_panic("mpsc_queue[%p]: use after cancelation @%s:%d");
	_panic("mpsc_queue[%p]: invalid kind (%d) @%s:%d");
	_panic("thread_deallocate_daemon_init: creating daemon failed (%d) @%s:%d");
	_panic("Bad cons_ops_index: %d @%s:%d");
_paniclog_append_noflush:
	_panic("Non-monotonic time: last_dispatch at 0x%llx, ctime 0x%llx @%s:%d");
	_panic("unexpected mode: %d @%s:%d");
	_panic("perfctl_class invalid @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic(?);
	_panic();
	_panic("rw lock (%p)%s held (mode=%u) @%s:%d");
	_panic("Destroying previously destroyed lock %p @%s:%d");
	_panic(?);
	_panic("rw lock (%p)%s held (mode=%u) @%s:%d");
	_panic("Destroying previously destroyed lock %p @%s:%d");
	_panic("rw lock (%p)%s held (mode=%u) @%s:%d");
	_panic("Taking non-sleepable RW lock with preemption enabled @%s:%d");
	_panic("rw lock count underflow for thread %p @%s:%d");
	_panic("lck_rw_lock(): Invalid RW lock type: %x for lock %p @%s:%d");
	_panic("Taking non-sleepable RW lock with preemption enabled @%s:%d");
	_panic("lck_rw_lock(): Invalid RW lock type: %x for lock %p @%s:%d");
	_panic("Taking non-sleepable RW lock with preemption enabled @%s:%d");
	_panic("rw lock count underflow for thread %p @%s:%d");
	_panic("Releasing non-exclusive RW lock without a reader refcount! @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock(): Invalid RW lock type: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("panic: rw lock exclusive check done outside of kernel debugger @%s:%d");
	_panic("%s was called with an invalid blocking type @%s:%d");
	_panic("rw lock (%p)%s held (mode=%u) @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("Invalid lock sleep action %x @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Non-monotonic time: last_dispatch at 0x%llx, ctime 0x%llx @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Unrecognized scheduler IPI type: %d @%s:%d");
	_panic("Invalid attempt to wait while running the idle thread @%s:%d");
	_panic("%s() called with NO_EVENT @%s:%d");
	_panic("Unrecognized scheduler IPI type: %d @%s:%d");
	_panic("thread_invoke: preemption_level %d, possible cause: %s @%s:%d");
	_panic("Non-monotonic time: last_dispatch at 0x%llx, ctime 0x%llx @%s:%d");
	_panic("Non-monotonic time: invoke at 0x%llx, runnable at 0x%llx @%s:%d");
	_panic("Non-monotonic time: dispatch at 0x%llx, runnable at 0x%llx @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("%s() called with NO_EVENT @%s:%d");
	_panic("%s() called with THREAD_NULL @%s:%d");
	_panic("%s() called with NO_EVENT @%s:%d");
	_panic("Unrecognized scheduler IPI type: %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Unrecognized scheduler IPI event type %d @%s:%d");
	_panic("sched_startup @%s:%d");
	_panic("%s() called with NO_EVENT @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Gap in registered SFI classes @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("stack_init: stack size %p not a multiple of page size %d @%s:%d");
	_panic("stack_alloc: kernel_memory_allocate(size:0x%llx, mask: 0x%llx, flags: 0x%x) failed with %d @%s:%d");
	_panic("stack_collect: vm_map_remove @%s:%d");
	_panic("overflow detected @%s:%d");
	_pe_arm_get_soc_base_phys("-no_slto_panic",SP + 0x18,0x10,0 );
	_pe_arm_get_soc_base_phys("-panic_on_exception_triage",SP + 0x30,0x4,0 );
	_panic("IPC_PTHREAD_PRIORITY subsystem initialization failed @%s:%d");
	_panic("kernel_bootstrap: result = %08X @%s:%d");
	_panic("load_context @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("semaphore_block @%s:%d");
	_panic("NULL continuation passed to %s @%s:%d");
	_panic("Task bank init called with non null bank context for task: %p and bank_context: %p @%s:%d");
	_panic("task_init @%s:%d");
	_panic(0 ,);
	_panic("failed to adopt task %p into corpse coalition: %d @%s:%d");
	_panic("created task is not a member of a resource coalition @%s:%d");
	_panic("failed to adopt task %p into default coalition: %d @%s:%d");
	_panic("couldn't create entries for task ledger template for SFI class 0x%x @%s:%d");
	_panic("couldn't create task ledger template @%s:%d");
	_panic("couldn't create entries for task ledger template @%s:%d");
	_panic(0 ,);
	_panic("task_deallocate(%p): volatile_objects=%d nonvolatile_objects=%d owned=%d\n @%s:%d");
	_panic(0 ,);
	_panic("strange kobject type @%s:%d");
	_panic("task_update_frozen_to_swap_acct: Invalid ledger op @%s:%d");
	_panic("unknown task policy: %d %d %d %d @%s:%d");
	_panic("unknown I/O policy %d @%s:%d");
	_panic("Attempting to set task policy on kernel_task @%s:%d");
	_panic("unknown policy_flavor %d @%s:%d");
	_panic("unknown passive tier %d @%s:%d");
	_panic("unknown tier %d @%s:%d");
	_panic("unknown I/O policy %d @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("thread_deallocate: thread not properly terminated @%s:%d");
	_panic("couldn't create thread ledger template @%s:%d");
	_panic("couldn't create cpu_time entry for thread ledger template @%s:%d");
	_panic("thread_corpse_continue @%s:%d");
	_panic("depress timer failed to inactivate!thread: %p depress_timer_active: %d @%s:%d");
	_panic("wait timer failed to inactivate!thread: %p wait_timer_active: %d @%s:%d");
	_panic("thread_terminate_continue @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread_daemon_init: thread_stack_daemon @%s:%d");
	_panic("thread_daemon_init: thread_exception_daemon @%s:%d");
	_panic();
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(0 ,);
	_panic("guard_exc_info %llx %llx @%s:%d");
	_panic("CPU usage monitor activated, but blocking thread limit exists @%s:%d");
	_panic("thread_terminate @%s:%d");
	_panic("unsafe act_set_kperf operation @%s:%d");
	_panic("Unable to wake up idle thread for termination? @%s:%d");
	_panic("invalid timer flavor: %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread call (%p) on bad queue (old_queue: %p) @%s:%d");
	_panic(0 ,);
	_panic("thread_call_finish: detected over-released thread call: %p @%s:%d");
	_panic("Someone waiting on a thread call that is scheduled for free: %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread call (%p) on bad queue (old_queue: %p) @%s:%d");
	_panic("thread_call group '%s' reached max thread cap (%d): active: %d, blocked: %d, idle: %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread call (%p) on bad queue (old_queue: %p) @%s:%d");
	_panic("thread_call group '%s' reached max thread cap (%d): active: %d, blocked: %d, idle: %d @%s:%d");
	_panic("cannot create new thread call thread %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread_call_thread: preemption_level %d, last callout %p(%p, %p) @%s:%d");
	_panic("thread_terminate() returned? @%s:%d");
	_panic("kcall worker unable to assert wait? @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid thread call pri value: %d @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("_internal_call_allocate: thread_call_internal_queue empty @%s:%d");
	_panic("Invalid thread call pri value: %d @%s:%d");
	_panic("Invalid thread call qos value: %d @%s:%d");
	_panic(0 ,);
	_panic("Refcount negative: %d @%s:%d");
	_panic("Unable to assert wait: %d @%s:%d");
	_panic("Awoken with %d? @%s:%d");
	_panic("Unable to assert wait: %d @%s:%d");
	_panic("Awoken with %d? @%s:%d");
	_panic("thread_call_cancel_wait: can't wait on thread call whose storage I don't own @%s:%d");
	_panic("unsafe thread_call_cancel_wait @%s:%d");
	_panic("thread_call_cancel_wait: deadlock waiting on self from inside call: %p to function %p @%s:%d");
	_panic("thread_call_wait_once: can't wait on thread call whose storage I don't own @%s:%d");
	_panic("thread_call_wait_once: can't wait_once on a non-once call @%s:%d");
	_panic("unsafe thread_call_wait_once @%s:%d");
	_panic("thread_call_wait_once: deadlock waiting on self from inside call: %p to function %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread_group_set_flags: Invalid flags %llu @%s:%d");
	_panic("thread_group_clear_flags: Invalid flags %llu @%s:%d");
	_panic("unknown policy_flavor %d @%s:%d");
	_panic("unknown task policy: %d %d %d @%s:%d");
	_panic("unknown I/O policy %d @%s:%d");
	_panic("unknown effective QoS: %d @%s:%d");
	_panic("unknown requested QoS: %d @%s:%d");
	_panic("Unrecognized QoS %d @%s:%d");
	_panic("unexpected sched policy: %d @%s:%d");
	_panic("unexpected mode: %d @%s:%d");
	_panic("unexpected sched policy: %d @%s:%d");
	_panic("unknown thread policy flavor %d @%s:%d");
	_panic(0 ,);
	_panic("timer_longterm_update_master() on non-boot cpu @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Turnstiles hash table memory allocation failed! @%s:%d");
	_panic(?);
	_panic("turnstile promotion for type %d not yet implemented @%s:%d");
	_panic("Inheritor flags lost along the way @%s:%d");
	_panic("Needs implementation for turnstile_recompute_priority @%s:%d");
	_panic("turnstile promotion for type %d not yet implemented @%s:%d");
	_panic("Missing type in flags (%x) for inheritor (%p) @%s:%d");
	_panic("turnstile promotion for type %d not yet implemented @%s:%d");
	_panic("Unexpected type for turnstile %p @%s:%d");
	_panic("Inheritor flags lost along the way @%s:%d");
	_panic("turnstile promotion for type %d not yet implemented @%s:%d");
	_panic("Inheritor flags not passed in turnstile_update_inheritor @%s:%d");
	_panic("turnstile_is_send_turnstile() called outside of kernel debugger context @%s:%d");
	_panic("ipc_kobject_alloc_port(): failed to allocate port @%s:%d");
	_panic("Couldn't allocate send right for ux_handler_port! @%s:%d");
	_panic("host_set_exception_ports failed to set ux_handler! %d @%s:%d");
	_panic("kernel_memory_allocate() failed to alloc global_waitqs, error: %d, whsize: 0x%x @%s:%d");
	_panic("waitq(%p) lock timeout after %llu ticks; cpu=%d, cticket: 0x%x, nticket: 0x%x, waiting for 0x%xstart time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("Trying to assert_wait on a turnstile proxy that hasn't been donated one (waitq: %p) @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread already waiting on %p @%s:%d");
	_panic("Invalid WQP_POST member 0x%llx in waitq set 0x%llx prepost list (first:%llx, wqp:%p) @%s:%d");
	_panic("Thread %p is blocked on an invalid waitq %p @%s:%d");
	_panic("Trying to clear_wait on a turnstile proxy that hasn't been donated one (waitq: %p) @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Couldn't allocate prepost object! @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(0 ,);
	_panic("Can't allocate link object for waitq set: %p @%s:%d");
	_panic("trying to de-initialize an invalid wqset @%p @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Couldn't reserve %d preposts for waitq @%p (wqp@%p) @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("zalloc: zone map exhausted while allocating from zone [%s%s], likely due to memory leak in zone [%s%s] (%luM, %d elements allocated) @%s:%d");
	_panic("zone map exhaustion: waited for %dms (pages: %ld, max: %ld, wanted: %d) @%s:%d");
	_panic("zba_populate: out of bitmap space, likely due to memory leak in zone [%s%s] (%luM, %d elements allocated) @%s:%d");
	_panic("unable to allocate early gap (%d pages): %d @%s:%d");
	_panic("zone_create: element size too large: %zd @%s:%d");
	_panic("zone_element_encode doesn't work for zone [%s] @%s:%d");
	_panic("zone_create: invalid desired zone ID %d for %s @%s:%d");
	_panic("zone_create: ID %d (%s) must be permanent @%s:%d");
	_panic("zone_create: creating zone ID %d (%s) twice @%s:%d");
	_panic("zone_create: per-cpu zone has too much fragmentation @%s:%d");
	_panic("Fragmentation greater than 10%% with elem size %d zone %s%s @%s:%d");
	_panic("allocating caches for zone %s twice @%s:%d");
	_panic(0xfffffff00780ea90,);
_panic:
	_panic("zone '%s%s' exhausted @%s:%d");
	_panic(0xfffffff00780ea90,);
	_panic("kernel_memory_allocate() of %u pages failed @%s:%d");
	_panic(?);
	_panic("%s: unable to allocate %zd bytes (%d) @%s:%d");
	_panic("Zone %s should be empty upon userspace reboot. Actual size: %lu. @%s:%d");
	_panic(0xfffffff00780ea90,);
	_panic("zdestroy: Zone %s%s isn't destructible @%s:%d");
	_panic("zdestroy: Zone %s%s in an invalid state for destruction @%s:%d");
	_paniclog_append_noflush("Zone info:\n");
	_paniclog_append_noflush("%-10s: %p - %p\n");
	_paniclog_append_noflush("Metadata  : %p - %p\n");
	_paniclog_append_noflush("Bitmaps   : %p - %p\n");
	_paniclog_append_noflush("%-20s %10lu\n");
	_paniclog_append_noflush("\n%-5s %10s\n");
	_paniclog_append_noflush("%-5lld %10lld\n");
	_paniclog_append_noflush("kalloc types in zone, %s (%s):\n");
	_paniclog_append_noflush("\t%-50s\n");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("kalloc types in zone, %s (%s):\n");
	_paniclog_append_noflush("\t%-50s\n");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("Largest zones:\n%-28s %10s %10s\n");
	_paniclog_append_noflush("%-8s%-20s %9luM %9luK\n");
	_panic("%s: bad credential %p @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: called after zone_create() @%s:%d");
	_panic("zdestroy: Zone %s%s isn't empty at zdestroy() time @%s:%d");
	_panic("swap_task_map @%s:%d");
	_panic("mach_bridge_add_timestamp: thread_timestamp_calibration @%s:%d");
	_panic(SP + 0x8);
	_panic(?);
	_panic("%s: bad credential %p @%s:%d");
	_panic(?);
	_panic();
	_panic(?);
	_panic(0 ,);
	_panic("unaligned acccess to socd trace ram @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("corpse in flight count over-release @%s:%d");
	_panic(0 ,);
	_panic("corpse in flight count over-release @%s:%d");
	_panic("%s: Overflow in required buffer size estimate @%s:%d");
	_panic(0 ,);
	_panic("invalid compression flag 0x%llx in kcdata_write_compression_stats @%s:%d");
	_panic("kcdata_init_compress_state: invalid compression type: %d @%s:%d");
	_panic("%s: unknown compression method @%s:%d");
	_panic("invalid compression type 0x%llx in kcdata_do_compress @%s:%d");
	_panic("zlib kcdata compression ret = %d @%s:%d");
	_panic("%s: unknown compression method @%s:%d");
	_panic("invalid compression flag 0x%llx in kcdata_write_compression_stats @%s:%d");
	_panic("invalid compression type 0x%llxin kcdata_finish_compression @%s:%d");
	_panic("Bogus bank type: %d passed in voucher_command @%s:%d");
	_panic("Bogus bank type: %d passed in get_value @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic("Bogus bank type: %d passed in get_value @%s:%d");
	_panic("Releasing a non zero ref bank account %p @%s:%d");
	_panic("couldn't create bank ledger template @%s:%d");
	_panic("couldn't create cpu_time entry for bank ledger template @%s:%d");
	_panic("couldn't create energy entry for bank ledger template @%s:%d");
	_panic("BANK subsystem initialization failed @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("Bogus bank type: %d passed in bank_get_preadopt_thread_group @%s:%d");
	_panic("Bogus bank type: %d passed in bank_get_voucher_bank_account @%s:%d");
	_panic("ipc_pthread_priority_release_value called for a persistent PTHPRIORITY value %x with sync value %d @%s:%d");
	_panic("IPC_PTHREAD_PRIORITY subsystem initialization failed @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("vnode_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("vnode_pager_data_initialize @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("vnode_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic(?);
	_panic(0xfffffff009f06f00);
	_panic("vnode_pager_setup: vnode_object_create() failed @%s:%d");
	_panic("vm_compressor_init: Failed to start the internal pageout thread. @%s:%d");
	_panic("vm_compressor_init: kmem_suballoc failed - 0x%llx @%s:%d");
	_panic("vm_compressor_init: kernel_memory_allocate failed - c_segments @%s:%d");
	_panic("vm_compressor_init: kernel_memory_allocate failed - c_buffers @%s:%d");
	_panic("vm_compressor_init: Unable to allocate %zd bytes @%s:%d");
	_panic("vm_compressor_swap_trigger_thread: create failed @%s:%d");
	_panic("c_seg %p has bad c_state = %d @%s:%d");
	_panic("c_seg %p requesting bad c_state = %d @%s:%d");
	_panic(?);
	_panic("overflow detected @%s:%d");
	_panic("c_decompress_page: c_segno %d >= c_segments_available %d, slot_ptr(%p), slot_data(%x) @%s:%d");
	_panic("c_decompress_page: c_segno %d is free, slot_ptr(%p), slot_data(%x) @%s:%d");
	_panic("c_decompress_page: c_indx %d >= c_nextslot %d, c_seg(%p), slot_ptr(%p), slot_data(%x) @%s:%d");
	_panic("c_decompress_page: c_size == 0, c_seg(%p), slot_ptr(%p), slot_data(%x) @%s:%d");
	_panic("panic: spinlock acquired check done outside of kernel debugger @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("panic: rw lock exclusive check done outside of kernel debugger @%s:%d");
	_panic("C_KDP passed to decompress page from outside of debugger context @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("compressor_memory_object_data_reclaim @%s:%d");
	_panic("compressor_memory_object_last_unmap @%s:%d");
	_panic("compressor_memory_object_map @%s:%d");
	_panic("compressor_memory_object_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("compressor_memory_object_data_unlock() @%s:%d");
	_panic("do a data_return() if slot for this page is empty @%s:%d");
	_panic("compressor: data_return @%s:%d");
	_panic("compressor: data_request @%s:%d");
	_panic("compressor_memory_object_data_request(): bad alignment @%s:%d");
	_panic("%s: offset 0x%llx overflow @%s:%d");
	_panic("compressor_memory_object_init: bad request @%s:%d");
	_panic();
	_panic(?);
	_panic("compressor_memory_object_deallocate(): bad request @%s:%d");
	_panic(0 ,);
	_panic("%s: offset 0x%llx overflow @%s:%d");
	_panic("%s: size 0x%llx overflow @%s:%d");
	_panic("%s: offset 0x%llx overflow @%s:%d");
	_panic("vm_compressor_pager_put: out of range @%s:%d");
	_panic("%s: offset 0x%llx overflow @%s:%d");
	_panic();
	_panic("%s: offset 0x%llx overflow @%s:%d");
	_panic("vm_swapout_thread: create failed @%s:%d");
	_panic("vm_swapfile_create_thread: create failed @%s:%d");
	_panic("vm_swapfile_gc_thread: create failed @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(SP + 0x18);
	_panic("overflow detected @%s:%d");
	_panic("vm_swap_reclaim: kernel_memory_allocate failed @%s:%d");
	_panic(SP + 0x18);
	_panic(0 ,);
	_panic(0xfffffff009f03fb8);
	_panic(SP + 0x18);
	_panic(?);
	_panic(0 ,);
	_panic("overflow detected @%s:%d");
	_panic(0xfffffff009f040d0);
	_panic("WKDMC(%p, %p) error, code: 0x%x @%s:%d");
	_panic("vm_phantom_cache_init: kernel_memory_allocate failed @%s:%d");
	_panic("didn't find ghost in hash @%s:%d");
	_panic(?);
	_panic("device_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("device_pager_data_initialize @%s:%d");
	_panic("device_pager_data_return: lookup failed @%s:%d");
	_panic("device_pager_data_request: lookup failed @%s:%d");
	_panic("device_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic("device_pager_setup: device_object_create() failed @%s:%d");
	_panic("device_pager_populate_object: list_req failed @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("overflow detected @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("vm_object_update: unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("memory_object_synchronize_completed no longer supported @%s:%d");
	_panic("unexpected IKOT_MEM_OBJ_CONTROL: %p @%s:%d");
	_panic("memory_object_syncrhonize no longer supported @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("Write fault on compressor map, va: %p type: %u bounds: %p->%p @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_fault: unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("%s:%d should not zero-fill page at offset 0x%llx in external object %p @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("CODE SIGNING: process %d[%s]: rejecting invalid page (phys#0x%x) at address 0x%llx from offset 0x%llx in file "%s%s%s" (cs_mtime:%lu.%ld %s mtime:%lu.%ld) (signed:%d validated:%d tainted:%d nx:%dwpmapped:%d dirty:%d depth:%d)\n @%s:%d");
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic("vm_fault_page(): unexpected error %d from vm_compressor_pager_get()\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_fault_unwire: failure @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_fault_copy: unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_fault_copy(2): unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("panic: rw lock exclusive check done outside of kernel debugger @%s:%d");
	_panic("kdp_lightweight_fault called from outside of debugger context @%s:%d");
	_panic("Bad compare and swap in diagnose! @%s:%d");
	_panic("kmem_alloc_aligned: size not aligned @%s:%d");
	_panic("Bad compare and swap in setup! @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("kernel_memory_allocate(%p): wire_count overflow @%s:%d");
	_panic("kernel_memory_allocate: VM is not ready @%s:%d");
	_panic("kernel_memory_allocate: wired_page_list == NULL @%s:%d");
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic("kernel_memory_allocate: non empty list @%s:%d");
	_panic("kernel_memory_allocate: guard_page_list == NULL @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("%s: page_list too short @%s:%d");
	_panic("%s(%p): wire_count overflow @%s:%d");
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic("%s(%p,0x%llx,0x%llx,0x%x): !KMA_KOBJECT @%s:%d");
	_panic("%s: page_list too long @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("kernel_memory_depopulate(%p,0x%llx,0x%llx,0x%x): !KMA_KOBJECT @%s:%d");
	_panic("kmem_realloc @%s:%d");
	_panic("kmem_alloc_aligned: size not aligned @%s:%d");
	_panic("kmem_free @%s:%d");
	_panic("kmem_suballoc: vm_map_create failed @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("%s: %s range invalid min:%p > max:%p @%s:%d");
	_panic("%s: %s range invalid min:%p <= base:%p @%s:%d");
	_panic("%s: %s range invalid max:%p >= max packable:%p @%s:%d");
	_panic("Attempting to clip an atomic VM entry! (map: %p, entry: %p) @%s:%d");
	_panic("VM_FLAGS_RETURN_DATA_ADDR not expected for raw memory object. @%s:%d");
	_panic("VM_FLAGS_RETURN_DATA_ADDR not expected for submap. @%s:%d");
	_panic("invalid VM named entry %p @%s:%d");
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic(0 ,);
	_panic("Found an existing entry (%p) instead of potential hole at address: 0x%llx. @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic(?);
	_panic("Invalid vm_map_copy_t sz:%lld, ofst:%lld @%s:%d");
	_panic(0 ,);
	_panic("%s:%d @%s:%d");
	_panic("vm_map_wire: re-lookup failed @%s:%d");
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic(0 ,);
	_panic("%s(%p,0x%llx,0x%llx): attempt to remove permanent VM map entry %p [0x%llx:0x%llx]\n @%s:%d");
	_panic("vm_map_delete(%p,0x%llx,0x%llx): hole after %p at 0x%llx\n @%s:%d");
	_panic("vm_map_delete(%p,0x%llx,0x%llx): no map entry at 0x%llx\n @%s:%d");
	_panic("vm_map_unwire: in_transition entry @%s:%d");
	_panic("vm_map_unwire: start not found @%s:%d");
	_panic("vm_map_unwire: entry is unwired @%s:%d");
	_panic("vm_map_unwire: non-contiguous region @%s:%d");
	_panic("vm_map_unwire: re-lookup failed @%s:%d");
	_panic(0 ,);
	_panic("vm_map_wire: too many wirings @%s:%d");
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic("vm_map_copyout: wiring %p @%s:%d");
	_panic("Found an existing entry (%p) instead of potential hole at address: 0x%llx. @%s:%d");
	_panic();
	_panic("Invalid vm_map_copy_t sz:%lld, ofst:%lld @%s:%d");
	_panic("Nothing being freed to a zone map. start = end = %p @%s:%d");
	_panic("vm_map_clip_unnest(0x%llx,0x%llx): bad nested entry: start=0x%llx end=0x%llx\n @%s:%d");
	_panic(0 ,);
	_panic("Found an existing entry (%p) instead of potential hole at address: 0x%llx. @%s:%d");
	_panic("vm_map_submap: pmap_nest failed, rc = %08X @%s:%d");
	_panic("vm_map_protect(%p,0x%llx,0x%llx) new=0x%x wired=%x @%s:%d");
	_panic(0 ,);
	_panic("Found an existing entry (%p) instead of potential hole at address: 0x%llx. @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("vm_map_fork_share: pmap_nest failed! @%s:%d");
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("Failed to reserve %s region in user map %p %d @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("userspace has access to a kernel map %p @%s:%d");
	_panic(0 ,);
	_panic("no entry @%s:%d");
	_panic("VM map lookups need RB tree support. @%s:%d");
	_panic("NO SUCH ENTRY %p. Gave back %p @%s:%d");
	_panic("Cur: %p, L: %p, R: %p @%s:%d");
	_panic("no entry @%s:%d");
	_panic("VMSEL: INSERT FAILED: 0x%lx, 0x%lx, 0x%lx, 0x%lx @%s:%d");
	_panic("NO ENTRY TO DELETE @%s:%d");
	_panic(?);
	_panic();
	_panic("Hole hint failed: Hole entry start: 0x%llx, entry start: 0x%llx, map hole start: 0x%llx, map hint start: 0x%llx @%s:%d");
	_panic("Hole hint failed: Hole entry end: 0x%llx, entry start: 0x%llx, map hole start: 0x%llx, map hint start: 0x%llx @%s:%d");
	_panic(?);
	_panic("Illegal action: h1: %p, s:0x%llx, e:0x%llx...h2:%p, s:0x%llx, e:0x%llx...h3:0x%p, s:0x%llx, e:0x%llx @%s:%d");
	_panic("Could not create io_reprioritize_thread @%s:%d");
	_panic();
	_panic("failed to launch vm_object_reaper_thread kr=0x%x @%s:%d");
	_panic(0xfffffff009f05f68);
	_panic(?);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_deallocate: losing kernel_object @%s:%d");
	_panic("vm_object_deallocate: losing retired_pages_object @%s:%d");
	_panic("vm_object_deallocate: losing compressor_object @%s:%d");
	_panic();
	_panic("vm_object_collapse() attempting to collapse purgeable object: %p(%d) %p(%d)\n @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f05f58);
	_panic(0xfffffff009f05f68);
	_panic("%s: object %p has unsupported ledger_tag %d @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic(0xfffffff009f05f58);
	_panic(0xfffffff009f06f00);
	_panic(0xfffffff009f05f58);
	_panic(0 ,);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("object %p all_reusable: can't update pmap stats @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_copy_slowly: unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("copy_strategically: bad strategy @%s:%d");
	_panic("vm_object_shadow: no object for shadowing @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_compressor_pager_create(): no pager for object %p size 0x%llx\n @%s:%d");
	_panic("vm_object_compressor_pager_create: mismatch (pager: %p, pager_object: %p, orig_object: %p, orig_object size: 0x%llx) @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_populate_with_private - %p not private @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("%s(%p): volatile=%d nonvolatile=%d owned=%d q=%p q_first=%p q_last=%p @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("reservation without pageout? @%s:%d");
	_panic("missing pager for copy object @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic("vm_pageout: no victim @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("vm_pageout_iothread_external: create failed @%s:%d");
	_panic("vm_pageout_garbage_collect: create failed @%s:%d");
	_panic("vm_pressure_thread: create failed @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("vm_pageout_internal_start: Unable to allocate %zd bytes @%s:%d");
	_panic(?);
	_panic("vector_upl_deallocate was passed a NULL upl @%s:%d");
	_panic("vector_upl_deallocate was passed a non-vectored upl @%s:%d");
	_panic("Deallocating non-empty Vectored UPL @%s:%d");
	_panic("upl(%p) ext_ref_count @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic(?);
	_panic(0xfffffff009f06f00);
	_panic(0 ,);
	_panic("need corner case for fictitious page @%s:%d");
	_panic("vm_object_upl_request: contiguous object specified @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_upl_request: external object with non-zero paging offset @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_super_upl_request: Missed target pageout %#llx,%#llx, %#x, %#x, %#x, %#llx\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic();
	_panic("vm_object_iopl_request: Wired page missing. @%s:%d");
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_iopl_request: unexpected error 0x%x from vm_fault_page()\n @%s:%d");
	_panic("vm_object_iopl_request: external object with non-zero paging offset @%s:%d");
	_panic("vm_object_activity_begin(%p): overflow\n @%s:%d");
	_panic("vm_object_iopl_request: missing/bad page in kernel object @%s:%d");
	_panic("vm_object_iopl_request: missing/bad page in compressor object @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic("vm_upl_map: page missing @%s:%d");
	_panic("getting sub-upl iostate when none exists @%s:%d");
	_panic("vm_map_enter failed for a Vector UPL @%s:%d");
	_panic("vector_upl_get_submap was passed a NULL UPL @%s:%d");
	_panic("vector_upl_get_iostate was passed a NULL UPL @%s:%d");
	_panic("Only %d of the %d sub-upls within the Vector UPL are alread mapped @%s:%d");
	_panic("TODO4K: vector UPL not implemented @%s:%d");
	_panic("Vector UPL submap allocation failed @%s:%d");
	_panic("vector_upl_get_submap was passed a NULL UPL @%s:%d");
	_panic("getting sub-upl iostate when none exists @%s:%d");
	_panic("vector_upl_get_iostate was passed a NULL UPL @%s:%d");
	_panic("vector_upl_get_submap was passed a null UPL @%s:%d");
	_panic("%d of the %d sub-upls within the Vector UPL is/are not mapped @%s:%d");
	_panic("vector_upl_get_submap was passed a null UPL @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic(0 ,);
	_panic("wire_count == 0, m = %p, obj = %p @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic("Vector UPL offset miscalculation @%s:%d");
	_panic("Trying to remove sub-upl when none exists @%s:%d");
	_panic("vector_upl_set_subupl was passed a NULL upl @%s:%d");
	_panic("vector_upl_set_subupl was passed a NULL upl element @%s:%d");
	_panic("Vector UPL offset miscalculation @%s:%d");
	_panic();
	_panic("upl_abort_range: kernel_object being DUMPED @%s:%d");
	_panic("Vector UPL offset miscalculation @%s:%d");
	_panic("vm_object_activity_end(%p): underflow\n @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("iopl_valid_data: busy+absent page on page queue @%s:%d");
	_panic("iopl_valid_data: busy page w/o absent @%s:%d");
	_panic("iopl_valid_data: %p is reusable @%s:%d");
	_panic("iopl_valid_data: %p already wired @%s:%d");
	_panic("iopl_valid_data: missing expected page at offset %lx @%s:%d");
	_panic("iopl_valid_data: NULL upl @%s:%d");
	_panic("iopl_valid_data: unsupported upl, flags = %x @%s:%d");
	_panic("iopl_valid_data: object == kernel or compressor @%s:%d");
	_panic("iopl_valid_data: object %p purgable %d @%s:%d");
	_panic("iopl_valid_data: vector upl @%s:%d");
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic("vector_upl_set_pagelist was passed a NULL upl @%s:%d");
	_panic("setting sub-upl iostate when none exists @%s:%d");
	_panic("vector_upl_set_iostate was passed a NULL UPL @%s:%d");
	_panic("vector_upl_get_iostate_byindex was passed a NULL UPL @%s:%d");
	_panic("upl_set_referenced not %p @%s:%d");
	_panic("unmarked object on purgeable q @%s:%d");
	_panic("marked object not on purgeable q @%s:%d");
	_panic("vm_purgeable_accounting(%p): unexpected old_state=%d\n @%s:%d");
	_panic("pmap_steal_memory() size: 0x%llx @%s:%d");
	_panic("pmap_steal_memory() pmap_enter failed, map_addr=%#lx, phys_page=%u @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("pmap_startup(): too many pages to support vm_page packing @%s:%d");
	_panic("VM_PAGE_PACK_PTR failed on &vm_pages[0] - %p @%s:%d");
	_panic("VM_PAGE_PACK_PTR failed on &vm_pages[vm_pages_count-1] - %p @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic(0xfffffff009f06f40,);
	_panic(0xfffffff009f06f40);
	_panic("overflow detected @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_page_insert_internal: (page=%p,obj=%p,off=0x%llx,size=0x%llx) inserted at offset past object bounds @%s:%d");
	_panic("vm_page_queues_remove - bad page q_state (%p, %d) @%s:%d");
	_panic("vm_page_check_pageable_safe: trying to add pagefrom kernel object (%p) to pageable queue @%s:%d");
	_panic("vm_page_check_pageable_safe: trying to add pagefrom compressor object (%p) to pageable queue @%s:%d");
	_panic("vm_page_check_pageable_safe: trying to add pagefrom submap object (%p) to pageable queue @%s:%d");
	_panic(0xfffffff009f06f00,);
	_panic(?);
	_panic("panic: kdp_vm_page_lookup done outside of kernel debugger @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic(?);
	_panic(0xfffffff009f06f00);
	_panic(0xfffffff009f06f40);
	_panic(0xfffffff009f06f00);
	_panic(0xfffffff009f06f40);
	_panic("VM page %p should not have an error\n @%s:%d");
	_panic(0 ,);
	_panic(0xfffffff009f06f40);
	_panic(?);
	_panic("vm_page_wire(%p): wire_count overflow @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_page_reactivate_local: count = %d, vm_page_local_count = %d @%s:%d");
	_panic("vm_page_reactivate_local: found vm_page_t(%p) with wrong cpuid @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic("shared_region: sr_cache_header.imagesTextCount >= UINT32_MAX @%s:%d");
	_panic();
	_panic("shared_region_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("shared_region_pager_data_initialize: should never get called @%s:%d");
	_panic("shared_region_pager_data_return: should never get called @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("shared_region_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("shared_region_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic("shared_region_find_key() no key for region '%s' @%s:%d");
	_panic(?);
	_panic("shared_region_key_alloc() inherited key mismatch @%s:%d");
	_panic(?);
	_panic("shared_region_key_dealloc() Shared region ID '%s' not found @%s:%d");
	_panic(?);
	_panic("swapfile_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("swapfile_pager_data_initialize: should never get called @%s:%d");
	_panic("swapfile_pager_data_return: should never get called @%s:%d");
	_panic("swapfile_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("parent_entry %p is_copy not supported @%s:%d");
	_panic("Shouldn't be using data address with a parent entry that is a submap. @%s:%d");
	_panic("unsupported type of mem_entry %p @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("ipc_kobject_alloc_port(): failed to allocate port @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__memset_chk object size check failed: dst %p, c %c, (%zu < %zu) @%s:%d");
	_panic("__strlcat_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__strncpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__strncat_chk object size check failed: dst %p, src %p, (%zu < %zu + %zu + 1) @%s:%d");
	_panic("__strcpy_chk object size check failed: dst %p, src %p, (%zu < %zu + 1) @%s:%d");
	_panic("__strcat_chk object size check failed: dst %p, src %p, (%zu < %zu + %zu + 1) @%s:%d");
	_panic("kperf: sampling was %d when asked to enable @%s:%d");
	_panic("kperf: sampling was %d during disable @%s:%d");
	_panic("kperf: sampling was %d when asked to disable @%s:%d");
	_panic("kperf: sampling was %d during disable @%s:%d");
	_panic("kperf: sampling was %d when asked to disable @%s:%d");
	_panic("kperf: sampling was %d when asked to enable @%s:%d");
	_panic("kperf: pending AST to non-current thread @%s:%d");
	_panic("HUH @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("kperf: failed to create PET thread %d @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("kperf: timer fired at %llu, but sampling is disabled @%s:%d");
	_panic("kperf: unknown sampling state 0x%x @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("perfmon: unpaired release: %s on %u @%s:%d");
	_panic("perfmon: reserving source twice: %d @%s:%d");
	_panic(?);
	_panic("perfmon: destroying config that wasn't active: %p @%s:%d");
	_panic("serial_keyboard_init @%s:%d");
	_panic("serial_keyboard_poll: Shouldn't never ever get here... @%s:%d");
	_panic("console_ring_init() failed to allocate ring buffer, error %d @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad cons_ops_index: %d @%s:%d");
	_panic("Console I/O from interrupt-disabled context @%s:%d");
	_panic("Bad cons_ops_index: %d @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Expected %lu seed bytes from bootloader, but got %u. @%s:%d");
	_panic("ccdrbg_init() returned %d @%s:%d");
	_panic("read_erandom ccdrbg error %d @%s:%d");
	_panic("random_cpu_init: kernel prng has not been installed @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("read_erandom ccdrbg error %d @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("apple_protect_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("apple_protect_pager_data_initialize: should never get called @%s:%d");
	_panic("apple_protect_pager_data_return: should never get called @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("apple_protect_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("apple_protect_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic("fourk_pager_synchronize: memory_object_synchronize no longer supported @%s:%d");
	_panic("fourk_pager_data_initialize: should never get called @%s:%d");
	_panic("fourk_pager_data_return: should never get called @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("vm_object_paging_begin(%p): overflow\n @%s:%d");
	_panic("fourk_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d");
	_panic("vm_object_paging_end(%p): underflow\n @%s:%d");
	_panic("fourk_pager_init: memory_object_change_attributes() failed @%s:%d");
	_panic("PMAP_CS [CoreEntitlements]: encountered an unrecoverable error @%s:%d");
	_panic("PMAP_CS: passed in a NULL address @%s:%d");
	_panic("PMAP_CS: address not within kernel memory: %p @%s:%d");
	_panic("PMAP_CS: zero length data not allowed for: %p @%s:%d");
	_panic("PMAP_CS: length causes an address overflow: %p + %lu @%s:%d");
	_panic("PMAP_CS: address end not within kernel memory: %p @%s:%d");
	_panic("PMAP_CS: address range spans through the read-only zone: %p through %p @%s:%d");
	_panic("%s(%p): physical page 0x%llx belongs to PPL @%s:%d");
	_panic("%s: Invalid or non-kernel-managed physical page returned, pa: %#llx, va: %p @%s:%d");
	_panic("%s(%p): attempt to pin static mapping for page 0x%llx @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s(%p, 0x%llx): overflow @%s:%d");
	_panic("%s: Invalid or non-kernel-managed physical page returned, pa: %#llx, va: %p @%s:%d");
	_panic("%s(%p): physical page 0x%llx not pinned @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s(%p, 0x%llx): overflow @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("PMAP_CS: attempted to query kernel_pmap for entitlements @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: Current thread's pmap doesn't match up with TTBR0 %#llx %#llx");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("%s: physical aperture PTE %p has hint bit set, va=%p, pte=0x%llx @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("attempt to auth user pointer without process independent key @%s:%d");
	_panic("attempt to sign user pointer without process independent key @%s:%d");
	_panic("%s: invalid PV head 0x%llx for TTE 0x%llx @%s:%d");
	_panic("%s: Passed in pmap doesn't own the page table to be deleted ptd=%p ptd->pmap=%p pmap=%p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s: L%d TTE is already empty. Potential double unmap or memory stomper? pmap=%p ttep=%p @%s:%d");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("%s: Found inconsistent state in soon to be deleted L%d table: %d valid, %d compressed, %d non-empty, refcnt=%d, L%d tte=%#llx, pmap=%p, bpte=%p @%s:%d");
	_panic("compressed PTE %p 0x%llx has extra bits 0x%llx: corrupted? @%s:%d");
	_panic("%s: invalid PV head 0x%llx for TTE 0x%llx @%s:%d");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("pmap_tt_deallocate(): ptdp %p, count %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("free blob to add unaligned: (%p,%p)/%zu @%s:%d");
	_panic("blob free count overflow (bin %d, %d/%d) @%s:%d");
	_panic("blob page count overflow (bin %d, %d/%d) @%s:%d");
	_panic("%s: attempt to remove mapping of writable PPL-protected I/O address 0x%llx @%s:%d");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("pmap %p (pte %p): wired count underflow @%s:%d");
	_panic("%s: PTE range [%p, %p) in pmap %p crosses page table boundary @%s:%d");
	_panic("compressed PTE %p 0x%llx has extra bits 0x%llx: corrupted? @%s:%d");
	_panic("pmap_remove_range_options: over-release of ptdp %p for pte [%p, %p) @%s:%d");
	_panic("compressed PTE %p 0x%llx has extra bits 0x%llx: corrupted? @%s:%d");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("PMAP_CS: unexpected PV head type at %p @%s:%d");
	_panic("%s: invalid PV head 0x%llx for PTE 0x%p @%s:%d");
	_panic("PMAP_CS: PNX bit not set for PTE: %p @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: Current thread's pmap doesn't match up with TTBR0 %#llx %#llx");
	_panic("%s: failed pmap_enter, virt=%p, start_addr=%p, end_addr=%p, prot=%#x, flags=%#x @%s:%d");
	_panic("%s: no PTE for vaddr=%p, virt=%p, start=%p, end=%p, prot=0x%x, options=0x%x @%s:%d");
	_panic("pmap_map_bd @%s:%d");
	_panic("%s: insufficient pages, pa_start=%p, len=%p, prot=0x%x @%s:%d");
	_panic("%s: area too large, pa_start=%p, len=%p, prot=0x%x @%s:%d");
	_panic("pmap-max-asids cannot be zero @%s:%d");
	_pe_arm_get_soc_base_phys("pmap_panic_dev_wimg_on_managed",0xfffffff007813698,0x4,0 );
	_panic("overflow detected @%s:%d");
	_panic("pmap-max-asids property is not a 32-bit integer @%s:%d");
	_panic("pmap-max-asids too large @%s:%d");
	_panic("pmap_max_64bit_offset illegal option 0x%x @%s:%d");
	_panic("pmap_max_32bit_offset illegal option 0x%x @%s:%d");
	_panic("pai %d already locked down @%s:%d");
	_panic("%s: Invalid or non-kernel-managed physical page returned, pa: %#llx, va: %p @%s:%d");
	_panic("pmap_protect_options() pmap %p start 0x%llx end 0x%llx @%s:%d");
	_panic("%s: failed pmap_enter_addr, pmap=%p, va=%#llx, pa=%llu, size=%u, prot=%#x, flags=%#x @%s:%d");
	_panic("pmap_attribute_cache_sync size: 0x%llx @%s:%d");
	_panic("%s: invalid index %u @%s:%d");
	_panic("attempt to sign user pointer without process independent key @%s:%d");
	_panic("attempt to auth user pointer without process independent key @%s:%d");
	_panic("%s: no ptep? @%s:%d");
	_panic("%s: failed to insert the shared page, kr=%d, pmap=%p @%s:%d");
	_panic("pmap_max_64bit_offset illegal option 0x%x @%s:%d");
	_panic("pmap_max_32bit_offset illegal option 0x%x @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: %u addr 0x%llx length 0x%llx overlaps physical memory @%s:%d");
	_panic("%s: %u addr 0x%llx is not page-aligned @%s:%d");
	_panic("%s: %u length 0x%llx is not page-aligned @%s:%d");
	_panic("%s: %u addr 0x%llx length 0x%llx wraps around @%s:%d");
	_panic("%s: physical address is 0 @%s:%d");
	_panic("%s: ptep=%p (pai=0x%x) not in pvh=%p @%s:%d");
	_panic("%s: PVH entry at pai %d is locked down (%#lx), cannot remove @%s:%d");
	_panic("%s: ptep=%p does not match pvh=%p (%p), pai=0x%x @%s:%d");
	_panic("%s: unexpected PV head %p, ptep=%p pmap=%p pvh=%p pai=0x%x @%s:%d");
	_panic("%s: pmap array index %lu >= limit %lu @%s:%d");
	_panic("%s: pmap %p does not match array element %p at index %lu @%s:%d");
	_panic("%s: pmap %p is not in use @%s:%d");
	_panic("%s: failed, no pages available? kr=%d @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Returned from exception_triage()? @%s:%d");
	_panic("Inconsistent memory config @%s:%d");
	_panic("map aperture_phys_addr[%u]/%#x failed @%s:%d");
	_panic("%s: aperture-size (%#x) is insufficent to cover plane-count (%#x) of plane-stride (%#x) bytes @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("lock-regs: /chosen/lock-regs not found (your iBoot or EDT may be too old) @%s:%d");
	_panic("lock-regs: /chosen/lock-regs/%s not found @%s:%d");
	_panic("%s: have %u apertures, but 0 size @%s:%d");
	_panic("%s: %s %u exceeds maximum %u @%s:%d");
	_panic("%s: missing required %s @%s:%d");
	_panic("%s: aperture-phys-addr size (%#x) != (aperture-count (%#x) * PA size (%#zx) = %#lx) @%s:%d");
	_panic("lock-regs: /chosen/lock-regs/%s/%s not found @%s:%d");
	_panic("lock-regs: cannot find required property '%s' @%s:%d");
	_panic("%s: plane-count (%u) > 1, but stride is 0/missing @%s:%d");
	_panic("lock-regs: unexpected size %u @%s:%d");
	_panic("%s: missing property '%s' @%s:%d");
	_panic("lock-regs: unexpected size %u @%s:%d");
	_panic("%s(%p, %p, %lu) - transfer too large @%s:%d");
	_panic("%s(%p, %p, %lu) - kaddr not in kernel @%s:%d");
	_panic("copyio_preflight: kernel buffer 0x%lx has size %lu < nbytes %lu @%s:%d");
	_panic("unable to ml_io_map coresight regions @%s:%d");
	_panic("Unknown CPU subtype... @%s:%d");
	_panic("Unable to allocate cpu interrupt stack @%s:%d");
	_panic("Unable to allocate cpu exception stack @%s:%d");
	_panic("CPU%u has failed to respond to cross-call after %llu nanoseconds (timeout = %llu ns) @%s:%d");
	_panic("%s: invalid bit index (%u) @%s:%d");
	_panic("%s: illegal PA: 0x%llx; phys base 0x%llx, size 0x%llx @%s:%d");
	_panic("%s: illegal VA: %p; virt base 0x%llx, size 0x%llx @%s:%d");
	_panic("EXTRADATA is in an unexpected place: %#lx > %#lx @%s:%d");
	_panic("auxkc_base (%p) not below segLOWEST (%p) @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: cpte=%#llx is not empty, vaddr=%#lx, pte=%#llx @%s:%d");
	_panic("Unsupported memory configuration %lx @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("DeviceTree overflow: %p, size %#zx @%s:%d");
	_panic("segLOWESTAuxKC (%p) not equal to segLOWEST (%p). auxkc_mh: %p, auxkc_base: %p @%s:%d");
	_panic("%s: PTOV table limit exceeded; segment va = 0x%llx, size = 0x%llx @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: invalid index %u @%s:%d");
	_panic("%s: paddr 0x%llx spans a page boundary @%s:%d");
	_panic("%s: invalid index %u @%s:%d");
	_panic("Invalid size %d for ml_phys_read_data @%s:%d");
	_panic("%s: paddr 0x%llx spans a page boundary @%s:%d");
	_panic("%s: invalid index %u @%s:%d");
	_panic("Invalid size %d for ml_phys_write_data @%s:%d");
	_panic("%s: no more than 1 parameter may be virtual @%s:%d");
	_panic("clr_be_bit @%s:%d");
	_panic("ml_probe_read() unimplemented @%s:%d");
	_panic("ml_probe_read_64() unimplemented @%s:%d");
	_panic("Not yet implemented. @%s:%d");
	_panic("Abort. @%s:%d");
	_panic("%s address error: passed in address (%#llx) not a kernel managed address @%s:%d");
	_panic("%s alignment error: tried accessing addresses spanning more than one page %#llx %#lx @%s:%d");
	_panic(?);
	_panic("panic: spinlock acquired check done outside of kernel debugger @%s:%d");
	_panic(?);
	_panic("Destroying invalid mutex %p @%s:%d");
	_panic("Destroying previously destroyed lock %p @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) not owned @%s:%d");
	_panic("Invalid mutex %p @%s:%d");
_panic:
	_panic("Attempting to block on a lock taken as spin-always %p @%s:%d");
	_panic("Invalid mutex %p @%s:%d");
	_panic("Spin-mutex held as full mutex %p @%s:%d");
	_panic("Invalid mutex %p @%s:%d");
	_panic("lck_mtx_unlock(): Attempt to release lock not owned by thread (%p) @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("lck_mtx_assert(): invalid arg (%u) @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) not owned @%s:%d");
	_panic("lck_mtx_convert_spin: Not held as spinlock (%p) @%s:%d");
	_panic("Lock bit not set %p = %lx @%s:%d");
	_panic("Invalid spinlock %p @%s:%d");
	_panic("lck_spin_assert(): invalid arg (%u) @%s:%d");
	_panic("Lock not owned %p = %lx @%s:%d");
	_panic("Lock not owned by current thread %p = %lx @%s:%d");
	_panic("Lock owned by current thread %p = %lx @%s:%d");
	_panic("panic: spinlock acquired check done outside of kernel debugger @%s:%d");
	_panic("Exception on 2-byte instruction, context=%p, esr=%#x, far=%p @%s:%d");
	_panic_with_thread_kernel_state("Exception on 2-byte instruction");
	_panic("Illegal instruction set exception. state=%p class=%u esr=%u far=%p spsr=0x%x @%s:%d");
	_panic_with_thread_kernel_state("Software Step Debug exception from kernel. Panic (by design)");
	_panic_with_thread_kernel_state("Hardware Breakpoint Debug exception from kernel. Panic (by design)");
	_panic_with_thread_kernel_state("Kernel instruction fetch abort");
	_panic("UC access exception from kernel, state=%p, esr=%#x @%s:%d");
	_panic("Invalid SVC_64 context @%s:%d");
	_panic("AMX exception from kernel, state=%p, esr=%#x @%s:%d");
	_panic("Unsupported Class %u event code. state=%p class=%u esr=%u far=%p @%s:%d");
	_panic("Unrecognized private exception, state=%p, esr=%#x @%s:%d");
	_panic("Unrecognized AMX exception, state=%p, esr=%#x @%s:%d");
	_panic("vm_fault() KERN_FAILURE from user fault on thread %p @%s:%d");
	_panic_with_thread_kernel_state("Apparently on interrupt stack when taking user abort!\n");
	_panic("MSR/MRS trap (ESR 0x%x) from kernel @%s:%d");
	_panic("MSR/MRS trap (ESR 0x%x) from 32-bit state @%s:%d");
	_panic_with_thread_kernel_state("PC alignment exception from kernel.");
	_panic("Illegal thread->recover value %p");
	_panic_with_thread_kernel_state("Unexpected fault in kernel static region\n");
	_panic_with_thread_kernel_state("Unexpected abort while on interrupt stack.");
	_panic_with_thread_kernel_state("Unaligned kernel data abort.");
	_panic_with_thread_kernel_state("Kernel data abort.");
	_panic_with_thread_kernel_state("Privileged access never abort.");
	_panic("Undefined kernel instruction: pc=%p instr=%x @%s:%d");
	_panic_with_thread_kernel_state("SP alignment exception from kernel.");
	_panic_with_thread_kernel_state(SP + 0x0);
	_panic_with_thread_kernel_state("SW_STEP_DEBUG exception thread DebugData is NULL.");
	_panic_with_thread_kernel_state("SW_STEP_DEBUG exception from kernel.");
	_panic("ESR (0x%x) for SIMD trap from userland, actually came from kernel? @%s:%d");
	_panic("ESR (0x%x) for instruction trapped from U32, but saved state is 64-bit. @%s:%d");
	_panic("ESR (0x%x) for instruction trapped from U32, actually came from kernel? @%s:%d");
	_panic_with_thread_kernel_state("Floating point exception from kernel");
	_panic("Unrecognized floating point exception, state=%p, esr=%#x @%s:%d");
	_panic("Unhandled Lightning implementation specific error. state=%p esr=%#x far=%p p-core?%d dpc_err_sts:%p\n\tlsu_err_sts:%p, fed_err_sts:%p, mmu_err_sts:%p\n\tllc_err_sts:%p, llc_err_adr:%p, llc_err_inf:%p\n");
	_panic("overflow detected @%s:%d");
	_panic_with_thread_kernel_state("Invalid kernel stack pointer (probable corruption).");
	_panic_with_thread_kernel_state("Invalid kernel stack pointer (probable overflow).");
	_panic("%s: Invalid required state size %lu @%s:%d");
	_panic("Invalidate HMAC function already set @%s:%d");
	_panic("unable to retrieve state for cpu @%s:%d");
	_panic("Wrong property size for %s @%s:%d");
	_panic("CPU property '%s' has bad size %u @%s:%d");
	_panic("Missing mandatory property '%s' @%s:%d");
	_panic("CPU property '%s' has bad size %u @%s:%d");
	_panic("random_cpu_init: kernel prng has not been installed @%s:%d");
	_panic("ml_static_protect(): %p < %p @%s:%d");
	_panic("ml_static_protect(): WX request on %p @%s:%d");
	_panic("ml_static_protect(): attempt to inject executable mapping on %p @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("Failed ml_static_mfree on %p @%s:%d");
	_panic("%s: invalid bit index (%u) @%s:%d");
	_panic("Invalid exception callback class 0x%x @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("trust cache module %d overlaps previous module @%s:%d");
	_panic("trust cache module %d too short for header @%s:%d");
	_panic("trust cache module %d has unsupported version %d @%s:%d");
	_panic("trust cache module %d too short for its %u entries @%s:%d");
	_panic("short serialized trust cache region: %zu @%s:%d");
	_panic("serialized trust cache region too short for its %d entries: %zu @%s:%d");
	_paniclog_append_noflush("mach_absolute_time: 0x%llx\n");
	_paniclog_append_noflush("Epoch Time:        sec       usec\n");
	_paniclog_append_noflush("  Boot    : 0x%08x 0x%08x\n");
	_paniclog_append_noflush("  Sleep   : 0x%08x 0x%08x\n");
	_paniclog_append_noflush("  Wake    : 0x%08x 0x%08x\n");
	_paniclog_append_noflush("  Calendar: 0x%08x 0x%08x\n\n");
	_paniclog_append_noflush(?);
	_panic("panic: ticket lock acquired check done outside of kernel debugger @%s:%d");
	_paniclog_append_noflush("Debugger message: %.1200s\n");
	_paniclog_append_noflush("Device: %s\n");
	_paniclog_append_noflush("Hardware Model: %s\n");
	_paniclog_append_noflush("ECID: %02X%02X%02X%02X%02X%02X%02X%02X\n");
	_paniclog_append_noflush("AppleHWAccess Thread: 0x%llx\n");
	_paniclog_append_noflush("Boot args: %s\n");
	_paniclog_append_noflush("Memory ID: 0x%x\n");
	_paniclog_append_noflush("OS release type: %.256s\n");
	_paniclog_append_noflush("OS version: %.256s\n");
	_paniclog_append_noflush("Kernel version: %.512s\n");
	_paniclog_append_noflush(?);
	_paniclog_append_noflush("%02X");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("Kernel UUID: %s\n");
	_paniclog_append_noflush("iBoot version: %.128s\n");
	_paniclog_append_noflush("secure boot?: %s\n");
	_paniclog_append_noflush("%s data: ");
	_paniclog_append_noflush("%02X");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("Paniclog version: %d\n");
	_paniclog_append_noflush("CORE %u recently retired instr at 0x%016llx\n");
	_paniclog_append_noflush("CORE %u is the one that panicked. Check the full backtrace for details.\n");
	_paniclog_append_noflush("ECC Corrections:%u\n");
	_paniclog_append_noflush("Total cpu_usage: %d\n");
	_paniclog_append_noflush("Thread task pri cpu_usage\n");
	_paniclog_append_noflush("%p %s %d %d\n");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("Panicked task %p: %lld pages, %d threads: ");
	_paniclog_append_noflush("pid %d: %s");
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("Could not print panicked thread backtrace:frame pointer outside kernel vm.\n");
	_paniclog_append_noflush("Panicked thread: %p, backtrace: 0x%llx, tid: %llu\n");
	_paniclog_append_noflush("%s\t  lr: 0x%016llx  fp: 0x%016llx\n");
	_paniclog_append_noflush("Backtrace continues...\n");
	_paniclog_append_noflush("%s\t  Could not read FP from frame at 0x%016llx\n");
	_func_fffffff0081cb380(SP + 0x80,0x1,_paniclog_append_noflush,0 );
	_paniclog_append_noflush("\n");
	_func_fffffff0081cbbd4(_paniclog_append_noflush);
	_paniclog_append_noflush("\n");
	_paniclog_append_noflush("\n!! Stackshot Failed !!\nkcdata_memory_static_init returned %d");
	_paniclog_append_noflush("Attempting to forcibly halt cpu %d\n");
	_paniclog_append_noflush("cpu %d failed to halt with error %d: %s\n");
	_paniclog_append_noflush("cpu %d halted with warning %d: %s\n");
	_paniclog_append_noflush("cpu %d successfully halted\n");
	_paniclog_append_noflush("Unable to obtain state for cpu %d with status %d: %s\n");
	_paniclog_append_noflush("Debugger synchronization timed out; waited %u nanoseconds\n");
	_panic("%s: should not have been invoked. @%s:%d");
	_panic("context switch with PAN disabled @%s:%d");
	_panic("machine_switch_context @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic("sorry, self-hosted debug is not supported: 0x%llx @%s:%d");
	_panic(?);
	_panic("arm_debug_set @%s:%d");
	_panic("thread %p already has AMX saved state %p @%s:%d");
	_panic("stack handoff with PAN disabled @%s:%d");
	_panic("rtclock timebase_callback: invalid constant %ld / %ld @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic("commpage cpus==0 @%s:%d");
	_panic("perfmon: unexpected kind: %d @%s:%d");
	_panic("monotonic: invalid counter read %u @%s:%d");
	_panic("monotonic: invalid counter write %u @%s:%d");
	_panic("monotonic: invalid core counter read: %u @%s:%d");
	_panic("monotonic: invalid core counter %u write %llu @%s:%d");
	_panic("monotonic: invalid counter read %u @%s:%d");
	_panic("monotonic: invalid counter write %u @%s:%d");
	_panic("monotonic: invalid counter read %u @%s:%d");
	_panic("%s called before mach_bridge_init_timestamp @%s:%d");
	_panic("Invalid SART offset %x @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic("nfs_open_state_clear_busy @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("nfs_open_owner_rele: no refcnt @%s:%d");
	_panic("nfs_open_owner_rele: busy @%s:%d");
	_panic("nfs_open_owner_clear_busy @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_open_file_clear_busy @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("nfs_open_file_clear_busy @%s:%d");
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("nfs_open_file_clear_busy @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("nfs_lock_owner_rele: no refcnt @%s:%d");
	_panic("nfs_lock_owner_rele: busy @%s:%d");
	_panic("nfs_lock_owner_clear_busy @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic();
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic("nfs_open_state_clear_busy @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_open_state_clear_busy @%s:%d");
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_open_file_clear_busy @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("NFS mount state in use count underrun @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfsbuf not on free list @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_drop: buffer not busy! @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_drop: buffer not busy! @%s:%d");
	_panic("nfs: needcommit w/out wcred @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_buf_write: buffer is not busy??? @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("nfs_buf_map failed @%s:%d");
	_panic("nfs_buf_map: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("ubc_upl_map mapped 0 @%s:%d");
	_panic("nfs_buf_iodone already @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("nfs_buf_map failed @%s:%d");
	_panic("nfs_buf_map: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("ubc_upl_map mapped 0 @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("nfsbuf on freelist @%s:%d");
	_panic("ubc_upl_unmap failed @%s:%d");
	_panic("nfs_vinvalbuf2: ubc_msync failed!, error %d @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("nfs_vinvalbuf_internal: dirty buffer without upl @%s:%d");
	_panic("nfs_vinvalbuf_internal: flush/inval failed @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_drop: buffer not busy! @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_buf_write_delayed: Negative nfs_nbdwrite @%s:%d");
	_panic("nfs_buf_map: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("ubc_upl_map mapped 0 @%s:%d");
	_panic("nfs_buf_drop: buffer not busy! @%s:%d");
	_panic("pagelist buffer was not busy @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_get: buffer larger than NFS_MAXBSIZE requested @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_get: %d unknown operation @%s:%d");
	_panic("nfs_buf_get: delwri @%s:%d");
	_panic("nfsbuf size mismatch @%s:%d");
	_panic("nfsbuf on freelist @%s:%d");
	_panic("nfs_buf_read: !NB_READ @%s:%d");
	_panic("nfs_buf_map failed @%s:%d");
	_panic("nfs_buf_map: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("ubc_upl_map mapped 0 @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("nfs_buf_map failed @%s:%d");
	_panic("ubc_upl_map mapped 0 @%s:%d");
	_panic("nfs_buf_map: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("nfs_buf_drop: buffer not busy! @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfsreq reference error @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0xfffffff009f7cc18);
	_panic(SP + 0x428);
	_panic(0 ,);
	_panic(SP + 0x1e8);
	_panic(0 ,);
	_panic(0x1);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_vnop_inactive: vp == NULL @%s:%d");
	_panic("nfs_vnop_inactive: np == NULL @%s:%d");
	_panic();
	_panic(SP + 0x2c8);
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs_request_match_reply: proct[%d] is zero @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfsreq reference underflow @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfs sndunlock @%s:%d");
	_panic("nfsreq reference underflow @%s:%d");
	_panic("nfs sndunlock @%s:%d");
	_panic(0 ,);
	_panic("nfs_request: invalid NFSv4 RPC request %d @%s:%d");
	_panic("nfsreq reference error @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("nfsreq reference underflow @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfsreq reference underflow @%s:%d");
	_panic("nfsreq reference error @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("nfsreq reference underflow @%s:%d");
	_panic("req locked @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("req locked @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("got NULL mbuf? @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x38]);
	_panic();
	_panic(0 ,);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(SP + 0x358);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0xb60,);
	_panic(SP + 0x268);
	_panic();
	_panic(?);
	_panic("Some one has grabbed a ref %d state flags = 0x%8.8x @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("nfs zombie mount underflow @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(SP + 0x1c0);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(SP + 0x1c0);
	_panic(SP + 0xd18);
	_panic(SP + 0x80);
	_panic(SP + 0x3c0);
	_panic(SP + 0x5b8);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x268);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x120800208);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic(0 );
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("nfs zombie mount underflow @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("nfs_pageout: no upl @%s:%d");
	_panic("nfs_vnop_pageout: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic();
	_panic("nfs_pagein: no upl @%s:%d");
	_panic("nfs_vnop_pagein: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x168);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x68]);
	_panic(SP + 0x1a0);
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x190);
	_panic();
	_panic(0 ,);
	_panic(SP + 0x2c8);
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("nfs_buf_map failed @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic();
	_panic(?);
	_panic(0 );
	_panic(0 ,);
	_panic(SP + 0x100);
	_panic("overflow detected @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x190);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(SP + 0x1e0);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x68]);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(JUNSAFE to view);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x250);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("random_init: failed to allocate a major number! @%s:%d");
	_panic("mdevadd: attempt to explicitly add a previously defined memory device: %08X @%s:%d");
	_panic("mdevadd: attempt to add overlapping memory device at %016llX-%016llX @%s:%d");
	_panic("mdevadd: attempt to explicitly add a bogus memory device: %08X @%s:%d");
	_panic("mdevadd: attempt to add more than %d memory devices @%s:%d");
	_panic("mdevstrategy: source address %016llX not mapped @%s:%d");
	_panic("mdevstrategy: sink address %016llX not mapped @%s:%d");
	_panic("ramstrategy: buf_map failed @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("Failed to create bufferhdr_map @%s:%d");
	_panic("Failed to allocate bufferhdr_map @%s:%d");
	_panic("Failed to allocate mb_map @%s:%d");
	_panic("monotonic: cdevsw_add failed: %d @%s:%d");
	_panic("monotonic: devfs_make_node failed for '%s' @%s:%d");
	_panic("perfmon: unpaired release: %s on %u @%s:%d");
	_panic("perfmon: %s: cdevsw_add failed: 0x%x @%s:%d");
	_panic("perfmon: %s: devfs_make_node_clone failed @%s:%d");
	_panic("perfmon: no source for major device: 0x%x @%s:%d");
	_panic("perfmon: invalid minor dev number: 0x%x @%s:%d");
	_panic("perfmon: no source for major device: 0x%x @%s:%d");
	_panic("perfmon: invalid minor dev number: 0x%x @%s:%d");
	_panic("perfmon: no device allocated to close: 0x%x @%s:%d");
	_panic("perfmon: unpaired release: %s on %u @%s:%d");
	_panic("perfmon: no source for major device: 0x%x @%s:%d");
	_panic("perfmon: invalid minor dev number: 0x%x @%s:%d");
	_panic("perfmon: no source for major device: 0x%x @%s:%d");
	_panic("perfmon: attempt to open unsupported source: 0x%x @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("packed field size mismatch; allocated %ld but packed %ld for common %08x vol %08x @%s:%d");
	_panic("packed variable field size mismatch; used %ld but expected %ld @%s:%d");
	_panic(?);
	_panic(JUNSAFE to view);
	_panic(0 ,);
	_panic();
	_panic(LocalFrame[-0x388]);
	_panic("packed field size mismatch; allocated %ld but packed %ld for common %08x vol %08x @%s:%d");
	_panic("packed variable field size mismatch; used %ld but expected %ld @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(LocalFrame[-0x130]);
	_panic();
	_panic("Directory expected to have fg_vn_data @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x188]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1b8]);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(LocalFrame[-0x48]);
	_panic(0xfffffff009f7cab8,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic(0xfffffff009f7caa8,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("allocbuf: buffer larger than MAXBSIZE requested @%s:%d");
	_panic("allocbuf: NULL b_datap @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("bremhash le_prev is deadbeef @%s:%d");
	_panic("bremhash: next points to self @%s:%d");
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("bremfree_locked: %p not on freelist @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("bremfree: lost tail @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("buf_strategy: b_vp == NULL || vtype == VCHR | VBLK @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("biodone already @%s:%d");
	_panic("biodone: bp @ %p has NULL b_iodone! @%s:%d");
	_panic(0xfffffff009f7caa8);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("free_io_buf: bp(%p) - bufstats.bufs_iobufinuse < 0 @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("buf_brelse_shadow: bp not on list %p @%s:%d");
	_panic("buf_brelse: bad buffer = %p @%s:%d");
	_panic("brelse: UPL set for non VREG; vp=%p @%s:%d");
	_panic("bremhash le_prev is deadbeef @%s:%d");
	_panic("bremhash: next points to self @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("buf_brelse_shadow: bp_head on freelist %d @%s:%d");
	_panic("buf_relse_shadow: b_shadow == NULL && b_shadow_ref != 0  bp(%p) @%s:%d");
	_panic("buf_relse_shadow: b_shadow != NULL && b_shadow_ref == 0  bp(%p) @%s:%d");
	_panic("brelse: bp @ %p has NULL b_iodone! @%s:%d");
	_panic("ubc_upl_unmap failed @%s:%d");
	_panic("brelse: Failed to create UPL @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("Couldn't register buffer cache callout for vm pressure! @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("bremhash le_prev is deadbeef @%s:%d");
	_panic("bremhash: next points to self @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic(0xfffffff009f7cab8,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("bgetvp_locked: not free @%s:%d");
	_panic("bp already has UPL: %p @%s:%d");
	_panic("Failed to create UPL @%s:%d");
	_panic("getblk: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("getblk: paging or unknown operation - %x @%s:%d");
	_panic("getblk: VNOP_BLOCKMAP failed @%s:%d");
	_panic("getblk: paging or unknown operation for incore busy buffer - %x @%s:%d");
	_panic("buffer has UPL, but not marked BUSY: %p @%s:%d");
	_panic("getblk: paging or unknown operation for incore buffer- %d @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("getblk: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("Failed to create UPL @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("getnewbuf: bp @ %p is LOCKED or BUSY! (flags 0x%x) @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic(0xfffffff009f7cab8);
	_panic(0xfffffff009f7cab8,);
	_panic(0xfffffff009f7cab8);
	_panic("%p: b_hash.le_prev is not deadbeef @%s:%d");
	_panic("blistenterhead: le_prev is deadbeef @%s:%d");
	_panic(0xfffffff009f7cab8,);
	_panic(0xfffffff009f7cab8);
	_panic(0xfffffff009f7cab8,);
	_panic(0xfffffff009f7cab8);
	_panic(?);
	_panic(0 );
	_panic(LocalFrame[-0xa8]);
	_panic(0 );
	_panic(SP + 0x6fc);
	_panic(0xfffffff009f0caf0);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0xfffffff009f0caf0);
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(LocalFrame[-0x208]);
	_panic(JUNSAFE to view);
	_panic(0 );
	_panic(0x2080000);
	_panic(0 ,);
	_panic(LocalFrame[-0x208]);
	_panic(0 );
	_panic();
	_panic(ARG0);
	_panic("%s: bad credential %p @%s:%d");
	_panic(?);
	_panic(0 );
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(LocalFrame[-0x138]);
	_panic("BUSY bp found in cluster_io @%s:%d");
	_panic("Vector UPLs should not take this code-path @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("buf_setupl failed @%s:%d");
	_panic("%s(): Called with real buffer of size %d bytes which is greater than the maximum allowed size of %d bytes (the system PAGE_SIZE).\n @%s:%d");
	_panic("%s(): cbp_head is not NULL. @%s:%d");
	_panic("%s(): Called with real buffer and needs verification  @%s:%d");
	_panic(0xfffffff009f7cfa8);
	_panic();
	_panic("overflow detected @%s:%d");
	_panic("ubc_upl_map_range returned error %d, upl = %p, upl_offset = %d, size = %d @%s:%d");
	_panic("%s length = %zu, verify_block_size = %zu @%s:%d");
	_panic("No verify context for vp = %p, start_off = %lld, length = %zu, error = %d @%s:%d");
	_panic(?);
	_panic("overflow detected @%s:%d");
	_panic("cluster_pagein: NULL upl passed in @%s:%d");
	_panic("cluster_write_copy: failed to get pagelist @%s:%d");
	_panic("cluster_push: failed to get pagelist @%s:%d");
	_panic("ecount >= DRT_BITVECTOR_PAGES, cmap = %p, index = %d, bit = %d @%s:%d");
	_panic("ecount <= 0, cmap = %p, index = %d, bit = %d @%s:%d");
	_panic("Failed to restore dirty state on failure @%s:%d");
	_panic("vfs_drt_free_map: Invalid modulus %d @%s:%d");
	_panic("vfs_drt: entry summary count > 0 but no bits set in map, cmap = %p, index = %d, count = %lld @%s:%d");
	_panic("vfs_drt: new cluster map mysteriously too small @%s:%d");
	_panic("vfs_drt_free_map: Invalid modulus %d @%s:%d");
	_panic(0 ,);
	_panic("encrypted blocks will hit UBC! @%s:%d");
	_panic("cluster_read_copy: failed to get pagelist @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("cluster_push_err: Expected NULL cl_scmap @%s:%d");
	_panic(0 ,);
	_panic("vfs_drt_free_map: Invalid modulus %d @%s:%d");
	_panic("vfs_opv_init: bad operation @%s:%d");
	_panic("vfs_opv_init: operation vector without default routine. @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("__strncpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(LocalFrame[-0x78]);
	_panic(0 ,);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("We need to keep going on a continued lookup, but for vp type %d (tag %d) @%s:%d");
	_panic(0 ,);
	_panic(SP + 0x30);
	_panic(SP + 0x28);
	_panic(0 ,);
	_panic();
	_panic(0xfffffff009f0cad0);
	_panic("(4) Unexpected pre-decrement value (%d) of usecount for rootvnode %p @%s:%d");
	_panic("(1) invalid pre-increment usecount (%d) for rootdir vnode %p @%s:%d");
	_panic("(1) usecount overflow for vnode %p @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("(2) invalid pre-increment usecount (%d) for vnode %p @%s:%d");
	_panic("(2) usecount overflow for vnode %p @%s:%d");
	_panic("(3) Unexpected pre-decrement value (%d) of usecount for rootvnode %p @%s:%d");
	_panic(SP + 0x30);
	_panic(SP + 0x28);
	_panic();
	_panic("lookup: SAVESTART @%s:%d");
	_panic(SP + 0x30);
	_panic(SP + 0x28);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("NULL ni_vp in %s @%s:%d");
	_panic("Incorrect termination of path in %s @%s:%d");
	_panic();
	_panic(0 );
	_panic(SP + 0x18);
	_panic(SP + 0x28);
	_panic(SP + 0x30);
	_panic(SP + 0x28);
	_panic(0 );
	_panic(SP + 0x30);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("leaf should be empty @%s:%d");
	_panic("lookup: SAVESTART @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(JUNSAFE to view);
	_panic("lookup: SAVESTART @%s:%d");
	_panic(?);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("NULL vp with error == 0. @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x50);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("vnode_iterate_prepare: newvnode when entering vnode @%s:%d");
	_panic("vnode_reload with no iocount %d @%s:%d");
	_panic(0 );
	_panic("vnode_put(%p): iocount < 1 @%s:%d");
	_panic("vnode_dropiocount(%p): v_iocount < 1 @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("vnode_async_list_add: %p is in wrong state @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("missing bdev @%s:%d");
	_panic("vnode reclaim in progress @%s:%d");
	_panic("vnode_reclaim_internal: cleaned vnode isn't @%s:%d");
	_panic("vnode_reclaim_internal: clean vnode has pending I/O's @%s:%d");
	_panic("vnode_reclaim_internal: vname not removed @%s:%d");
	_panic("vnode_reclaim_internal: vparent not removed @%s:%d");
	_panic("missing alias @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("vnode_dropiocount(%p): v_iocount < 1 @%s:%d");
	_panic("vnode_drain: recursive drain @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("vclean: cannot reclaim @%s:%d");
	_panic();
	_panic(0 );
	_panic("vnode_rele_ext: vp %p usecount -ve : %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d");
	_panic("vnode_rele_ext: vp %p kusecount -ve : %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d");
	_panic("vnode_dropiocount(%p): v_iocount < 1 @%s:%d");
	_panic(0x18);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("insmntque: vp not in mount vnode list @%s:%d");
	_panic("insmntque: vp already in mount vnode list @%s:%d");
	_panic("vp already in mount list @%s:%d");
	_panic();
	_panic("new_vnode(%p): vnode still hooked into the name cache @%s:%d");
	_panic("new_vnode(%p): free vnode still referenced @%s:%d");
	_panic("new_vnode(%p): the vnode is VL_DEAD but not VBAD @%s:%d");
	_panic("new_vnode(%p): vp on list @%s:%d");
	_panic("new_vnode(%p): vnode seems to be on mount list @%s:%d");
	_panic("found VBAD vp (%p) on async queue @%s:%d");
	_panic(?,);
	_panic(0 );
	_panic(?);
	_panic(ARG0);
	_panic("vnode_writedone: numoutput < 0 @%s:%d");
	_panic(ARG0,);
	_panic(ARG0);
	_panic(?);
	_panic();
	_panic("already in drain @%s:%d");
	_panic("mount_refdrain: dangling vnode @%s:%d");
	_panic(0 ,);
	_panic(0xfffffff009f24590);
	_panic(LocalFrame[-0x1b8]);
	_panic(SP + 0x78);
	_panic("bdevvp failed: vnode_ref @%s:%d");
	_panic("bdevvp failed: fsync @%s:%d");
	_panic("bdevvp failed: invalidateblks @%s:%d");
	_panic("bdevvp failed: open @%s:%d");
	_panic(JUNSAFE to view);
	_panic(0x120800010);
	_panic(SP + 0x120800018);
	_panic();
	_panic("new_vnode: vp (%p) on RAGE list not marked VLIST_RAGE @%s:%d");
	_panic("insmntque: vp on the free list @%s:%d");
	_panic("checkalias with VT_NON vp that shouldn't: %p @%s:%d");
	_panic("vnode table is full @%s:%d");
	_panic(ARG0,);
	_panic("vnode_ref_ext: vp %p has no valid reference %d, %d @%s:%d");
	_panic("vnode_ref_ext: v_writecount @%s:%d");
	_panic("vnode_ref_ext: v_kusecount @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("VNODE_REF_FORCE didn't help... @%s:%d");
	_panic(ARG0);
	_panic(0 ,);
	_panic(SP + 0x2a);
	_panic(0 );
	_panic(JUNSAFE to view);
	_panic(LocalFrame[-0x70]);
	_panic(0 );
	_panic(LocalFrame[-0xf0]);
	_panic(LocalFrame[-0xe0]);
	_panic(LocalFrame[-0xc0]);
	_panic(LocalFrame[-0xb8]);
	_panic(LocalFrame[-0xa0]);
	_panic(LocalFrame[-0xc0]);
	_panic(0 );
	_panic(LocalFrame[-0x98]);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("mount cross refs -ve @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic(SP + 0x50);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("vnode_iterate_prepare: newvnode when entering vnode @%s:%d");
	_panic("vnode_dropiocount(%p): v_iocount < 1 @%s:%d");
	_panic(SP + 0x120800018);
	_panic(ARG0,);
	_panic(ARG0);
	_panic(SP + 0x8);
	_panic();
	_panic(SP + 0x78);
	_panic(SP + 0xf8);
	_panic();
	_panic(0 ,);
	_panic(ARG0);
	_panic();
	_panic(0xfffffff009f10c18);
	_panic(ARG0);
	_panic("v_iocount overflow @%s:%d");
	_panic(ARG0,);
	_panic(ARG0);
	_panic(ARG0,);
	_panic();
	_panic(?);
	_panic(ARG0);
	_panic("NULL vnode passed to vnode_initialize @%s:%d");
	_panic(ARG0);
	_panic("add_fsref: vp already has named reference @%s:%d");
	_panic("addfsref: vp on the free list @%s:%d");
	_panic(ARG0);
	_panic("remove_fsref: no named reference @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic(0 );
	_panic(ARG0);
	_panic();
	_panic("Open parameters, but not a regular file. @%s:%d");
	_panic("Mode for open, but not trying to open... @%s:%d");
	_panic("vnode_create: unknown vtype %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic(0 );
	_panic(0x2);
	_panic(0 );
	_panic("%s: bad credential %p @%s:%d");
	_panic("NULL ndp @%s:%d");
	_panic("reserved not NULL. @%s:%d");
	_panic("NULL cn_ndp @%s:%d");
	_panic("reserved not NULL. @%s:%d");
	_panic("Passed something other than NULL as reserved field! @%s:%d");
	_panic("reserved not NULL in vn_authorize_mkdir() @%s:%d");
	_panic("Non-NULL reserved argument to vn_authorize_rmdir() @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("vnode attrs not complete for vnode_attr_authorize @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(ARG0);
	_panic();
	_panic(ARG0,);
	_panic(?);
	_panic(0 );
	_panic(LocalFrame[-0x70]);
	_panic();
	_panic(0 ,);
	_panic(0 );
	_panic(JUNSAFE to view);
	_panic(0 ,);
	_panic(SP + 0xb8);
	_panic(SP + 0x28);
	_panic(0 ,);
	_panic("rw lock (%p)%s held (mode=%u) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0x18);
	_panic(SP + 0x120800020);
	_panic();
	_panic(0 ,);
	_panic(0x18);
	_panic(LocalFrame[-0x1f8]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1e0]);
	_panic(0x18);
	_panic(SP + 0x980);
	_panic(0x18);
	_panic(0 ,);
	_panic(LocalFrame[-0x1f8]);
	_panic(LocalFrame[-0x1e0]);
	_panic(0x18);
	_panic(0 ,);
	_panic(SP + 0x290);
	_panic();
	_panic(SP + 0x2a8);
	_panic("%s: bad credential %p @%s:%d");
	_panic("mount_common(): mount of %s filesystem failed with %d, but vnode list is not empty. @%s:%d");
	_panic("Volume mounted on a device with invalid major number. @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0xa08);
	_panic(0 ,);
	_panic(SP + 0xa08);
	_panic(0 ,);
	_panic(?);
	_panic("mount cross refs -ve @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0xb8]);
	_panic(SP + 0xe8);
	_panic(0 ,);
	_panic();
	_panic(SP + 0xe8);
	_panic(0 ,);
	_panic(LocalFrame[-0x1b8]);
	_panic(0x18);
	_panic(LocalFrame[-0x1b8]);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x980);
	_panic(0 );
	_panic(0 ,);
	_panic(0 );
	_panic(?);
	_panic();
	_panic("dounmount: no coveredvp @%s:%d");
	_panic(?);
	_panic("Passed inappropriate waitfor %u to sync_callback() @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x1c8]);
	_panic(LocalFrame[-0x48]);
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic(0 ,);
	_panic(LocalFrame[-0x888]);
	_panic(LocalFrame[-0x48]);
	_panic(SP + 0x40);
	_panic(LocalFrame[-0x60]);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x28);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic(LocalFrame[-0x178]);
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic(SP + 0x28);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x158]);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x370]);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x1e8]);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x188]);
	_panic(LocalFrame[-0x180]);
	_panic(LocalFrame[-0x188]);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x3a0]);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("EKEEPLOOKING, but not a filesystem that supports compound VNOPs? @%s:%d");
	_panic("EKEEPLOOKING, but continue flag not set? @%s:%d");
	_panic("No vp, but no compound remove? @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(SP + 0xa0);
	_panic(0 ,);
	_panic("No error, but no compound rmdir? @%s:%d");
	_panic(SP + 0x1f0);
	_panic(0 );
	_panic(0 ,);
	_panic(0 );
	_panic(LocalFrame[-0x178]);
	_panic(SP + 0x40);
	_panic(0 ,);
	_panic(LocalFrame[-0x2e8]);
	_panic(LocalFrame[-0x188]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1b8]);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(0 ,);
	_panic(LocalFrame[-0x330]);
	_panic(LocalFrame[-0x1c8]);
	_panic(LocalFrame[-0x1b8]);
	_panic(0 ,);
	_panic(LocalFrame[-0x38]);
	_panic(0 ,);
	_panic(LocalFrame[-0x330]);
	_panic(LocalFrame[-0x1d0]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1a0]);
	_panic(LocalFrame[-0x68]);
	_panic(0 ,);
	_panic(LocalFrame[-0x338]);
	_panic(SP + 0x30);
	_panic(LocalFrame[-0x68]);
	_panic(0 ,);
	_panic();
	_panic(LocalFrame[-0x330]);
	_panic(LocalFrame[-0x178]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1b8]);
	_panic(0 ,);
	_panic(LocalFrame[-0x540]);
	_panic(SP + 0x3f0);
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x38]);
	_panic();
	_panic(0 );
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x40]);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x48]);
	_panic();
	_panic(0 );
	_panic(0x18);
	_panic(0 ,);
	_panic(LocalFrame[-0x40]);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x48]);
	_panic();
	_panic(0 );
	_panic(0 ,);
	_panic("EKEEPLOOKING without NAMEI_CONTLOOKUP on either ndp? @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x1a8]);
	_panic(0 );
	_panic(0 ,);
	_panic(LocalFrame[-0x108]);
	_panic(?);
	_panic(SP + 0x178);
	_panic(0 ,);
	_panic(LocalFrame[-0x330]);
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x100]);
	_panic(?);
	_panic(LocalFrame[-0x100]);
	_panic(SP + 0x180);
	_panic(0 ,);
	_panic(LocalFrame[-0x318]);
	_panic(LocalFrame[-0x178]);
	_panic(0 ,);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x1e8]);
	_panic(JUNSAFE to view);
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic("Passed inappropriate waitfor %u to sync_callback() @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x48]);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x140]);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(LocalFrame[-0x140]);
	_panic(SP + 0x180);
	_panic(0 ,);
	_panic(SP + 0x308);
	_panic(SP + 0x130);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(LocalFrame[-0x98]);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x8,);
	_panic(SP + 0xf88);
	_panic(LocalFrame[-0x50]);
	_panic();
	_panic(SP + 0xa8);
	_panic();
	_panic(0x1);
	_panic();
	_panic(SP + 0xa8);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x28);
	_panic(LocalFrame[-0x48]);
	_panic(0 ,);
	_panic(LocalFrame[-0x40]);
	_panic(LocalFrame[-0x38]);
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic(0 ,);
	_panic(LocalFrame[-0x40]);
	_panic(LocalFrame[-0x38]);
	_panic(0 ,);
	_panic(SP + 0x1c0);
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic(LocalFrame[-0xa0]);
	_panic(LocalFrame[-0x98]);
	_panic(0 ,);
_panic:
	_panic();
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic(LocalFrame[-0x70]);
	_panic(LocalFrame[-0x68]);
	_panic(0 ,);
	_panic(LocalFrame[-0x1b8]);
	_panic();
	_panic(SP + 0x298);
	_panic(0 ,);
	_panic(SP + 0x218);
	_panic(SP + 0x268);
	_panic(0 ,);
	_panic(LocalFrame[-0x60]);
	_panic();
	_panic(JUNSAFE to view);
	_panic(0 ,);
	_panic(SP + 0x120801888);
	_panic(0x120801888);
	_panic();
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("Invalid knote filter on a vnode! @%s:%d");
	_panic("Should never have an EVFILT_READ except for reg or fifo. @%s:%d");
	_panic(SP + 0x38,);
	_panic(0x38);
	_panic(SP + 0x120801888,);
	_panic(0x120801888);
	_panic(SP + 0x120801888,);
	_panic(0x120801888);
	_panic(JUNSAFE to view);
	_panic(SP + 0x120801888);
	_panic(JUNSAFE to view);
	_panic(SP + 0x120801888);
	_panic(JUNSAFE to view);
	_panic(SP + 0x120801888);
	_panic(JUNSAFE to view);
	_panic(SP + 0x120801888);
	_panic(JUNSAFE to view);
	_panic(SP + 0x1208018a8);
	_panic(JUNSAFE to view);
	_panic(SP + 0x28);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(SP + 0x28);
	_panic(0 ,);
	_panic(SP + 0x28);
	_panic();
	_panic("EKEEPLOOKING, but continue flag not set? @%s:%d");
	_panic("Why am I trying to use VNOP_OPEN() on anything other than the root or a named stream? @%s:%d");
	_panic("EKEEPLOOKING from a filesystem that doesn't support compound VNOPs? @%s:%d");
	_panic("EKEEPLOOKING, but we did a create? @%s:%d");
	_panic("EKEEPLOOKING from filesystem that doesn't support compound vnops? @%s:%d");
	_panic("Haven't cleaned up adequately in vn_open_auth() @%s:%d");
	_panic(0 ,);
	_panic(ARG0);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 );
	_panic(SP + 0x118);
	_panic(LocalFrame[-0x268]);
	_panic(LocalFrame[-0x270]);
	_panic(LocalFrame[-0x98]);
	_panic(LocalFrame[-0x248]);
	_panic(LocalFrame[-0x250]);
	_panic(LocalFrame[-0xd8]);
	_panic(LocalFrame[-0xd0]);
	_panic();
	_panic(0 );
	_panic();
	_panic("vfs_fsadd: bad operation @%s:%d");
	_panic("vfs_fsadd: operation vector without default routine. @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(ARG0);
	_panic("vnode_lookup_continue_needed(): cnp->cn_ndp is NULL @%s:%d");
	_panic(ARG0);
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x58]);
	_panic("No dvp? @%s:%d");
	_panic("Want create, but no vap? @%s:%d");
	_panic("Don't want create, but have a vap? @%s:%d");
	_panic("Filesystem did a create, even though none was requested? @%s:%d");
	_panic(0 );
	_panic(0x120800010);
	_panic(JUNSAFE to view);
	_panic("Not batched, and no fvp? @%s:%d");
	_panic(SP + 0x120800010);
	_panic(JUNSAFE to view);
	_panic("No fvpp after compound rename? @%s:%d");
	_panic(0 );
	_panic(JUNSAFE to view);
	_panic("Non-CREATE nameiop in vn_mkdir()? @%s:%d");
	_panic(JUNSAFE to view);
	_panic(0x120800010);
	_panic("NULL vp, but not a compound VNOP? @%s:%d");
	_panic("Non-NULL vap, but not a compound VNOP? @%s:%d");
	_panic(0 );
	_panic(0x120800010);
	_panic(0 ,);
	_panic(LocalFrame[-0x1d0]);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("add_fsevent: was not able to add path %s to event %p. @%s:%d");
	_panic("add_fsevent: you can't pass me a NULL vnode ptr (type %d)! @%s:%d");
	_panic("add_fsevent: line %d: kfse recount %d but should be at least 1 @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("release_event_ref: bogus kfse refcount %d @%s:%d");
	_panic("no more fref.vp! @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("fsevents: close: still have readers! (%d) @%s:%d");
	_panic(0 ,);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("fsevents: copy_out_kfse: asked to copy out an invalid event (kfse %p, refcount %d fref ptr %p) @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(?);
	_panic();
	_panic(?);
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic(SP + 0x8);
	_panic("%s: bad credential %p @%s:%d");
	_panic(?);
	_panic("dead_badop called @%s:%d");
	_panic("fifo_open with no fifoinfo @%s:%d");
	_panic("spec_offtoblk type @%s:%d");
	_panic("spec_blktooff type @%s:%d");
	_panic("Taking a reference without calling create throttle info! @%s:%d");
	_panic(0 ,);
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic("spec_ioctl @%s:%d");
	_panic("spec_write type @%s:%d");
	_panic("spec_read type @%s:%d");
	_panic("spec_close: not special @%s:%d");
	_panic("negative open count (c, %u, %u) @%s:%d");
	_panic("negative open count (b, %u, %u) @%s:%d");
	_panic("spec_open type @%s:%d");
	_panic(SP + 0x78);
	_panic(0x78);
	_panic("%s(%p): invalid filter %d\n @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic("Taking a reference without calling create throttle info! @%s:%d");
	_panic(?);
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic(0 ,);
	_panic("Taking a reference without calling create throttle info! @%s:%d");
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic("Taking a reference without calling create throttle info! @%s:%d");
	_panic(?);
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic(0 ,);
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("throttle info ref cnt went negative! @%s:%d");
	_panic("Taking a reference without calling create throttle info! @%s:%d");
	_panic("Illegal devno (%d) passed into throttle_info_disable_throttle() @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0x1);
	_panic(SP + 0x20);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("devfs event log overflowed. @%s:%d");
	_panic("Free of devfs notify info that has not been intialized. @%s:%d");
	_panic();
	_panic("plane count wrapped around. @%s:%d");
	_panic(SP + 0x60);
	_panic(SP + 0x68);
	_panic(0 );
	_panic("devfs_rele_node: devnode without a refcount! @%s:%d");
	_panic("devfs_dntovn: DN_DELETE set on a devnode upon entry. @%s:%d");
	_panic("devfs_dntovn: cloning device with a vnode? @%s:%d");
	_panic("devfs_rele_node: devnode without a refcount! @%s:%d");
	_panic();
	_panic(LocalFrame[-0x2c0]);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Free of devfs notify info that has not been intialized. @%s:%d");
	_panic("__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("devfs event log overflowed. @%s:%d");
	_panic();
	_panic(LocalFrame[-0x198]);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Free of devfs notify info that has not been intialized. @%s:%d");
	_panic(0xfffffff009f17330);
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(0xfffffff009f17330);
	_panic(JUNSAFE to view);
	_panic(0xfffffff009f17330);
	_panic(0xfffffff009f17330,);
	_panic(0xfffffff009f17330);
	_panic(0 ,);
	_panic(ARG0);
	_panic(0 ,);
	_panic(SP + 0xd00);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(LocalFrame[-0x10]);
	_panic(?);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?);
	_panic("%s: %p refcnt <= 0 @%s:%d");
	_panic("%s: %p BPF_DETACHED not set @%s:%d");
	_panic("Two threads blocked in a BPF close @%s:%d");
	_panic("bpf_detachd: descriptor not in list @%s:%d");
	_panic("resetting buffers during read @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("bpf_mcopy @%s:%d");
	_panic("%s:%d tlen %u > bpfp_total_length %lu bpfp_header_length %lu pth_frame_pre_length %u pre_adjust %u in_pkt_len %u out_pkt_len %u\n @%s:%d");
	_panic();
	_panic("bpfattach @%s:%d");
	_panic("%s (%d): ifnet_detach(%p) failed %d @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s thread_call_free() failed for call %p @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(LocalFrame[-0x68]);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("%s: Mismatch ifa_ifp=%p != ifp=%p @%s:%d");
	_panic("%s: Attempt to attach an already attached ifa=%p @%s:%d");
	_panic("%s: Unexpected non-link address ifa=%p @%s:%d");
	_panic("%s: Unexpected link address ifa=%p @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("%s: Link address ifa=%p not first @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: Attempt to detach an unattached address ifa=%p @%s:%d");
	_panic("%s: Mismatch ifa_ifp=%p, ifp=%p @%s:%d");
	_panic("%s: unexpected (missing) refcnt ifa=%p @%s:%d");
	_panic("%s: Unexpected non-link address ifa=%p @%s:%d");
	_panic("%s: Attempt to detach a stray address ifa=%p @%s:%d");
	_panic("%s: Unexpected link address ifa=%p @%s:%d");
	_panic();
	_panic("%s: ifa %p negative refcnt @%s:%d");
	_panic("ifa %p attached to ifp is being freed @%s:%d");
	_panic(?);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(SP + 0xe0);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic();
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0x90);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009d525d8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009d525d8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xc8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic();
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic(0x68);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0xfffffff009d525b0);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("%s: interface name too long @%s:%d");
	_panic(ARG0,);
	_panic("%s: ifma=%p wraparound refcnt @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifma=%p negative reqcnt @%s:%d");
	_panic("%s: Mismatch ifma_ifp=%p, ifp=%p @%s:%d");
	_panic("%s: ifma=%p missing IFMAF_ANONYMOUS @%s:%d");
	_panic("%s: ifma=%p negative anonreqcnt @%s:%d");
	_panic("%s: Detaching ifma=%p with outstanding anon req @%s:%d");
	_panic("%s: Protospec not NULL for ifma=%p @%s:%d");
	_panic("%s: Attempt to detach an unattached address ifma=%p @%s:%d");
	_panic("%s: ifma %p is already in trash list @%s:%d");
	_panic("%s: ifma=%p negative refcnt @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: Freeing ifma=%p with outstanding anon req @%s:%d");
	_panic("%s: Protospec not NULL for ifma=%p @%s:%d");
	_panic("%s: ifma=%p attached to ifma_ifp=%p is being freed @%s:%d");
	_panic("%s: ifma %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcount ifma=%p @%s:%d");
	_panic("%s: non-zero reqcnt ifma=%p @%s:%d");
	_panic("%s: non-NULL ifma_ifp=%p for ifma=%p @%s:%d");
	_panic("%s: non-NULL ifma_ll=%p for ifma=%p @%s:%d");
	_panic(SP + 0x28);
	_panic("%s: ifma=%p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: Mismatch ifma_ifp=%p != ifp=%p @%s:%d");
	_panic("%s: Attempt to attach an already attached ifma=%p @%s:%d");
	_panic("%s: Attempt to reattach a detached ifma=%p @%s:%d");
	_panic("%s: ifma=%p wraparound refcnt @%s:%d");
	_panic("%s: ifma=%p unexpected IFMAF_ANONYMOUS @%s:%d");
	_panic("%s: ifma %p has no debug structure @%s:%d");
	_panic("%s: ifma=%p wraparound refcnt @%s:%d");
	_panic(ARG0,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic(ARG0,);
	_panic(?);
	_panic(0 ,);
	_panic(ARG0);
	_panic(ARG0,);
	_panic(0x2f8);
	_panic();
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic("bad ifnet assert type: %d @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("%s: no CPU clock available! @%s:%d");
	_panic("%s: couldn't create detacher thread");
	_panic("%s: couldn't create main input thread");
	_panic("%s: couldn't create %s input thread");
	_panic();
	_panic(0xfffffff009f7eed8);
	_panic(0xfffffff009f7efc8);
	_panic(0xfffffff009f7f0d0);
	_panic(0xfffffff009f7ef70);
	_panic(0xfffffff009f7ece0);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: flags mismatch (detaching not set) ifp=%p @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(ARG0,);
	_panic(SP + 0x370);
	_panic(SP + 0x88);
	_panic(SP + 0x318);
	_panic("Failed mbuf validity check: mbuf %p len %d type %d flags 0x%x data %p rcvif %s ifflags 0x%x");
	_panic(ARG0);
	_panic(ARG0,);
	_panic(SP + 0xb0);
	_panic();
	_panic(?);
	_panic(ARG0,);
	_panic(SP + 0xb0);
	_panic(LocalFrame[-0xc0]);
	_panic();
	_panic(ARG0);
	_panic(?);
	_panic(ARG0,);
	_panic();
	_panic(ARG0,);
	_panic();
	_panic("%s: input packet count mismatch for %s, %d instead of %d\n");
	_panic(ARG0);
	_panic(?);
	_panic(?,);
	_panic(?);
	_panic(ARG0,);
	_panic();
	_panic(0x2f8);
	_panic(ARG0);
	_panic(ARG0,);
	_panic(ARG0);
	_panic("%s: wraparound refcnt for ifp=%p @%s:%d");
	_panic(ARG0);
	_panic("%s: negative refcnt for ifp=%p @%s:%d");
	_panic(0 ,);
	_panic(JUNSAFE to view);
	_panic(0 ,);
	_panic("%s: ifp=%p couldn't initialize transmit queue; err=%d");
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: flags mismatch (embryonic not set) ifp=%p");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("%s: ifp=%p couldn't initialize transmit queue; err=%d");
	_panic("%s: ifp=%p couldn't get a start thread; err=%d");
	_panic("%s: ifp=%p couldn't get a poll thread; err=%d");
	_panic("%s: ifp=%p couldn't get an input thread; err=%d");
	_panic(ARG0,);
	_panic(?);
	_panic(0x350);
	_panic(?);
	_panic(0x350);
	_panic(ARG0,);
	_panic();
	_panic(0x260);
	_panic();
	_panic(0x260);
	_panic(0x68);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0xfffffff009f7ebf8);
	_panic(0xfffffff009f17720);
	_panic(0xfffffff009f17918);
	_panic(0 ,);
	_panic(?);
	_panic(0xfffffff009f80748);
	_panic(0x848);
	_panic(SP + 0x848);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: couldn't create if_dt_tcall");
	_panic("%s: wraparound refcnt for ifp=%p @%s:%d");
	_panic(ARG0);
	_panic("%s: dl_if %p has no debug structure @%s:%d");
	_panic(ARG0,);
	_panic(0x518);
	_panic(ARG0,);
	_panic(0x518);
	_panic(0xfffffff009f7ebf8);
	_panic(?);
	_panic();
	_panic("%s: couldn't allocate loopback ifnet (%d) @%s:%d");
	_panic("%s: couldn't attach loopback ifnet (%d) @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic();
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic(0 ,);
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic();
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic();
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic(0 ,);
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic();
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: retain count is 0 @%s:%d");
	_panic();
	_panic("if6lpan_retain: bad signature @%s:%d");
	_panic("if6lpan_retain: retain count is 0 @%s:%d");
	_panic("if6lpan_release: bad signature @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("rn_init @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic("%s: bad sockaddr_in6 %p @%s:%d");
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic("%s: bad sockaddr_in6 %p @%s:%d");
	_panic("%s: broken logic (sa_len %d < skip %d ) @%s:%d");
	_panic(JUNSAFE to view);
	_panic(ARG0,);
	_panic(0x60);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("rt %p invalid refcnt %d @%s:%d");
	_panic("rt %p freed while in radix tree @%s:%d");
	_panic(?);
	_panic(SP + 0x90);
	_panic(0x60);
	_panic(SP + 0x90);
	_panic(LocalFrame[-0x140]);
	_panic(0 );
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("rtrequest: RTF_GATEWAY but no gateway @%s:%d");
	_panic("rtrequest delete @%s:%d");
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic("%s: bad sockaddr_in6 %p @%s:%d");
	_panic("%s(%p) bad refcnt @%s:%d");
	_panic("rtref_audit: on freed rte=%p @%s:%d");
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic("%s: bad sockaddr_in6 %p @%s:%d");
	_panic("rte_free: rte=%p refcnt=%d non-zero @%s:%d");
	_panic(?);
	_panic("rte_free: double free rte=%p @%s:%d");
	_panic("rte_free: rte=%p refcnt=%d @%s:%d");
	_panic("rte_free: corrupted rte=%p @%s:%d");
	_panic();
	_panic("%s(%p) bad refcnt @%s:%d");
	_panic("rtunref: on freed rte=%p @%s:%d");
	_panic();
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("%s: invalid count argument (%d) @%s:%d");
	_panic("%s: ifp=%p negative route refcnt! @%s:%d");
	_panic(?);
	_panic();
	_panic(JUNSAFE to view);
	_panic(ARG1,);
	_panic(?);
	_panic(SP + 0x168);
	_panic();
	_panic(SP + 0x170);
	_panic(0xfffffff009f176d0);
	_panic(0x60);
	_panic(ARG0,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic(SP + 0x90);
	_panic(?);
	_panic();
	_panic(0xfffffff009f19240);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(JUNSAFE to view);
	_panic(?);
	_panic(0xfffffff009d525b0);
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("%s: ifp=%p couldn't allocate class queues");
	_panic(ARG0,);
	_panic();
	_panic(ARG0,);
	_panic();
	_panic(0 ,);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xa0);
	_panic(SP + 0xa0,);
	_panic(0xfffffff009f17458);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic(ARG0);
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(ARG0,);
	_panic();
	_panic(?);
	_panic(0xfffffff009f80748);
	_panic(0xfffffff009d52618);
	_panic();
	_panic(0xfffffff009d52618);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0xa8,);
	_panic(0xa8);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0xa8,);
	_panic(0xa8);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x88,);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("utun_ctl_disconnect - ifnet_detach failed: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("utun_flowswitch_attach - ifnet_detach failed: %d @%s:%d");
	_panic(SP + 0xa8,);
	_panic(0xa8);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0xa8,);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0xa8,);
	_panic(0xa8);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(JUNSAFE to view);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("ipsec_ctl_disconnect - ifnet_detach failed: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("ipsec_flowswitch_attach - ifnet_detach failed: %d @%s:%d");
	_panic(SP + 0x88,);
	_panic(0x88);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x88,);
	_panic(LocalFrame[-0x108]);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x88,);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x88);
	_panic(SP + 0x88,);
	_panic(0x88);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(SP + 0x88,);
	_panic(0x88);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic(JUNSAFE to view);
	_panic(0x1208018d0);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("mcache_create(necp_flow_cache) failed @%s:%d");
	_panic("mcache_create(necp_client_flow_registration) failed @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("NAT64-prefix len is wrong: %u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("pf_find_state_all @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("pf_send_tcp: not AF_INET or AF_INET6! @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("pf_route: invalid parameters @%s:%d");
	_panic("pf_find_state @%s:%d");
	_panic("pf_calc_mss: not AF_INET or AF_INET6! @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("pf_route6: invalid parameters @%s:%d");
	_panic("pfi_kif_get for pfi_all failed @%s:%d");
	_panic("pfi_kif_ref with unknown type @%s:%d");
	_panic(?);
	_panic("pfi_kif_unref with unknown type @%s:%d");
	_panic("pfi_kif_get failed @%s:%d");
	_panic("pfi_dynaddr_update @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: parent rule of anchor not found! @%s:%d");
	_panic("%s: rule not found! @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: rcount value broken! @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("pf_route6: invalid parameters @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("%s: bad pb_type: %d @%s:%d");
	_panic("pbuf_csum_flags_get: bad pb_type: %d @%s:%d");
	_panic("%s: bad pb_type: %d @%s:%d");
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic("%s: if_clone_attach() failed, error %d @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: if_clone_attach() failed, error %d @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: lr=%p wraparound refcnt @%s:%d");
	_panic("%s: lr=%p negative reqcnt @%s:%d");
	_panic("%s: Attempt to detach an unattached llreach lr=%p @%s:%d");
	_panic(?);
	_panic("%s: lr=%p negative refcnt @%s:%d");
	_panic("%s: attached lr=%p is being freed @%s:%d");
	_panic("%s: lr %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcount lr=%p @%s:%d");
	_panic("%s: non-zero reqcnt lr=%p @%s:%d");
	_panic("%s: couldn't create flow event advisory thread @%s:%d");
	_panic(0xfffffff009f80250);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: Can't create UDP GC thread");
	_panic("%s: Can't create statistics report thread");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s sb_cfil_thread %p not current %p @%s:%d");
	_panic("%s SB_LOCK not set on %p @%s:%d");
	_panic("%s - %p queuesize %llu != offsetdiffs %llu @%s:%d");
	_panic("%s - %p unsupported type %u @%s:%d");
	_panic("%s - mq %p is free at %p @%s:%d");
	_panic("%s - %p m_length() %u != chainsize %lu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("so %p SB_LOCK not set @%s:%d");
	_panic("%s sb_cfil_thread %p not NULL @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: couldn't create network work queue thread");
	_panic("restricted_port_init: bitmap allocation failed @%s:%d");
	_panic(0 );
	_panic(0 ,);
	_panic(?);
	_panic("%s: failed to allocate flowq_cache @%s:%d");
	_panic("%s: no CPU clock available! @%s:%d");
	_panic(0x1);
	_panic(0 ,);
	_panic(?);
	_panic("%s can't create thread");
	_panic("%s: mbuf %p too short (%d) for IPv4 header @%s:%d");
	_panic("%s: off (%d) >= len (%d) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: igi=%p wraparound refcnt @%s:%d");
	_panic();
	_panic("%s: igi=%p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: igi=%p wraparound refcnt @%s:%d");
	_panic("%s: igmp_ifinfo not found for ifp %p(%s) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(ARG0);
	_panic();
	_panic("%s: igi=%p negative refcnt @%s:%d");
	_panic("%s: attached igi=%p is being freed @%s:%d");
	_panic("%s: ifp not NULL for igi=%p @%s:%d");
	_panic("%s: igi %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcnt igi=%p @%s:%d");
	_panic(0 );
	_panic(SP + 0x6c0);
	_panic(0xfffffff009f7b000);
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("m_pulldown malfunction @%s:%d");
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic(SP + 0x88);
	_panic("%s: IGMPv3 state reached, not IGMPv3 mode\n @%s:%d");
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("attempt to remove wrong ia %p from hash table @%s:%d");
	_panic("%s: unexpected (missing) refcnt ifa=%p @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("attempt to insert wrong ia %p into hash table @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("attempt to double-insert ia %p into hash table @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("attempt to insert wrong ia %p into hash table @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("attempt to double-insert ia %p into hash table @%s:%d");
	_panic("%s: ifa %p has no debug structure @%s:%d");
	_panic("%s: ifa %p is already in trash list @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p has no debug structure @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p bad ref cnt @%s:%d");
	_panic("%s: ifa %p cannot be freed @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?);
	_panic(SP + 0xc8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xc8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(SP + 0x48);
	_panic(JUNSAFE to view);
	_panic(LocalFrame[-0xa8]);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xe0);
	_panic(SP + 0x1c0);
	_panic(SP + 0x90);
	_panic(SP + 0x1a8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0x90);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("%s: trying to free %p when it is in use @%s:%d");
	_panic("_REALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(SP + 0xa0);
	_panic(0 ,);
	_panic();
	_panic(SP + 0x40);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: inm=%p negative/missing refcnt @%s:%d");
	_panic("%s: attached inm=%p is being freed @%s:%d");
	_panic("%s: ifma not NULL for inm=%p @%s:%d");
	_panic("%s: inm %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcount inm=%p @%s:%d");
	_panic("%s: non-zero reqcnt inm=%p @%s:%d");
	_panic(?);
	_panic(LocalFrame[-0x10]);
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: Attempt to attach an already attached inm=%p @%s:%d");
	_panic("%s: Attempt to reattach a detached inm=%p @%s:%d");
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("%s: inm %p has no debug structure @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: inm=%p negative reqcnt @%s:%d");
	_panic("%s: Attempt to detach an unattached record inm=%p @%s:%d");
	_panic("%s: inm %p is already in trash list @%s:%d");
	_panic(SP + 0x268);
	_panic(0xfffffff009f19240);
	_panic("_REALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: imo %p wraparound refcnt @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("%s: imo %p wraparound refcnt @%s:%d");
	_panic();
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic("unable to alloc the inpcb thread call @%s:%d");
	_panic(0xfffffff009f80748);
	_panic(0xfffffff009f80748,);
	_panic("%s: ipi %p already in the list @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: insufficient space to align inp_stat @%s:%d");
	_panic("%s: insufficient space to align inp_cstat @%s:%d");
	_panic("%s: insufficient space to align inp_wstat @%s:%d");
	_panic("%s: insufficient space to align inp_Wstat @%s:%d");
	_panic(0xfffffff009f80748);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: inp=%p so=%p proto=%d so_pcb is null! @%s:%d");
	_panic("%s: so=%p proto=%d couldn't set to STOPUSING @%s:%d");
	_panic("%s: inp %p invalid wantcnt %d, so %p [%d,%d] usecount %d retaincnt %d state 0x%x flags 0x%x lockhistory %s\n");
	_panic();
	_panic("%s: so %p [%d,%d] usecount %d lockhistory %s @%s:%d");
	_panic("%s: inp %p invalid wantcnt %d no socket @%s:%d");
	_panic("%s: so=%p head still exist @%s:%d");
	_panic();
	_panic(0xfffffff009f80768);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0xfffffff009f80748);
	_panic("%s: pcb=%p release with zero count @%s:%d");
	_panic("%s: pcb=%p so=%p usecount is negative @%s:%d");
	_panic("%s: so=%p not a valid state =%x @%s:%d");
	_panic("%s: RELEASE pcb=%p so=%p usecount is negative @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0xfffffff009f19240);
	_panic(0 ,);
	_panic(0xfffffff009f192e0);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: wrong or corrupted route: %p @%s:%d");
	_panic(0xfffffff009f80768);
	_panic(0xfffffff009f80768,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: failed to register PF_INET protocol: %d @%s:%d");
	_panic("%s: route %p marked with RTPRF_OURS with non-zero refcnt (%u) @%s:%d");
	_panic(SP + 0x90);
	_panic("%s: bad sockaddr_in %p @%s:%d");
	_panic();
	_panic("invalid QoS marking type @%s:%d");
	_panic();
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic("packet on dummynet queue w/o dummynet tag: 0x%llx @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("dummynet: heap_extract @%s:%d");
	_panic("dummynet: heap_extract from middle not supported on this heap!!! @%s:%d");
	_panic("packet on dummynet queue w/o dummynet tag: 0x%llx @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("icmp_dgram_attach @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic(0xfffffff009f192e0);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic(0xfffffff009f80ab8);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: Unable to find [PF_INET,IPPROTO_RAW,SOCK_RAW] @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Failed mbuf validity check: mbuf %p len %d type %d flags 0x%x data %p rcvif %s ifflags 0x%x");
	_panic("%s: unexpected packet %p @%s:%d");
	_panic();
	_panic("%s: unexpected packet %p @%s:%d");
	_panic("Failed mbuf validity check: mbuf %p len %d type %d flags 0x%x data %p rcvif %s ifflags 0x%x");
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic();
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic();
	_panic(SP + 0x90);
	_panic();
	_panic("%s: wrong or corrupted route: %p @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic();
	_panic(SP + 0x258);
	_panic(0xfffffff009f19240);
	_panic(LocalFrame[-0x1d4]);
	_panic();
	_panic("%s: inm=%p wraparound refcnt @%s:%d");
	_panic("%s: mbuf %p pkt too short (%d) for IP header (%u), hoff %u @%s:%d");
	_panic("%s: mbuf %p pkt len (%u) proto %d invalid ULP cksum offset (%u) cksum flags 0x%x\n @%s:%d");
	_panic("%s: mlen %u - hoff %u > 65535 @%s:%d");
	_panic("%s: imo %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: imo %p negative refcnt @%s:%d");
	_panic("%s: imo %p cannot be freed @%s:%d");
	_panic("%s: imo %p wraparound refcnt @%s:%d");
	_panic("%s: imo %p has no debug structure @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("rip_detach @%s:%d");
	_panic("rip_attach @%s:%d");
	_panic("rip_detach @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic();
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("rip_unlock: bad refoucnt so=%p val=%x lrh= %s @%s:%d");
	_panic();
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Allocating tcp_heuristic failed at boot-time! @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic(0 ,);
	_panic(0xfffffff007b7fab8,);
	_panic("tcp_pulloutofband @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("tcphdr too big @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("tcp_init @%s:%d");
	_panic("failed to allocate call entry 1 in tcp_init @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("\n%s: Unaligned IPv6 header %p\n");
	_panic("\n%s: Unaligned IP header %p\n");
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic();
	_panic("tcp_lock: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("tcp_lock: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d");
	_panic("tcp_unlock: so=%p usecount=%x lrh= %s @%s:%d");
	_panic("tcp_unlock: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d");
	_panic("tcp_getlock: so=%p NULL so_pcb %s @%s:%d");
	_panic("tcp_getlock: so=%p usecount=%x lrh= %s @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%s:%d");
	_panic("%s: so %p inp %p ifp %p if_tcp_kao_cnt == 0 @%s:%d");
	_panic("%s: so %p inp %p ifp NULL @%s:%d");
	_panic();
	_panic("%s: imo %p wraparound refcnt @%s:%d");
	_panic("%s: so=%p null inp @%s:%d");
	_panic("%s so=%p inp=%p @%s:%d");
	_panic("%s: so=%p null inp @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("%s: bad so back ptr inp=%p @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("%s: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("%s: so=%p NULL so_pcb lrh= %s @%s:%d");
	_panic("%s: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("NULL pointer passed to ip_ecn_ingress @%s:%d");
	_panic("NULL pointer passed to ip_ecn_egress @%s:%d");
	_panic("NULL pointer passed to ip6_ecn_ingress @%s:%d");
	_panic("NULL pointer passed to ip6_ecn_egress @%s:%d");
	_panic("NULL pointer passed to ip46_ecn_ingress @%s:%d");
	_panic("NULL pointer passed to ip46_ecn_egress @%s:%d");
	_panic("NULL pointer passed to ip64_ecn_ingress @%s:%d");
	_panic("NULL pointer passed to ip64_ecn_egress @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic(0 ,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("kipf_ref overflow @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("kipf_ref underflow @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("group with unit %u already contains a connection with hash %u @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("flow divert group %u is disconnecting, but no groups are active (groups = %p, active count = %u @%s:%d");
	_panic("group with unit %d (%p) != unit info (%p) @%s:%d");
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0xfffffff009f81b90);
	_panic("%s: mppi %p already in the list @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic(0xfffffff009f81b90);
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("%s - %lx: skipped state [u=%d,r=%d,s=%d]\n @%s:%d");
	_panic("%s: mpts %p wraparound refcnt @%s:%d");
	_panic("%s: mpts %p negative refcnt @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("%s: mpts %p wraparound refcnt @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("NAT64-prefix len is wrong: %u @%s:%d");
	_panic("corrupt so_rcv: sb_mb %p sb_cc %d\n @%s:%d");
	_panic(?);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: mpts %p negative refcnt @%s:%d");
	_panic("%s: mpts %p wraparound refcnt @%s:%d");
	_panic("%s: mpts %p negative refcnt @%s:%d");
	_panic("%s: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("%s: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d");
	_panic("%s: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d");
	_panic("%s: so=%p usecount=%x lrh= %s @%s:%d");
	_panic("%s: mpp=%p inside=%x lrh= %s @%s:%d");
	_panic("%s: so=%p NULL so_pcb %s @%s:%d");
	_panic("%s: so=%p usecount=%x lrh= %s @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("optlen too large @%s:%d");
	_panic("ah_hmac_sha2_512_result: what? @%s:%d");
	_panic("%s: inconsistent size for SHA512 context @%s:%d");
	_panic("ah_hmac_sha2_512_loop: what? @%s:%d");
	_panic("ah_hmac_sha2_512_init: what? @%s:%d");
	_panic("%s: inconsistent size for SHA512 context @%s:%d");
	_panic("ah_hmac_sha2_384_result: what? @%s:%d");
	_panic("%s: inconsistent size for SHA384 context @%s:%d");
	_panic("ah_hmac_sha2_384_loop: what? @%s:%d");
	_panic("ah_hmac_sha2_384_init: what? @%s:%d");
	_panic("%s: inconsistent size for SHA384 context @%s:%d");
	_panic("ah_hmac_sha2_256_result: what? @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("ah_hmac_sha2_256_loop: what? @%s:%d");
	_panic("ah_hmac_sha2_256_init: what? @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("ah_keyed_sha1_result: what? @%s:%d");
	_panic("ah_keyed_sha1_loop: what? @%s:%d");
	_panic("ah_keyed_sha1_init: what? @%s:%d");
	_panic("ah_keyed_md5_result: what? @%s:%d");
	_panic("ah_keyed_md5_loop: what? @%s:%d");
	_panic("ah_keyed_md5_init: what? @%s:%d");
	_panic("ah_hmac_sha1_result: what? @%s:%d");
	_panic("ah_hmac_sha1_loop: what? @%s:%d");
	_panic("ah_hmac_sha1_init: what? @%s:%d");
	_panic("ah_hmac_md5_result: what? @%s:%d");
	_panic("ah_hmac_md5_loop: what? @%s:%d");
	_panic("ah_hmac_md5_init: what? @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("ah_update_mbuf: wrong offset specified @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("sav->sah == NULL at key_checktunnelsanity @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("sav->sah == NULL at key_checktunnelsanity @%s:%d");
	_panic("ah_hdrsiz: NULL was passed. @%s:%d");
	_panic("unsupported mode passed to ah_hdrsiz @%s:%d");
	_panic("ah4_output: assumption failed (first mbuf length) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("esp_common_ivlen: unknown algorithm @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("mbuf chain? @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("internal error: no decrypt function @%s:%d");
	_panic("sav->sah == NULL at key_checktunnelsanity @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("internal error: no decrypt function @%s:%d");
	_panic("sav->sah == NULL at key_checktunnelsanity @%s:%d");
	_panic("invalid ivlen @%s:%d");
	_panic("esp_output: should not reach here @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("internal error: no encrypt function @%s:%d");
	_panic("assertion failed for AH_MAXSUMSIZE @%s:%d");
	_panic("%s: inconsistent size for AES decrypt context @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("esp_gcm_ivlen: unknown algorithm @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s:%d sav is NULL @%s:%d");
	_panic("%s:%d algo is NULL @%s:%d");
	_panic("%s:%d sav is NULL @%s:%d");
	_panic("%s:%d tag is NULL @%s:%d");
	_panic("%s:%d sav is NULL @%s:%d");
	_panic("%s:%d tag is NULL @%s:%d");
	_panic("%s:%d m is NULL @%s:%d");
	_panic("%s:%d sav is NULL @%s:%d");
	_panic("%s:%d m is NULL @%s:%d");
	_panic("%s:%d sav is NULL @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("ipsec4_getpolicybysock: NULL pointer was passed. @%s:%d");
	_panic("ipsec4_getpolicybysock: currsp is NULL. @%s:%d");
	_panic("ipsec4_getpolicybysock: unsupported address family @%s:%d");
	_panic("ipsec4_setspidx_inpcb: no sp_in/out found. @%s:%d");
	_panic("ipsec4_getpolicybysock: illegal direction. @%s:%d");
	_panic("ipsec4_getpolicybyaddr: NULL pointer was passed. @%s:%d");
	_panic("ipsec_setspidx: m == 0 passed. @%s:%d");
	_panic("ipsec4_get_ulp: too short @%s:%d");
	_panic("ipsec6_setspidx_in6pcb: no sp_in/out found. @%s:%d");
	_panic("ipsec6_setspidx_in6pcb: no PCB found. @%s:%d");
	_panic("ipsec6_setspidx_in6pcb: no in6p_sp found. @%s:%d");
	_panic("ipsec4_getpolicybyinterface: NULL pointer was passed. @%s:%d");
	_panic("ipsec6_getpolicybysock: NULL pointer was passed. @%s:%d");
	_panic("ipsec6_getpolicybysock: currsp is NULL. @%s:%d");
	_panic("ipsec6_getpolicybysock: illegal direction. @%s:%d");
	_panic("ipsec6_getpolicybyaddr: NULL pointer was passed. @%s:%d");
	_panic("ipsec6_getpolicybyinterface: NULL pointer was passed. @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("ipsec_init_policy: NULL pointer was passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic("ipsec4_delete_pcbpolicy: NULL pointer was passed. @%s:%d");
	_panic();
	_panic("ipsec6_delete_pcbpolicy: NULL pointer was passed. @%s:%d");
	_panic("ipsec_get_reqlevel: NULL pointer is passed. @%s:%d");
	_panic("ipsec_get_reqlevel: family mismatched. @%s:%d");
	_panic("key_get_reqlevel: Unknown family. %d @%s:%d");
	_panic("ipsec_get_reqlevel: Illegal IPsec level %u @%s:%d");
	_panic("ipsec_get_reqlevel: Illegal protocol defined %u\n @%s:%d");
	_panic("ipsec_hdrsiz: Invalid policy found. %d @%s:%d");
	_panic("ipsec4_in_reject: invalid inpcb/socket @%s:%d");
	_panic("ipsec6_in_reject: invalid in6p/socket @%s:%d");
	_panic("ipsec_hdrsiz: Invalid policy found. %d @%s:%d");
	_panic("ipsec4_hdrsize: why is socket NULL but there is PCB. @%s:%d");
	_panic("ipsec6_hdrsize: why is socket NULL but there is PCB. @%s:%d");
	_panic("ipsec4_encapsulate: assumption failed (first mbuf length) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("ipsec6_encapsulate: assumption failed (first mbuf length) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("NULL pointer passed to ip6_ecn_ingress @%s:%d");
	_panic("ipsec_chkreplay: NULL pointer was passed. @%s:%d");
	_panic("ipsec_logsastr: family mismatched. @%s:%d");
	_panic("state == NULL in ipsec4_output @%s:%d");
	_panic("state->m == NULL in ipsec4_output @%s:%d");
	_panic("state->dst == NULL in ipsec4_output @%s:%d");
	_panic("ipsec46_encapsulate: assumption failed (first mbuf length) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("ipsec4_splithdr: first mbuf too short, m_len %d, pkt_len %d, m_flag %x @%s:%d");
	_panic("ipsec6_splithdr: first mbuf too short @%s:%d");
	_panic("ipsec4_output: no SA found, but required. @%s:%d");
	_panic("state == NULL in ipsec4_output @%s:%d");
	_panic("state->m == NULL in ipsec4_output @%s:%d");
	_panic("state->dst == NULL in ipsec4_output @%s:%d");
	_panic("state == NULL in ipsec6_output_trans @%s:%d");
	_panic("state->m == NULL in ipsec6_output_trans @%s:%d");
	_panic("nexthdrp == NULL in ipsec6_output_trans @%s:%d");
	_panic("mprev == NULL in ipsec6_output_trans @%s:%d");
	_panic("sp == NULL in ipsec6_output_trans @%s:%d");
	_panic("tun == NULL in ipsec6_output_trans @%s:%d");
	_panic("ipsec6_output_trans: no SA found, but required. @%s:%d");
	_panic("state == NULL in ipsec6_output_tunnel @%s:%d");
	_panic("state->m == NULL in ipsec6_output_tunnel @%s:%d");
	_panic("sp == NULL in ipsec6_output_tunnel @%s:%d");
	_panic("ipsec6_output_tunnel: no SA found, but required. @%s:%d");
	_panic("ipsec6_encapsulate: assumption failed (first mbuf length) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("NULL pointer passed to ip64_ecn_ingress @%s:%d");
	_panic("state == NULL in ipsec6_output @%s:%d");
	_panic("state->m == NULL in ipsec6_output @%s:%d");
	_panic("nexthdrp == NULL in ipsec6_output @%s:%d");
	_panic("mprev == NULL in ipsec6_output @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(LocalFrame[-0x100]);
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("nicmp6 is NULL in %s, which isn't good! @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("m_pulldown malfunction @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("assumption failed in %s:%d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("icmp6_dgram_attach @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(SP + 0x38);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xc8);
	_panic(SP + 0x90);
	_panic(?);
	_panic(0 );
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("%s: attempt to insert wrong ia %p into hash table @%s:%d");
	_panic("%s: attempt to double-insert ia %p into hash table @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: attempt to remove wrong ia %p from ipv6 hash table @%s:%d");
	_panic("%s: unexpected (missing) refcnt ifa=%p @%s:%d");
	_panic("%s: ifa %p has no debug structure @%s:%d");
	_panic("%s: ifa %p is already in trash list @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p has no debug structure @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p bad ref cnt @%s:%d");
	_panic("%s: ifa %p cannot be freed @%s:%d");
	_panic(SP + 0x38);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(SP + 0xc8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009f225c8);
	_panic(0xfffffff009d525d8);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("%s: mbuf %p pkt too short (%d) for IPv6 header @%s:%d");
	_panic("%s: off (%d) >= len (%d) @%s:%d");
	_panic("%s: unexpected packet %p @%s:%d");
	_panic("%s: unexpected (missing) refcnt ifa=%p @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("%s: Unable to find [PF_INET6,IPPROTO_RAW,SOCK_RAW] @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: failed to register PF_INET6 protocol: %d @%s:%d");
	_panic("%s: unexpected packet %p @%s:%d");
	_panic(0xfffffff009f23348);
	_panic("Failed mbuf validity check: mbuf %p len %d type %d flags 0x%x data %p rcvif %s ifflags 0x%x");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("ip6_notify_pmtu: socket is NULL @%s:%d");
	_panic(LocalFrame[-0x3c0]);
	_panic("%s: unexpected packet %p @%s:%d");
	_panic("assumption failed: hdr not split @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("Double free of ip6e_hbh @%s:%d");
	_panic("Double free of ip6e_dest1 @%s:%d");
	_panic("Double free of ip6e_rthdr @%s:%d");
	_panic("Double free of ip6e_dest2 @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: mbuf %p pkt len (%u) < hoff+ip6_hdr+ext_hdr (%u+%u+%u)\n @%s:%d");
	_panic("%s: mbuf %p pkt len (%u) proto %d invalid ULP cksum offset (%u) cksum flags 0x%x\n @%s:%d");
	_panic();
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(0 ,);
	_panic("ip6_getpcbopt: unexpected option @%s:%d");
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("%s: im6o %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: im6o %p negative refcnt @%s:%d");
	_panic("%s: im6o %p cannot be freed @%s:%d");
	_panic("%s: im6o %p wraparound refcnt @%s:%d");
	_panic("%s: im6o %p has no debug structure @%s:%d");
	_panic(SP + 0x218);
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic("%s: i6mm_maddr not NULL for imm=%p @%s:%d");
	_panic(?);
	_panic(LocalFrame[-0x28]);
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: Attempt to attach an already attached in6m=%p @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic();
	_panic(0 ,);
	_panic();
	_panic(SP + 0x50);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: in6m=%p negative refcnt @%s:%d");
	_panic("%s: attached in6m=%p is being freed @%s:%d");
	_panic("%s: ifma not NULL for in6m=%p @%s:%d");
	_panic("%s: in6m %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcount in6m=%p @%s:%d");
	_panic("%s: non-zero reqcnt in6m=%p @%s:%d");
	_panic("%s: in6m %p has no debug structure @%s:%d");
	_panic();
	_panic(SP + 0xb0);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: in6m=%p negative reqcnt @%s:%d");
	_panic("%s: Attempt to detach an unattached record in6m=%p @%s:%d");
	_panic("%s: in6m %p is already in trash list @%s:%d");
	_panic("_REALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("%s: im6o %p wraparound refcnt @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic(0xfffffff009f80748);
	_panic("%s: inp=%p so=%p proto=%d so_pcb is null! @%s:%d");
	_panic("%s: so=%p proto=%d couldn't set to STOPUSING @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: wrong or corrupted route: %p @%s:%d");
	_panic("%s @%s:%d");
	_panic("%s: route %p marked with RTPRF_OURS with non-zero refcnt (%u) @%s:%d");
	_panic(SP + 0x90);
	_panic("%s: bad sockaddr_in6 %p @%s:%d");
	_panic("%s: mli=%p wraparound refcnt @%s:%d");
	_panic(ARG0);
	_panic();
	_panic("%s: mli=%p negative refcnt @%s:%d");
	_panic("%s: attached mli=%p is being freed @%s:%d");
	_panic("%s: ifp not NULL for mli=%p @%s:%d");
	_panic("%s: mli %p cannot be freed @%s:%d");
	_panic("%s: non-zero refcnt mli=%p @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic(SP + 0x88);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: mli=%p wraparound refcnt @%s:%d");
	_panic();
	_panic("%s: mli=%p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: mli=%p wraparound refcnt @%s:%d");
	_panic("%s: mld_ifinfo not found for ifp %p(%s) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0xfffffff009f23348);
	_panic("m_pulldown malfunction @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("%s: MLDv2 state reached, not MLDv2 mode\n @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("ndopts == NULL in nd6_option @%s:%d");
	_panic("uninitialized ndopts in nd6_option @%s:%d");
	_panic("ndopts == NULL in nd6_options @%s:%d");
	_panic("uninitialized ndopts in nd6_options @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("%s: ln(%p) rt(%p) rt_ifp == NULL @%s:%d");
	_panic("%s: rt_llinfo(%p) is not equal to ln(%p) @%s:%d");
	_panic("%s: rt(%p) key is NULL ln(%p) @%s:%d");
	_panic("%s: rti freed with non-empty router list @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("%s: rti freed with non-empty router list @%s:%d");
	_panic(?);
	_panic(0xfffffff009f23348);
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: trying to free %p when it is in use @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic("ifp == NULL in nd6_cache_lladdr @%s:%d");
	_panic("from == NULL in nd6_cache_lladdr @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic(0xfffffff009f84c40);
	_panic("%s: dad %p wraparound refcnt @%s:%d");
	_panic(ARG0);
	_panic(?);
	_panic("%s: dad %p negative refcnt @%s:%d");
	_panic("%s: attached dad=%p is being freed @%s:%d");
	_panic(?);
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("nd6_dad_start: ifa->ifa_ifp == NULL @%s:%d");
	_panic("%s: dad %p wraparound refcnt @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic(0 ,);
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic(LocalFrame[-0x88]);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009f233e8);
	_panic(SP + 0x120800180);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic(ARG0);
	_panic("%s: nddr %p negative refcnt @%s:%d");
	_panic(?);
	_panic("%s: attached nddr %p is being freed @%s:%d");
	_panic("%s: nddr %p cannot be freed @%s:%d");
	_panic(ARG0);
	_panic("%s: ndpr %p negative refcnt @%s:%d");
	_panic("%s: freeing ndpr %p with outstanding address reference (%d) @%s:%d");
	_panic();
	_panic(SP + 0x118);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic("%s: ifa %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009f233e8);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: attached ndpr %p is being freed @%s:%d");
	_panic("%s: ndpr %p cannot be freed @%s:%d");
	_panic("%s: ndpr %p route %p not freed @%s:%d");
	_panic("%s: ndpr %p non-zero solicitors count (%d) @%s:%d");
	_panic("%s: ndpr %p non-empty solicitors tree @%s:%d");
	_panic(0xfffffff009f233e8);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic(SP + 0x170);
	_panic(SP + 0x88);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic("%s: ndpr %p has no debug structure @%s:%d");
	_panic(0xfffffff009f233d8);
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic(ARG0);
	_panic(0x10);
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic(SP + 0x120800040);
	_panic(SP + 0x120800060);
	_panic(0x10);
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic("%s: nddr %p has no debug structure @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(ARG0);
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic(0xfffffff009f233d8);
	_panic("%s: nddr %p wraparound refcnt @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(ARG0);
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic("%s: unexpected (missing) refcnt ndpr=%p @%s:%d");
	_panic();
	_panic("%s: ndpr %p wraparound refcnt @%s:%d");
	_panic(?);
	_panic("%s: rti freed with non-empty router list @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: rti freed with non-empty router list @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: rti freed with non-empty router list @%s:%d");
	_panic("bad if_index on interface from route @%s:%d");
	_panic();
	_panic("rip6_detach @%s:%d");
	_panic();
	_panic("rip6_detach @%s:%d");
	_panic("rip6_attach @%s:%d");
	_panic();
	_panic("rip6_detach @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("%s: im6o %p wraparound refcnt @%s:%d");
	_panic("%s: so=%p null inp @%s:%d");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned\n");
	_panic("\n%s: mbuf %p data ptr %p is not 32-bit aligned [%s: alignerrs=%lld]\n");
	_panic("key_allocsp: NULL pointer is passed. @%s:%d");
	_panic("key_allocsp: Invalid direction is passed. @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_do_allocsa_policy: lifetime_current is NULL.\n @%s:%d");
	_panic("key_do_allocsa_policy: invalid proto is passed. @%s:%d");
	_panic("key_freesav: NULL pointer is passed. @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_sa_chgstate called with sav == NULL @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("key_delsav: NULL pointer is passed. @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("key_delsav: NULL pointer is passed. @%s:%d");
	_panic("key_checkrequest: NULL pointer is passed. @%s:%d");
	_panic("key_checkrequest: Invalid policy defined. @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_acquire: NULL pointer is passed. @%s:%d");
	_panic("key_acquire: invalid proto is passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_spdexpire: NULL pointer is passed. @%s:%d");
	_panic("key_expire: NULL pointer is passed. @%s:%d");
	_panic("key_expire: Why was SA index in SA NULL. @%s:%d");
	_panic("key_expire: invalid proto is passed. @%s:%d");
	_panic("key_freesav: NULL pointer is passed. @%s:%d");
	_panic("key_freesp: NULL pointer is passed. @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("key_delsah: NULL pointer is passed. @%s:%d");
	_panic("key_sp2msg: NULL pointer was passed. @%s:%d");
	_panic("key_allocsa: NULL pointer is passed. @%s:%d");
	_panic("key_do_get_translated_port: lifetime_current is NULL.\n @%s:%d");
	_panic("key_freesav: NULL pointer is passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_msg2sp: NULL pointer was passed. @%s:%d");
	_panic("key_msg2sp: invalid length. @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_spdacquire: NULL pointer is passed. @%s:%d");
	_panic("key_spdacquire: called but there is request. @%s:%d");
	_panic("key_spdacquire: policy mismathed. IPsec is expected. @%s:%d");
	_panic("key_sendup_mbuf: NULL pointer was passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_newsaidx: NULL pointer is passed. @%s:%d");
	_panic(0xfffffff009f192e0);
	_panic(0xfffffff009f23348);
	_panic("key_ismyaddr: NULL pointer is passed. @%s:%d");
	_panic("%s: in6m=%p wraparound refcnt @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("key_freereg: NULL pointer is passed. @%s:%d");
	_panic("key_parse: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_align @%s:%d");
	_panic("key_migrate: NULL pointer is passed. @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("null pointer passed to key_gather @%s:%d");
	_panic("key_spddisable: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_spdenable: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("%s: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_spddelete2: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_spdflush: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_spddump: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_spdget: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_spddelete: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic(0 ,);
	_panic("key_spdadd: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("key_promisc: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_freesav: NULL pointer is passed. @%s:%d");
	_panic("key_dump: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_flush: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_register: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_acquire2: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_get: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_delete: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_add: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("key_newsa: NULL pointer is passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_getmsgbuf_x1: NULL pointer is passed. @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("key_setsaval: NULL pointer is passed. @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_update: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("key_getspi: NULL pointer is passed. @%s:%d");
	_panic("invalid mbuf passed to key_senderror @%s:%d");
	_panic("sav->sah == NULL at key_checktunnelsanity @%s:%d");
	_panic("key_sa_recordxfer called with sav == NULL @%s:%d");
	_panic("key_sa_recordxfer called with m == NULL @%s:%d");
	_panic("key_sa_stir_iv called with sav == NULL @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("key_output: NULL pointer was passed. @%s:%d");
	_panic("key_output: not M_PKTHDR ?? @%s:%d");
	_panic("key_sendup_mbuf: NULL pointer was passed. @%s:%d");
	_panic(?);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic(?);
	_panic("pthread kernel extension not loaded (function table is NULL). @%s:%d");
	_panic("Re-initialisation of pthread kext callbacks. @%s:%d");
	_panic("pthread_kext_register called without callbacks pointer. @%s:%d");
	_panic("immediate_call was already enqueued @%s:%d");
	_panic("delayed_call was already enqueued @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Invalid thread request (%p) state %d @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("delayed_call was already enqueued @%s:%d");
	_panic("immediate_call was already enqueued @%s:%d");
	_panic("workq_mark_exiting called twice @%s:%d");
	_panic(?);
	_panic();
	_panic("Invalid thread request (%p) state %d @%s:%d");
	_panic("Quantum expired for thread that doesn't support cooperative workqueue @%s:%d");
	_panic("Thread should not have workq bucket of QoS UN @%s:%d");
	_panic("immediate_call was already enqueued @%s:%d");
	_panic(0 ,);
	_panic("panic: ticket lock acquired check done outside of kernel debugger @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x1d8]);
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("bsd_init: cannot find root vnode: %s @%s:%d");
	_panic("bsd_init: Failed to allocate bsd pageable map @%s:%d");
	_panic("pthread kernel extension not loaded (function table is NULL). @%s:%d");
	_panic("%s: if_clone_attach() failed, error %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("failed to allocate devpath string! @%s:%d");
	_panic("rootvp not authenticated after mounting @%s:%d");
	_panic(0xfffffff009f06f00);
	_panic("kernel_debug_read: Invalid Mode @%s:%d");
	_panic("create_buffers_triage shouldn't be called once we have inited the triage system. @%s:%d");
	_panic("delete_buffers_triage shouldn't be invoked @%s:%d");
	_panic("kdebug: invalid name for coprocessor: %p @%s:%d");
	_panic("kdebug: no callback for coprocessor @%s:%d");
	_panic("kdebug: invalid procfilt flags %x @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(SP + 0xb0);
	_panic();
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("kdbg_wait() called with interrupts disabled @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("kernel_debug_early_end() not call on boot processor @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(LocalFrame[-0x88]);
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(SP + 0x208);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0xfffffff009f248f0);
	_panic("%s: bad credential %p @%s:%d");
	_panic("AIO on a proc list that does not belong to that proc. @%s:%d");
	_panic("Close and exit flags set at the same time @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Trying to remove an entry from a work queue, but it is not on a queue @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic();
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("lio_pending accounting mistake @%s:%d");
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic("AIO on a proc list that does not belong to that proc. @%s:%d");
	_panic(0x58);
	_panic(0 ,);
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic();
	_panic("AIO on a proc list that does not belong to that proc. @%s:%d");
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Negative total AIO count! @%s:%d");
	_panic("proc %p: p_aio_total_count accounting mismatch @%s:%d");
	_panic(0 ,);
	_panic("AIO on a proc list that does not belong to that proc. @%s:%d");
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic(?);
	_panic("AIO on a proc list that does not belong to that proc. @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic("aio_workq_entry %p being freed while still enqueued @%s:%d");
	_panic(0xfffffff009d60500);
	_panic(LocalFrame[-0x40]);
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("KAUTH_PROCESS_CANSIGNAL not implemented @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("auth against NULL credential @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("thread wants credential but has no BSD thread info @%s:%d");
	_panic("thread wants credential but has no BSD process @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("kauth_cred_unref: cred %p never added @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("kauth_cred_add: invalid cred %p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("CoreEntitlements: missing AMFI bridge\n @%s:%d");
	_panic("CoreEntitlements: This API is no longer supported\n @%s:%d");
	_panic("CoreEntitlements: missing AMFI bridge\n @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic(?);
	_panic(SP + 0x38);
	_panic(0 ,);
	_panic(?);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("file %d/%p in flux during exec of %p @%s:%d");
	_panic(SP + 0x120801888);
	_panic("bad select_conflict_queue @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("bad wait queue for waitq_wakeup64_all %p (%sfp:%p) @%s:%d");
	_panic("%s: called with fileproc in flux (%d/:%p) @%s:%d");
	_panic(SP + 0x130);
	_panic(SP + 0x128);
	_panic();
	_panic("fdfree: found fp with UF_RESERVED @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic(ARG0,);
	_panic(0 ,);
	_panic(?);
	_panic("%s: caller without an ioccount on fileproc (%d/:%p) @%s:%d");
	_panic();
	_panic(ARG0,);
	_panic();
	_panic(ARG0,);
	_panic(?);
	_panic("%s: caller without an ioccount on fileproc (%d/:%p) @%s:%d");
	_panic(?);
	_panic(SP + 0x120800048);
	_panic();
	_panic(SP + 0x320);
	_panic(SP + 0x358);
	_panic(0xfffffff00784a668);
	_panic(SP + 0x320);
	_panic(SP + 0x328);
	_panic(SP + 0x338);
	_panic(SP + 0x328);
	_panic(SP + 0x320);
	_panic(SP + 0x358);
	_panic(SP + 0x370);
	_panic(SP + 0x3a8);
	_panic(SP + 0x370);
	_panic(SP + 0x3a8);
	_panic(SP + 0x3f0);
	_panic(SP + 0x328);
	_panic(SP + 0x3e0);
	_panic(?);
	_panic(SP + 0x3e0);
	_panic(SP + 0x328);
	_panic(?);
	_panic(SP + 0x328);
	_panic(SP + 0x3e0);
	_panic(?);
	_panic(SP + 0x328);
	_panic(0 ,);
	_panic(SP + 0x3e0);
	_panic(SP + 0x328);
	_panic(SP + 0x3e0);
	_panic(SP + 0x328);
	_panic(SP + 0x138);
	_panic(SP + 0x328);
	_panic(0 );
	_panic(SP + 0x328);
	_panic(0 );
	_panic(SP + 0x328);
	_panic(0 );
	_panic(SP + 0x328);
	_panic(0 );
	_panic(SP + 0x328);
	_panic(0 );
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic(SP + 0x1b8);
	_panic(ARG0,);
	_panic(SP + 0x120801888);
	_panic(LocalFrame[-0xa0]);
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(0 ,);
	_panic("Unexpected wait result: %d @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("unknown kqwl thread qos update operation: %d @%s:%d");
	_panic("KNOTE() called concurrently on knote %p @%s:%d");
	_panic("filter %d cannot change QoS @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s[%d](%p, %ld) @%s:%d");
	_panic("%s[%d](%p, %p) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("knote lock context not found: %p @%s:%d");
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("kq(%p) invalid refcount %d @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: proc mismatch (kq->kq_p=%p != p=%p) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: - bad wait_result (%d) @%s:%d");
	_panic("%s: - invalid wait_result (%d) @%s:%d");
	_panic("%s: so=%p NULL NO so_pcb %s @%s:%d");
	_panic("%s: so=%p usecount=%d lrh= %s @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: so=%p usecount=%d lrh= %s @%s:%d");
	_panic("%s: so=%p NO PCB usecount=%d lr=%p lrh= %s @%s:%d");
	_panic("%s: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("%s: so=%p so_pcb=%p lr=%p ref=%d lrh= %s @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("ctl_getlock: so=%p NULL NO so_pcb %s @%s:%d");
	_panic("ctl_getlock: so=%p usecount=%x lrh= %s @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("ctl_unlock: so=%p usecount=%x lrh= %s @%s:%d");
	_panic("ctl_unlock: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("ctl_lock: so=%p NO PCB! lr=%p lrh= %s @%s:%d");
	_panic("ctl_lock: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("ctl_connect so_pcb null @%s:%d");
	_panic("ctl_connect kctl null @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("ctl_setup_kctl so_pcb null @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("ctl_bind so_pcb null @%s:%d");
	_panic("ctl_bind kctl null @%s:%d");
	_panic("ctl_ctloutput: ctl %s returned len (%lu) > sopt_valsize (%lu)\n");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("%s no space in table @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) not owned @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) not owned @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic();
	_panic(SP + 0x28);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("invalid mac policy extension data @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x1e8]);
	_panic(SP + 0xc8);
	_panic(0 ,);
	_panic("Task bank init called with non null bank context for task: %p and bank_context: %p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0xfffffff009f85bf8);
	_panic(SP + 0x2d0);
	_panic(SP + 0x20);
	_panic(0 ,);
	_panic(SP + 0x20);
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0x2a8);
	_panic("exec_resettextvp: expected valid vp @%s:%d");
	_panic(0 );
	_panic(0xfffffff009f85bf8);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x20);
	_panic(SP + 0x2d0);
	_panic(0 ,);
	_panic("Task bank init called with non null bank context for task: %p and bank_context: %p @%s:%d");
	_panic("Process 1 exec of %s failed, errno %d @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic("exit_thread failed to exit @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("parent child linkage broken @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("proc being freed and unexpected refcount %p:%d:0x%x @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lf_findoverlap: default @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic("lf_findoverlap: default @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("cycle in wakelock list @%s:%d");
	_panic("lf_findoverlap: default @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("fork1 called with unknown kind %d @%s:%d");
	_panic("Task bank init called with non null bank context for task: %p and bank_context: %p @%s:%d");
	_panic(SP + 0x2a8);
	_panic(0 );
	_panic("Unable to allocate a new pid @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("%s: invalid sig\n @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic(?);
	_panic(0 ,);
	_panic("_malloc TYPE @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("_REALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("_malloc TYPE @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(SP + 0x338);
	_panic(SP + 0x2d8);
	_panic(SP + 0x158);
	_panic(0 ,);
	_panic(SP + 0x158);
	_panic(0 ,);
	_panic("couldn't create default persona credentials! @%s:%d");
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("persona count underflow! @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("persona ref count underflow! @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("NULL credentials (persona:%p) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("chgproccnt: lost user @%s:%d");
	_panic(?);
	_panic("proc_parentdropref  -ve ref @%s:%d");
	_panic("proc being freed and unexpected refcount %p:%d:0x%x @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0x2a8);
	_panic(LocalFrame[-0x10]);
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("pidlist allocation exhausted @%s:%d");
	_panic(0 ,);
	_panic("%s: callout =%d for pid %d @%s:%d");
	_panic("pidlist allocation exhausted @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: callout =%d for pid %d @%s:%d");
	_panic("pidlist allocation exhausted @%s:%d");
	_panic("%s: callout =%d for zombie %d @%s:%d");
	_panic("pidlist allocation exhausted @%s:%d");
	_panic(0 ,);
	_panic("%s: callout =%d for pid %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(?);
	_panic("%s: bad credential %p @%s:%d");
	_panic("unknown error %#x @%s:%d");
	_panic(0xfffffff009f85cb0);
	_panic("filt_signal: detected NOTE_EXIT event @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: invalid sig\n @%s:%d");
	_panic("proc_signalstart: thread attempting to signal a process for which it holds the signal lock @%s:%d");
	_panic("psignal: bad signal number %d @%s:%d");
	_panic("unexpected SIGKILL of %s %s (no reason provided)");
	_panic("unexpected SIGKILL of %s %s with reason -- namespace %d code 0x%llx description %.800s");
	_panic("%s: bad credential %p @%s:%d");
	_panic("sigwait with no signal wakeup @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: invalid sig\n @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("ureadc: non-positive resid @%s:%d");
	_panic("ureadc: non-positive iovlen @%s:%d");
	_panic("ureadc: non-positive iovcnt @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("hashinit: bad cnt @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic(?);
	_panic("%s: bad uio_max_iovs @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("Invalid uio for pushback @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic("%s: uio is not user space @%s:%d");
	_panic("%s: uio is not sys space @%s:%d");
	_panic(?);
	_panic("Sched info changed?! @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("attempting to register a sysctl at previously registered slot : %d @%s:%d");
	_panic("trying to register a node %p with an invalid oid_number: %d @%s:%d");
	_panic("Use sysctl_register_oid_early to register permanent nodes @%s:%d");
	_panic("Old style sysctl without a version number isn't supported @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("Trying to unregister permanent sysctl %p @%s:%d");
	_panic("Old style sysctl without a version number isn't supported @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_pe_arm_get_soc_base_phys("jetsam_proc_name_panic",0xfffffff009f24e14,0x11,0 );
	_pe_arm_get_soc_base_phys("jetsam_proc_cause_panic",0xfffffff009f24bf8,0x4,0 );
	_pe_arm_get_soc_base_phys("jetsam_proc_size_panic",0xfffffff009f24bfc,0x4,0 );
	_panic("Could not create memorystatus_thread %d @%s:%d");
	_panic("Could not allocate memorystatus_jetsam_snapshot @%s:%d");
	_panic("memorystatus_jetsam_thread: no victim! available pages:%llu @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("memorystatus_do_kill(): requested panic on jetsam of %s (cause: %d and footprint: %llu mb) @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Unknown relaunch flags on process! @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Unknown relaunch flags on process! @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("Could not create memorystatus_freeze_thread @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("Caught sending pid %d a critical warning for a fatal limit. @%s:%d");
	_panic("%s: invalid size (%ld) for cluster %p @%s:%d");
	_panic("%s: freeing jumbo cluster to an empty pool @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("mcache_init: thread_call_allocate failed @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("mcache_create: bad alignment %lu @%s:%d");
	_panic(0 ,);
	_panic(0xfffffff009f86120);
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic(?);
	_panic("mcache_bkt_destroy: %s cp %p corrupted list in bkt %p (nobjs %d actual %d)\n @%s:%d");
	_panic("mcache_alloc_ext: %s cp %p corrupted list (got %d actual %d)\n @%s:%d");
	_panic(ARG0);
	_panic(ARG0,);
	_panic();
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Got unexpected log entry type: %hhu @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic(ARG0,);
	_panic("can't allocate %ld bytes for wqstate buffer @%s:%d");
	_panic("select: thread structure corrupt! uu_wqstate_sz:%ld, wqstate_buf == NULL @%s:%d");
	_panic("fp_iocount overdecrement! @%s:%d");
	_panic(0 ,);
	_panic();
	_panic("ledger syscall logic error -- command type %d @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic("double free of pipe %p in pair %p @%s:%d");
	_panic(JUNSAFE to view);
	_panic(?);
	_panic("%s: corrupted pipe read/write pointer or size. @%s:%d");
	_panic("size greater than LONG_MAX @%s:%d");
	_panic("Pipe buffer overflow @%s:%d");
	_panic("Expected pipe buffer wraparound disappeared @%s:%d");
	_panic("Expected wraparound bad @%s:%d");
	_panic("%s: corrupted pipe read/write pointer or size. @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("%s: Invalid ulock opcode %d addr %p @%s:%d");
	_panic("tty kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d");
	_panic(?);
	_panic("invalid knote %p detach, filter: %d @%s:%d");
	_panic("%s(%p): invalid filter %d\n @%s:%d");
	_panic();
	_panic(?);
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(SP + 0x500);
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("ptsd kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d");
	_panic("invalid knote %p detach, filter: %d @%s:%d");
	_panic("ptmx kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d");
	_panic("invalid knote %p detach, filter: %d @%s:%d");
	_panic("Failed to set flags on ptmx cdevsw entry. @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("ptsd kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d");
	_panic("ptmx kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d");
	_panic(?);
	_panic(SP + 0x28);
	_panic(?);
	_panic("CODE SIGNING: CS Blob length overflow for blob at: %p @%s:%d");
	_panic("CODE SIGNING: CS Blob length overflow for addr: %p @%s:%d");
	_panic("CODE SIGNING: CS Blob length overflow for code directory blob at: %p @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("vnode_pager_setup: vnode_object_create() failed @%s:%d");
	_panic("ubc_info_init: memory_object_create_named returned %d @%s:%d");
	_panic(?);
	_panic("overflow detected @%s:%d");
	_panic("ubc_setsize: ubc_create_upl (error = %d) @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(0 );
	_panic("%s : VNODE_REF_FORCE failed @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(ARG0);
	_panic();
	_panic("overflow detected @%s:%d");
	_panic("validated CodeDirectory but unsupported type @%s:%d");
	_panic("CODE SIGNING: Validated CS Blob has no code directory @%s:%d");
	_panic("CODE SIGNING: UBC and PMAP_CS disagree with provisioning profile state: %p | %lu @%s:%d");
	_panic();
	_panic(ARG0,);
	_panic(ARG0);
	_panic();
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("unknown hash type ? @%s:%d");
	_panic("hash size too large @%s:%d");
	_panic("offset not aligned to cshash boundary @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: domain (%d,%s), proto %d has non-NULL pr_domain! @%s:%d");
	_panic("%s: domain (%d,%s), proto %d has no usrreqs! @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: domain (%d,%s) already exists for %s @%s:%d");
	_panic("%s: domain %p (%d,%s) is already associated with %p (%d,%s)\n @%s:%d");
	_panic("%s: domain (%d,%s) protocols need to added via net_add_proto\n @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: domain (%d,%s), proto %d has no usrreqs! @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("suspect DMA to freed address");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("MCHECK: m_type=%d m=%p");
	_panic("m_free: freeing an already freed mbuf @%s:%d");
	_panic("mbuf %p redzone violation with value 0x%x (instead of 0x%x, using cookie 0x%x)\n");
	_panic("MRANGE: address out of range 0x%p @%s:%d");
	_panic("%s: %s buffer %p in slab %p modified after free at offset 0: %p out of range [%p-%p)\n");
	_panic(0xfffffff009f87f10);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: %d waiters stuck for %u secs\n%s");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("Invalid attempt to modify guarded module-private area: mbuf %p, pkt_flags 0x%x\n");
	_panic("mbuf %p redzone violation with value 0x%x (instead of 0x%x, using cookie 0x%x)\n");
	_panic("m_free: freeing an already freed mbuf @%s:%d");
	_panic("mbuf %p redzone violation with value 0x%x (instead of 0x%x, using cookie 0x%x)\n");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("m_copym: invalid mbuf chain @%s:%d");
	_panic("m_copym: invalid offset %d or len %d @%s:%d");
	_panic("%s n %p copy overflow @%s:%d");
	_panic("m_copym: len != M_COPYALL @%s:%d");
	_panic("mbuf %p redzone violation with value 0x%x (instead of 0x%x, using cookie 0x%x)\n");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s n %p copy overflow @%s:%d");
	_panic("%s: invalid mbuf chain %p [off %d, len %d] @%s:%d");
	_panic("%s: invalid offset %d or len %d @%s:%d");
	_panic("%s: n == NULL @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("mbuf %p redzone violation with value 0x%x (instead of 0x%x, using cookie 0x%x)\n");
	_panic("Invalid attempt to access guarded module-private area: mbuf %p, pkt_flags 0x%x\n");
	_panic("m == NULL in m_pulldown() @%s:%d");
	_panic("%s: invalid mbuf chain %p [off %u, len %u] @%s:%d");
	_panic("%s: mbuf %p len (%d) < off+len (%d+%d) @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("%s: bad refcount=%d so=%p (%d, %d, %d) lrh=%s @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic(?);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic("soclose: NOFDREF @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s sp %p in so_comp but !SS_COMP @%s:%d");
	_panic("%s sp %p in so_incomp but !SS_INCOMP @%s:%d");
	_panic("soclose: so=%p refcount=0 @%s:%d");
	_panic("soclose: usecount is zero so=%p @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("soclose: retaincnt non null and so=%p usecount=%d\n @%s:%d");
	_panic("soaccept: !NOFDREF @%s:%d");
	_panic("%s: SB_DROP not set @%s:%d");
	_panic(0xfffffff009f80748);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("corrupt so_rcv: sb_mb %p sb_cc %d\n @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: after 2nd sblock so=%p ref=%d on socket @%s:%d");
	_panic("%s: post-control !sync so=%p m=%p nextrecord=%p\n @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("%s: about to create invalid socketbuf @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("corrupt so_rcv: sb_mb %p sb_cc %d\n @%s:%d");
	_panic("%p m_len zero @%s:%d");
	_panic("%p m_type zero @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("soopt_mcopyin @%s:%d");
	_panic("%s: null so_proto so=%p @%s:%d");
	_panic("%s improperly called @%s:%d");
	_panic(0xfffffff009f80748);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: sb %p so %p cc %d mbcnt %d mb %p mbtail %p lastrecord %p\n @%s:%d");
	_panic("%s: null so, sb=%p sb_flags=0x%x lr=%p @%s:%d");
	_panic("%s: sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d");
	_panic("%s: null so, sb=%p sb_flags=0x%x lr=%p @%s:%d");
	_panic("%s: sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d");
	_panic("%s: SB_LOCK not held for %p @%s:%d");
	_panic("%s: null so, sb=%p sb_flags=0x%x lr=%p @%s:%d");
	_panic("%s: sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d");
	_panic("%s: null so, sb=%p sb_flags=0x%x lr=%p @%s:%d");
	_panic("%s: sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d");
	_panic("%s: 2 sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d");
	_panic("sblastrecordchk from %s @%s:%d");
	_panic("sblastmbufchk from %s @%s:%d");
	_panic("sbappendstream: nexpkt %p || mb %p != lastrecord %p @%s:%d");
	_panic("sbconcat_mbufs @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("sbappendaddrorfree @%s:%d");
	_panic("sbappendcontrol @%s:%d");
	_panic("%s: nexpkt %p || mb %p != lastrecord %p @%s:%d");
	_panic("%s: sb %p so %p cc %d mbcnt %d mb %p mbtail %p lastrecord %p\n @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("accept: head=%p refcount=%d @%s:%d");
	_panic("accept: 2 head=%p refcount=%d @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("cp_size > buflen, somethingwrong with alignment! @%s:%d");
	_panic(JUNSAFE to view);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("uipc_send unknown socktype @%s:%d");
	_panic("uipc_send connected but no connection? @%s:%d");
	_panic(0 ,);
	_panic(SP + 0x128);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("unp_conn became NULL after sleep @%s:%d");
	_panic("unknown socket type %d @%s:%d");
	_panic();
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("unknown socket type %d in unp_connect2 @%s:%d");
	_panic("uipc_rcvd DGRAM? @%s:%d");
	_panic("uipc_rcvd unknown socktype @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(SP + 0x4d0);
	_panic(0 ,);
	_panic();
	_panic(SP + 0x4d0);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("unp_attach @%s:%d");
	_panic("peer is connected but has no socket? @%s:%d");
	_panic();
	_panic("unp_lock: so=%p NO PCB! lr=%p ref=0x%x @%s:%d");
	_panic("unp_lock: so=%p so_pcb=%p lr=%p ref=0x%x @%s:%d");
	_panic();
	_panic("unp_unlock: so=%p usecount=%x @%s:%d");
	_panic("unp_unlock: so=%p NO PCB usecount=%x @%s:%d");
	_panic("unp_getlock: so=%p NULL so_pcb @%s:%d");
	_panic("unp_getlock: so=%p usecount=%x @%s:%d");
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(SP + 0x106);
	_panic(0 ,);
	_panic(SP + 0x106);
	_panic(0 ,);
	_panic("success, but no blob! @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("negative usecount in pshm_close @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("pshm_cache_add() found %p @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic("%s: negative retain count (%d) for sock=%p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_release - sfe_refcount (%d) <= 0 @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("sflt_entry_retain - sfe_refcount <= 0 @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(ARG0,);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x508]);
	_panic();
	_panic(0 );
	_panic(LocalFrame[-0x6c8]);
	_panic(SP + 0x128);
	_panic(SP + 0x260);
	_panic(SP + 0x48);
	_panic(LocalFrame[-0x420]);
	_panic();
	_panic(0x2a8,);
	_panic();
	_panic(SP + 0x58);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic("shouldn't be applying exception notification to process! @%s:%d");
	_panic("lck_mtx_assert(): mutex (%p) owned @%s:%d");
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(0x18,);
	_panic(0x28);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("%s: Overflow in required buffer size estimate @%s:%d");
	_panic("os_reason failed to allocate @%s:%d");
	_panic("os_reason failed to get data address @%s:%d");
	_panic("os_reason failed to copy description data @%s:%d");
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s: Can't create Tracker GC thread");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 );
	_panic(ARG0,);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic(SP + 0x120800090);
	_panic(?);
	_panic(LocalFrame[-0x1d8]);
	_panic(SP + 0x58);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic(JUNSAFE to view);
	_panic(ARG1,);
	_panic();
	_panic("vm_map_create_upl failed with %d @%s:%d");
	_panic(0 ,);
	_panic("%s: Invalid URL scheme for %s @%s:%d");
	_panic(LocalFrame[-0xb8]);
	_panic(LocalFrame[-0xc0]);
	_panic("not supported @%s:%d");
	_panic("%s: di_root_image failed: %d @%s:%d");
	_panic("%s: vfs_switch_root failed: %d @%s:%d");
	_panic(LocalFrame[-0x150]);
	_panic(0xfffffff009f10b28);
	_panic("%s: cannot find root vnode @%s:%d");
	_panic("invalid imageboot type: %d @%s:%d");
	_panic("%s: di_root_image failed: %d @%s:%d");
	_panic("vfs_mountroot() failed. @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x330]);
	_panic(0 ,);
	_panic(LocalFrame[-0x340]);
	_panic(SP + 0x3f0);
	_panic("negative file size @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x330]);
	_panic(0xfffffff009f10b28);
	_panic(0 ,);
	_panic("%s: no valid path to image. @%s:%d");
	_panic(SP + 0x2b8);
	_panic("imageboot_setup: rootvnode is NULL. @%s:%d");
	_panic("Failed to mount root image (err=%d, auth=%d, ramdisk=%d) @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s specified without %s or %s? @%s:%d");
	_panic("Root image %s does not match the manifest @%s:%d");
	_panic("%s: cannot find root vnode @%s:%d");
	_panic("Bogus imageboot path URL - missing path @%s:%d");
	_panic("imageboot path allocation failed - cannot allocate %d bytes @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("kpc_init not called @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(0xfffffff009f89018);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(0 ,);
	_panic(LocalFrame[-0x58]);
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic(?);
	_panic(SP + 0x8f8);
	_panic(SP + 0x900);
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(LocalFrame[-0x558]);
	_panic(SP + 0x570);
	_panic(SP + 0x568);
	_panic();
	_panic(0 ,);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(JUNSAFE to view);
	_panic("bindfs_pagein: ubc_upl_map() failed with (%d) @%s:%d");
	_panic("bindfs_pagein: ubc_upl_unmap() failed with (%d) @%s:%d");
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf0);
	_panic();
	_panic(SP + 0xf0);
	_panic();
	_panic(SP + 0x88);
	_panic(0 ,);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf8);
	_panic(0xf8);
	_panic(SP + 0xf0);
	_panic("%s: bad credential %p @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: skmem_cache create failed (%s) @%s:%d");
	_panic(?);
	_panic(0xfffffff009f89130);
	_panic();
	_panic("Request to overwrite valid netns token @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("_netns_reserve_common: invalid owner 0x%x @%s:%d");
	_panic(0xfffffff009f89130);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic();
	_panic(?,);
	_panic(0xfffffff009f89130,);
	_panic(0xfffffff009f89130);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic("leaked skoid sub-node detected %p %s @%s:%d");
	_panic(0 ,);
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(SP + 0x80);
	_panic();
	_panic(?);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("h %zu add_called %zu tmp_h %zu @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic(?);
	_panic("failed to allocate global sysctls region @%s:%d");
	_panic("failed to allocate global sysctls object (%u bytes) @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: invalid advisory type %d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: bad alignment %d @%s:%d");
	_panic(0xfffffff009f895e0);
	_panic("%s: thread_call_allocate failed @%s:%d");
	_panic(?);
	_panic("%s: (bufsize %lu, chunksize %lu) > objsize %lu @%s:%d");
	_panic(0xfffffff009f89408);
	_panic(0xfffffff009f895e0);
	_panic();
	_panic("%s: attempt to free invalid or already-freed obj %p on skm %p @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(""%s": boff_total counter overflows\n");
	_panic(""%s": failed to allocate slab (sleeping mode) after %llu msec, %u retries\n\n%s");
	_panic();
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: '%s' (%p) not empty (%llu unfreed) @%s:%d");
	_panic("%s: %s failed to get object info for %p @%s:%d");
	_panic();
	_panic(0xfffffff009f895e0);
	_panic("%s: bad credential %p @%s:%d");
	_panic("%s: thread_call_allocate failed @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("%s: '%s' (%p) not empty (%u unfreed) @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic("Fail to reclaim md %p, err %d @%s:%d");
	_panic("Fail to set md %p, err %d @%s:%d");
	_panic(""%s": skr 0x%p sg 0x%p (idx %u) unable to satisfy mandatory allocation\n");
	_panic("Fail to wire md %p, err %d @%s:%d");
	_panic("Bad tailq head %p first->prev != head @%u @%s:%d");
	_panic(""%s": failed to allocate segment (sleeping mode) after %u retries\n\n%s");
	_panic(""%s": skr 0x%p unable to satisfy mandatory allocation\n");
	_panic("%s: '%s' (%p) idx %u (out of %u) is already allocated @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("Fail to discard md %p, err %d @%s:%d");
	_panic("Fail to unwire md %p, err %d @%s:%d");
	_panic("%s: bad credential %p @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic(0 ,);
	_panic();
	_panic("%s: couldn't create destroyer thread");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("internalized packet 0x%llx in htbl @%s:%d");
	_panic(?);
	_panic("%s: couldn't create detacher thread");
	_panic(0 ,);
	_panic(?);
	_panic();
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(ARG0);
	_panic(SP + 0x1080);
	_panic(0x370);
	_panic(0 ,);
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic();
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("%s: can't create thread");
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic(SP + 0x5b8);
	_panic(SP + 0x540);
	_panic(ARG0);
	_panic(?);
	_panic("MCHECK: m_type=%d m=%p @%s:%d");
	_panic();
	_panic(SP + 0x18);
	_panic(ARG0,);
	_panic(0x370);
	_panic(0 ,);
	_panic("%s: QoS Marking mode invalid! @%s:%d");
	_panic("%s: skmem_cache create failed (%s) @%s:%d");
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 );
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("%s: skmem_cache create failed (%s) @%s:%d");
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic();
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic(?);
	_panic("%s: bad credential %p @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(LocalFrame[-0x108]);
	_panic("Failed to activate mbuf ring cluster 0x%llx (%d) @%s:%d");
	_panic(SP + 0x630);
	_panic("%s: ifp=%p couldn't get a poll  thread; err=%d");
	_panic(0x198,);
	_panic(?);
	_panic("%s: can't create thread");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic("%s: bad credential %p @%s:%d");
	_panic();
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic();
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("filter packet has no mbuf or packet attached: pkt_pflags 0x%llx\n @%s:%d");
	_panic(ARG0,);
	_panic(?);
	_panic(0x198);
	_panic(0x350);
	_panic("%s: off (%d) >= len (%d) @%s:%d");
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic();
	_panic(0 ,);
	_panic(?);
	_panic("%s: invalid mbuf chain %p [off %d, len %d] @%s:%d");
	_panic("%s: invalid offset %d or len %d @%s:%d");
	_panic("%s: mbuf too large %p [off %d, len %d] @%s:%d");
	_panic("%s: invalid mbuf chain %p [off %d, len %d] @%s:%d");
	_panic("%s: bad packet, 0x%llx [off %d, len %d] @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(?);
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("unix_syscall: unknown return type @%s:%d");
	_panic("size mismatch @%s:%d");
	_panic(0xfffffff009f894d0,);
	_panic(0xfffffff009f894d0);
	_panic(?);
	_panic(0xfffffff009f894d0,);
	_panic(?);
	_panic("Bad tailq elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad tailq elm %p next->prev != elm @%u @%s:%d");
	_panic("current thread doesn't own the lock (%p) @%s:%d");
	_panic("OSMetaClass::serialize(): Obsoleted @%s:%d");
	_panic(?,);
	_panic();
	_panic("OSMetaClass: Kext %s class %s is a duplicate;kext %s already has a class by that name. @%s:%d");
	_panic(">maxDepth @%s:%d");
	_panic("%s::_RESERVED%s%d called. @%s:%d");
	_panic("OSMetaClass::getClassDictionary() is obsoleted. @%s:%d");
	_panic("A kext releasing a(n) %s has corrupted the registry. @%s:%d");
	_panic("OSObject::refcount: Attempting to retain a freed object @%s:%d");
	_panic(?,);
	_panic("Trying to change a collection in the registry @%s:%d");
	_panic("unexpected storage type %u @%s:%d");
	_panic(?,);
	_panic("unexpected storage type %u @%s:%d");
	_panic("unexpected storage type %u @%s:%d",);
	_panic("overflow detected @%s:%d");
	_panic();
	_panic(?,);
	_panic("overflow detected @%s:%d");
	_panic("Invalid KC Kind @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("Attempt to set linked executable on kext that already has one (%s).\n @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic();
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic();
	_panic("Kext %s cannot be reset, mutable segment %llx->%llx could not be restored. @%s:%d");
	_panic("Invalid KC Kind @%s:%d");
	_panic("Kext %s cannot be reset, could not find saved mutable segment for %llx->%llx. @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Attempt to set an executable on a kext that already has one (%s). @%s:%d");
	_panic("Attempt to set info dictionary on a kext that already has one (%s). @%s:%d");
	_panic("Invalid KC Kind @%s:%d");
	_panic();
	_panic("Attempt to free loaded kext %s. @%s:%d");
	_panic(?,);
	_pe_arm_get_soc_base_phys("-nokcmismatchpanic",SP + 0x18,0x10,0 );
	_panic("overflow detected @%s:%d");
	_panic("FileSet booted with no Linkedit segment @%s:%d");
	_panic("Missing OSKextExcludeList dictionary @%s:%d");
	_panic("kcUUID length is %d, expected %lu @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("System KC UUID %s linked against %s, but %s is loaded @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(?);
	_panic(?,);
	_panic("%s @%s:%d");
	_panic("OSRuntime: C++ runtime failed to initialize. @%s:%d");
	_panic("%s: null structor @%s:%d");
	_panic("Size of array created by new[] has overflowed @%s:%d");
	_panic(?,);
	_panic(?);
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("removeSymbol %s count %d  @%s:%d");
	_panic(?,);
	_panic(?);
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_shared(): lock %p held in mode: %d @%s:%d");
	_panic("lck_rw_unlock_exclusive(): lock %p held in mode: %d @%s:%d");
	_panic(JUNSAFE to view,);
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic("Unknown CoreAnalytics event type: %s. @%s:%d");
	_panic("CoreAnalyticsHub is out of sync with xnu. CoreAnalyticsHub table version: %d. xnu table version: %d @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("unhandled return value @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Unsupported log value type @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("%s: inconsistent size for SHA256 context @%s:%d");
	_panic("%s: inconsistent size for SHA384 context @%s:%d");
	_panic("%s: inconsistent size for SHA512 context @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("sha1_hardware_hook: Called twice.. Should never happen @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: inconsistent size for DES-ECB context @%s:%d");
	_panic("%s: inconsistent size for 3DES-ECB context @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: inconsistent size for AES decrypt context @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("%s: inconsistent size for AES decrypt context @%s:%d");
	_panic("%s: inconsistent size for AES encrypt context @%s:%d");
	_panic("%s: inconsistent size for AES decrypt context @%s:%d");
	_panic("%s: inconsistent size for AES-XTS context @%s:%d");
	_panic("%s: corecrypto not registered! @%s:%d");
	_panic("%s: xts mode not registered? enc=%p, dec=%p @%s:%d");
	_panic("xts encrypt not a multiple of block size @%s:%d");
	_panic("xts decrypt not a multiple of block size @%s:%d");
	_panic("coretrust interface already set @%s:%d");
	_panic("apple_encrypted_archive interface already set @%s:%d");
	_panic("apple_encrypted_archive interface registration callback is already set @%s:%d");
	_panic("img4 interface already set @%s:%d");
	_panic("AppleMobileFileIntegrity interface already set @%s:%d");
	_panic("signature mismatch for %lu bytes at %p, calculated %lx vs %lx @%s:%d");
	_panic("ptrauth_utils_auth_blob_generic: ptr must not be NULL @%s:%d");
	_panic(?,);
	_panic("failed to allocate iokit pageable map @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(?);
	_panic("IOPageableMapForAddress: null @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("IOPageableMapForAddress: null @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic(?,);
	_panic("Failed to allocate IOKit root nub @%s:%d");
	_panic("Failed to initialize IOKit root nub @%s:%d");
	_panic("Failed to start IOService matching @%s:%d");
	_panic();
	_panic("overflow detected @%s:%d");
	_panic("IODTSetResolving - gIODTResolvers alloc overflows @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("IODTSetResolving - could not allocate new resolvers @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("IODTResolveAddressCell: Invalid device tree (%u) @%s:%d");
	_panic("IODTResolveAddressCell: Invalid device tree (%u,%u) @%s:%d");
	_panic("There is no mixed comparison function yet... @%s:%d");
	_panic("IODTResolveAddressCell: Invalid device tree (%u, %u) @%s:%d");
	_panic("DefaultCompare only knows how to handle 1 or 2 cells. @%s:%d");
	_panic("__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?,);
	_panic("%s: attached at free() @%s:%d");
	_panic(?,);
	_panic("__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Class %s passed the quiesce/active action to IOService @%s:%d");
	_panic("I/O Kit: Unrecoverable deadlock. @%s:%d");
	_panic(0 ,);
	_panic(?,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic(?,);
	_panic("%s @%s:%d");
	_panic("waitForState @%s:%d");
	_panic("deliverNotification @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("addInterruptStatistics called for an excessively large index (%d) @%s:%d");
	_panic("addInterruptStatistics call for index %d would have clobbered existing statistics @%s:%d");
	_panic("removeInterruptStatistics called for index %d, which was never registered @%s:%d");
	_panic("removeInterruptStatistics called for empty index %d @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("IOService::pmDriverCallout bad machine state %x @%s:%d");
	_pe_arm_get_soc_base_phys("setpowerstate_panic",SP + 0x38,0x4,0 );
	_panic("%s::setPowerState(%p, %lu -> %lu) timed out after %d ms @%s:%d");
	_panic("PM priority notification timeout @%s:%d");
	_panic("Sleep/Wake hang detected @%s:%d");
	_panic("PMWorkQueueInvoke: unknown machine state %x @%s:%d");
	_panic("%s: bad call reason %x @%s:%d");
	_panic("executePMRequest: unknown request type %x @%s:%d");
	_panic("PMReplyQueue: unknown reply type %x @%s:%d");
	_panic(0 ,);
	_panic("bufSize is smaller than the required size\n @%s:%d");
	_panic(?,);
	_panic(" @%s:%d");
	_panic(?,);
	_panic("enableCPUCore is unimplemented @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("IOWorkLoop %p lock time %qd us @%s:%d");
	_panic(?,);
	_panic("invalid commandSleep while not holding the gate @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("setTimeoutFunc already %p, %p @%s:%d");
	_panic(?,);
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic(?);
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic("no remap page found @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("dmaCommandOperation @%s:%d");
	_panic("dmaCommandOperation 0x%x @%s:%d");
	_panic(?,);
	_panic("!addr @%s:%d");
	_panic(?,);
	_panic("doUnmap @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("fMapped %p %s %qx @%s:%d");
	_panic("_dmaReferences underflow @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic("doUnmap @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("mach_make_memory_entry_64 actualSize @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("phys is kIODefaultCache @%s:%d");
	_panic("getKernelReserved @%s:%d");
	_panic("entryOffset @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("overrun @%s:%d");
	_panic("entryOffset @%s:%d");
	_panic("map enter err %x @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("complete() while dma active @%s:%d");
	_panic("memRefEntry @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("_dmaReferences underflow @%s:%d");
	_panic("IOGMD: not wired for the IODMACommand @%s:%d");
	_panic("!pageList phys_addr @%s:%d");
	_panic(0 ,);
	_panic("short external upl @%s:%d");
	_panic("bad dir for upl 0x%x @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic("%s @%s:%d");
	_panic(?,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?,);
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?,);
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic("Class %s passed the quiesce/active action to IOPlatformExpert @%s:%d");
	_panic(?,);
	_panic("Unable to find driver for this platform: "%s". @%s:%d");
	_panic(?,);
	_panic();
	_panic(?,);
	_panic("%s: invalid target CPU %p @%s:%d");
	_panic("Spurious wakeup of cpu %u @%s:%d");
	_panic(?,);
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("header adler %#08X != calculated_adler %#08X\n @%s:%d");
	_panic(?,);
	_panic("dmaIndex out of range @%s:%d");
	_panic();
	_panic(?,);
	_panic("handleInterrupt shouldn't be invoked directly @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic(?,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("setAsyncReference not valid for 64b @%s:%d");
	_panic(?,);
	_panic("%s was called out of locked context! @%s:%d");
	_panic("%s - can't free %d channels of dimension %d @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s was called out of locked context! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s doesn't support shrinking @%s:%d");
	_panic("IOReporter::_swap* already in use @%s:%d");
	_panic(0 ,);
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic(?,);
	_panic("%s was called out of locked context! @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s was called out of locked context! @%s:%d");
	_panic("IOStateReporter::handleAddChannelSwap _lastUpdateTimes unset despite non-NULL _currentStates @%s:%d");
	_panic("IOStateReporter::_swap* already in use @%s:%d");
	_panic("%s was called out of config locked context! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic(?,);
	_panic("%s was called out of locked context! @%s:%d");
	_panic("overrideChannelState() cannot be used after setChannelState()! @%s:%d");
	_panic("incrementChannelState() cannot be used after setChannelState()! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic(?,);
	_panic("%s - %s <= 0! @%s:%d");
	_panic("%s - %s > INT_MAX / sizeof(%s)! @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic(?);
	_panic(0 ,);
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("__copyin_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu) @%s:%d");
	_panic(0 ,);
	_panic(?);
	_panic(0 ,);
	_panic(?,);
	_panic("ramdisk params @%s:%d");
	_panic("IOFindBSDRoot: specified root memory device, %s, has not been configured @%s:%d");
	_panic("rd=uuid but no boot-uuid=<value> specified @%s:%d");
	_panic(?,);
	_panic("Invalid work token (%llu): index out of bounds. @%s:%d");
	_panic("driverState has already been initialized @%s:%d");
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic();
	_panic(0 ,);
	_panic(?,);
	_panic("could not create IOPerfControlClient @%s:%d");
	_panic("Invalid work token (%llu): index out of bounds. @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("overflow detected @%s:%d");
	_panic(?,);
	_panic("IOUAT ERROR: failed to initialize PPL state object @%s:%d");
	_panic("fCodeRangeAllocator @%s:%d");
	_panic("IOUAT ERROR: Failed to retrieve 'gfx-shared-region-base' device tree property @%s:%d");
	_panic("IOUAT ERROR: Failed to retrieve 'ttbat-phys-addr-base' device tree property @%s:%d");
	_panic("IOUAT ERROR: Failed to retrieve 'gfx-handoff-base' device tree property @%s:%d");
	_panic("IOUAT ERROR: Sizeof 'gfx-shared-region-base' entry in device tree is not the same as uint64_t @%s:%d");
	_panic("IOUAT ERROR: Sizeof 'ttbat-phys-addr-base' entry in device tree is not the same as uint32_t @%s:%d");
	_panic("IOUAT ERROR: Sizeof 'gfx-handoff-base' entry in device tree is not the same as uint64_t @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate TTBR1 descriptor @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate TTBR1 map @%s:%d");
	_panic("IOUAT ERROR: Failed to prepare TTBR1 descriptor @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate TTBAT descriptor @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate TTBAT map @%s:%d");
	_panic("IOUAT ERROR: Failed to prepare TTBAT descriptor @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate handoff region descriptor @%s:%d");
	_panic("IOUAT ERROR: Failed to allocate handoff region map @%s:%d");
	_panic("IOUAT ERROR: Failed to prepare handoff region descriptor @%s:%d");
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_GET_PT_ENTRY @%s:%d");
	_panic("ttbrIdx < 2 @%s:%d");
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_FAULT_EXPECTED @%s:%d");
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_TOTAL_PT_MEM @%s:%d");
	_panic("IOUAT: failed to free all page tables on task death for ID %u @%s:%d");
	_panic(0 ,);
	_panic(?,);
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_SET_CONTEXT_ID @%s:%d");
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_REMOVE_CONTEXT_ID @%s:%d");
	_panic("backingDescriptor != nullptr @%s:%d");
	_panic("isAlignedToPOT(size, (uint32_t)PAGE_SIZE)failed: %llu/%u @%s:%d");
	_panic("isAlignedToPOT(virtAddr, (uint32_t)PAGE_SIZE)failed: 0x%llX/%u @%s:%d");
	_panic("ppl_segs != nullptr @%s:%d");
	_panic("IOUAT: PPL map operation failed virt: %010llX length: 0x%llX options: 0x%llX contextID: %u @%s:%d");
	_panic("fUnmapListCount < IOUAT_UNMAP_LIST_MAX_SIZE @%s:%d");
	_panic("IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_PREPARE_UNMAP @%s:%d");
	_panic(?,);
	_panic(0 ,);
	_panic(?,);
	_panic("RootDomain: not inside PM gate @%s:%d");
	_panic(?,);
	_panic("bad aggressives request type %x @%s:%d");
	_panic(?,);
	_pe_arm_get_soc_base_phys("haltmspanic",0xfffffff009f2c444,0x4,0 );
	_pe_arm_get_soc_base_phys("swd_panic",0xfffffff009d6a140,0x4,0 );
	_panic("RootDomain: not inside PM gate @%s:%d");
	_panic(?,);
	_panic("%s @%s:%d");
	_panic(?,);
	_panic("RootDomain: not inside PM gate @%s:%d");
	_panic("illegal AOT entry from %s @%s:%d");
	_panic("RootDomain: not inside PM gate @%s:%d");
	_panic("Sleep/Wake hang detected @%s:%d");
	_panic("DeviceTree overflow: %p, size %#zx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic("Device tree pointer outside of device tree region: pointer %p, DTEnd %lx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic("Device tree pointer outside of device tree region: pointer %p, DTEnd %lx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic("Device tree pointer outside of device tree region: pointer %p, DTEnd %lx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic();
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic("Device tree pointer outside of device tree region: pointer %p, DTEnd %lx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
	_panic("Device tree pointer outside of device tree region: pointer %p, DTEnd %lx @%s:%d");
	_panic("Device tree property overflow: prop %p, length 0x%x @%s:%d");
_panic_init:
	_panic("Invalid KC Kind @%s:%d");
	_panic(0xfffffff007874cf0);
	_panic(0xfffffff007874cf8);
	_panic(0xfffffff007874d00);
	_panic(0xfffffff007874d08);
	_panic("Invalid KC Kind @%s:%d");
	_panic("DeviceTree overflow: %p, size %#zx @%s:%d");
	_panic_init(?);
	_panic("DeviceTree overflow: %p, size %#zx @%s:%d");
_check_for_panic_log:
	__DTGetProperty(LocalFrame[-0x30],"embedded-panic-log-size",SP + 0x8,SP + 0x1c);
	_printf("iBoot didn't extract panic log from previous session crash, this is bad\n");
	_panic("unaligned acccess to socd trace ram @%s:%d");
	_panic("Malformed dockchannel-uart property @%s:%d");
	_panic();
	_panic("Bad list head %p first->prev != head @%u @%s:%d");
	_panic("_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d");
	_panic();
	_panic(?);
	_panic("Bad link elm %p prev->next != elm @%u @%s:%d");
	_panic("Bad link elm %p next->prev != elm @%u @%s:%d");
	_panic("policy's name is not set @%s:%d");
	_panic("policy's full name is not set @%s:%d");
	_panic("policy's managed label namespaces exceeds maximum @%s:%d");
	_panic("policy's OPs field is NULL @%s:%d");
	_panic(LocalFrame[-0x20]);
	_panic(0 ,);
	_panic(SP + 0x208);
	_panic(SP + 0xd0);
	_panic(0 ,);
	_panic(LocalFrame[-0x178]);
	_panic(0x18);
	_panic(LocalFrame[-0x1a8]);
	_panic(0 ,);
	_panic(?);
	_panic("Free of NULL MAC label @%s:%d");
	_panic("Free of uninitialized label @%s:%d");
	_panic(0 ,);
	_panic("Free of uninitialized label @%s:%d");
	_panic(LocalFrame[-0x20]);
	_panic(0 ,);
	_panic("mac_vnode_check_signature: MAC hook returned no error, but status is claimed to be fatal? path: '%s', fatal_failure_desc_len: %ld, fatal_failure_desc:\n%s\n @%s:%d");
	_panic("%s: Overflow in required buffer size estimate @%s:%d");
	_panic();
	_panic(0 );
	_panic("file_check_mmap increased max protections @%s:%d");
	_panic("Invalid ubsan interrupt buffer index %d > %d @%s:%d");
	_panic("Invalid ubsan interrupt buffer index %d >= %d @%s:%d");
	_panic("__memcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d");
	_panic("UBSAN trap for %s detected\n @%s:%d");
	_panic_with_thread_kernel_state(?);
	_panic(0xfffffff008343b38);
	_panic_trap_to_debugger(?);
	_panic(?);
	_panic_with_thread_kernel_state(0xfffffff0083499c8,?);
	_panic_with_thread_kernel_state(0xfffffff008349a18);
	_panic("Kernel stack memory corruption detected @%s:%d");
	_panic("Voucher importance manager released @%s:%d");
	_panic("ipc_importance_init @%s:%d");
	_panic("ipc_init: kmem_suballoc of ipc_kernel_map failed @%s:%d");
	_panic("ipc_init: kmem_suballoc of ipc_kernel_copy_map failed @%s:%d");
	_panic("ipc object %p is neither a port or a port-set @%s:%d");
	_panic("Using inactive port %p @%s:%d");
	_panic("found receive right in space %p for port %p owned by space %p @%s:%d");
	_pe_arm_get_soc_base_phys("nested_panic_max",0xfffffff009d4c160,0x4,0 );
	_panic("trying to register kobject(%d) twice @%s:%d");
	_panic("Cant receive notifications when upgradable @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("kalloc_large_data_map: kmem_suballoc failed %d @%s:%d");
	_panic("kalloc_type_view_copy: Insufficient space in scratch buffer @%s:%d");
	_panic("kalloc_type_view_init: Couldn't create scratch space @%s:%d");
	_panic("kalloc_type_view_parse: couldn't find kext @ offset:%lx @%s:%d");
	_panic("kalloc_type_view_parse: No support for non-split seg KCs @%s:%d");
	_panic("kalloc_heap_startup_init: invalid KHEAP_ID: %d @%s:%d");
	_panic("kalloc_data_require failed: address %p not in zone native map @%s:%d");
	_panic("kalloc_data_require failed: address %p in [%s%s], size too large %zd > %zd @%s:%d");
	_panic("kalloc_data_require failed: address %p in [%s%s] @%s:%d");
	_panic("kalloc_non_data_require failed: address %p not in zone native map @%s:%d");
	_panic("kalloc_non_data_require failed: address %p in [%s%s] @%s:%d");
	_panic("kalloc_non_data_require failed: address %p in [%s%s], size too large %zd > %zd @%s:%d");
	_panic("kfree: addr %p trying to free with nonsensical size %zd @%s:%d");
	_panic("kfree: addr %p, size %zd not found in any zone @%s:%d");
	_panic("kfree: addr %p, size %zd found in zone '%s%s' with elem_size %zd @%s:%d");
	_panic("kfree: addr %p found in kalloc type zone '%s'but being freed to %s heap @%s:%d");
	_panic("kfree: addr %p, size %zd found in regular zone '%s%s' @%s:%d");
	_panic("kfree: addr %p, size %zd found in heap %s* instead of %s* @%s:%d");
	_panic("kfree: addr %p has size %zd, not in specified bounds [%zd - %zd] @%s:%d");
	_panic("krealloc: addr %p trying to free with nonsensical size %zd @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("Attempt to take no-preempt lock %p in preemptible context @%s:%d");
	_panic("Gate used is invalid. gate %p data %lx turnstile %p refs %d flags %x  @%s:%d");
	_panic("Gate used was destroyed. gate %p data %lx turnstile %p refs %d flags %x @%s:%d");
	_panic("Trying to destroy a gate that was allocated by gate_alloc_init(). gate_free() should be used instead, gate %p thread %p @%s:%d");
	_panic("Trying to destroy a gate owned by %p. Gate %p @%s:%d");
	_panic("Trying to destroy a gate with waiters. Gate %p data %lx turnstile %p @%s:%d");
	_panic("Trying to free a gate that was not allocated by gate_alloc_init(), gate %p thread %p @%s:%d");
	_panic("Trying to close a gate already closed gate %p holder %p current_thread %p @%s:%d");
	_panic("Trying to open a gate %p owned by %p from current_thread %p @%s:%d");
	_panic("Trying to handoff a gate %p owned by %p from current_thread %p @%s:%d");
	_panic("Trying to wait on a not closed gate %p from current_thread %p @%s:%d");
	_panic("Trying to steal a not closed gate %p from current_thread %p @%s:%d");
	_panic("Too many refs taken on gate. gate %p data %lx turnstile %p refs %d flags %x @%s:%d");
	_panic("Ticket spinlock[%p] timeout after %llu ticks; cticket: 0x%x, nticket: 0x%x, waiting for 0x%x, start time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("Ticket spinlock[%p] timeout after %llu ticks; cticket: 0x%x, nticket: 0x%x, waiting for 0x%x, current owner: %p (on CPU %d), start time: %llu, now: %llu, timeout: %llu @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("Invalid SFI class 0x%x @%s:%d");
	_panic("Duplicate SFI registration for class 0x%x @%s:%d");
	_panic("Section %s,%s missing @%s:%d");
	_panic("Section %s,%s has invalid size @%s:%d");
	_panic("unexpected tunable size %u in DT entry %s/%s/%s @%s:%d");
	_panic("Invalid queue element linkage for %p: next %p next->prev %p prev %p prev->next %p @%s:%d");
	_panic("Invalid queue element pointers for %p: next %p prev %p @%s:%d");
	_panic("thread_call_initialize @%s:%d");
	_panic("Invalid waitq-set: %p @%s:%d");
	_panic("Invalid waitq: %p @%s:%d");
	_panic("Invalid waitq type: %p:%d @%s:%d");
	_panic("Invalid waitq: %p @%s:%d");
	_panic("zone_cram_foreign: foreign memory [%p] being crammed is outside of expected range @%s:%d");
	_panic("zone_cram_foreign: foreign memory [%p] being crammed in zone '%s%s' not expecting it @%s:%d");
	_panic("zone_cram_foreign: foreign memory [%p] being crammed has invalid size %zx @%s:%d");
	_panic("zone_cram_foreign: foreign memory [%p] being crammed after zalloc is initialized @%s:%d");
	_panic("ZONE_FOREIGN_META_INLINE_COUNT has become too small: %d > %d @%s:%d");
	_panic("zone_create: per-cpu zone has too much fragmentation @%s:%d");
	_panic("vm_map_enter(0x%zx) failed: %d @%s:%d");
	_panic("kmem_suballoc(kernel_map[%d] %p:%p) failed: %d @%s:%d");
	_panic("%s: Use KALLOC_TYPE_DEFINE for zone view %s insteadof ZONE_VIEW_DEFINE as it is from default kalloc heap @%s:%d");
	_panic("zone %p isn't in the zone_array @%s:%d");
	_panic("metadata list corruption through element %p detected @%s:%d");
	_panic("metadata list corruption through element %p detected in zone %s%s @%s:%d");
	_panic("foreign metadata index %d enqueued in native head %p @%s:%d");
	_panic("foreign metadata index %d enqueued in native head %p from zone %s%s @%s:%d");
	_panic("%p expected in zone %s%s[%d], but metadata has invalid zidx: %d @%s:%d");
	_panic("accounting mismatch (%s) for zone %s%s, meta %p @%s:%d");
	_panic("accounting mismatch (%s) for zone %s%s @%s:%d");
	_panic("zone bits allocator freelist is corrupt (%p <-> %p) @%s:%d");
	_panic("zone bits allocator head[%d:%p] is corrupt @%s:%d");
	_panic("zone_create: creating zone %s: flag %s and %s are incompatible @%s:%d");
	_panic("[%s%s]: element modified after free (off:%d, val:0x%016lx, sz:%d, ptr:%p)%s");
	_panic("addr %p being freed to zone %s%s%s, isn't from zone map @%s:%d");
	_panic("metadata %p corresponding to addr %p being freed to zone %s%s%s, has chunk len greater than max @%s:%d");
	_panic("eidx %d for addr %p being freed to zone %s%s, is larger than number fo element in chunk (%d) @%s:%d");
	_panic("addr %p being freed to zone %s%s%s, isn't aligned to zone element size @%s:%d");
	_panic("%s: double free of %p to zone %s%s @%s:%d");
	_panic("zone element pointer validation failed (addr: %p, zone %s%s) @%s:%d");
	_panic("zalloc(Z_NOFAIL) can't be satisfied for zone %s%s (potential leak) @%s:%d");
	_panic("zone_require failed: address not in a zone (addr: %p) @%s:%d");
	_panic("zone_require failed: invalid zone index %d (addr: %p, expected: %s%s) @%s:%d");
	_panic("zone_require failed: address in unexpected zone id %d (%s%s) (addr: %p, expected: %s%s) @%s:%d");
	_panic("zone_require_ro failed: address not in a ro zone (addr: %p) @%s:%d");
	_panic("zone_require_ro failed: invalid zone index %d (addr: %p, expected: %s%s) @%s:%d");
	_panic("zone_require_ro failed: address crosses a page (addr: %p) @%s:%d");
	_panic("zone_require_ro failed: address in unexpected zone id %d (%s%s) (addr: %p, expected: %s%s) @%s:%d");
	_panic("zone metadata corruption: %s (meta %p, zone %s%s) @%s:%d");
	_panic("socd buffer size is too small @%s:%d");
	_panic("cannot kernel_memory_allocate %u pages @%s:%d");
	_panic("kmem_init(0x%llx,0x%llx): vm_map_enter(0x%llx,0x%llx) error 0x%x @%s:%d");
	_panic("pointer %p can't be packed: maximum encodable pointer is %p @%s:%d");
	_panic("pointer %p can't be packed: low %d bits aren't 0 @%s:%d");
	_panic("pointer %p can't be packed: below base %p @%s:%d");
	_panic("vm_map_steal_memory: overflow in amount of memory requested @%s:%d");
	_panic("vm_paging_map_init: kernel_map full @%s:%d");
	_panic("overflow detected @%s:%d");
	_check_for_panic_log(?);
	_panic("The cpumask=N boot arg cannot be used together with cpus=N, and the boot CPU must be enabled @%s:%d");
	_panic("%s: Unable to find 'chosen' DT node @%s:%d");
	_panic("%s: Unable to find 'dram-base' entry in the 'chosen' DT node @%s:%d");
	_panic("%s: Unable to find 'dram-size' entry in the 'chosen' DT node @%s:%d");
	_panic("%s: invalid bit index (%u) @%s:%d");
	_panic("Preemption count overflow @%s:%d");
	_panic("Preemption count underflow @%s:%d");
_panic_with_thread_kernel_state:
	_panic("%s at pc 0x%016llx, lr 0x%016llx (saved state: %p%s)\n\t  x0:  0x%016llx x1:  0x%016llx  x2:  0x%016llx  x3:  0x%016llx\n\t  x4:  0x%016llx x5:  0x%016llx  x6:  0x%016llx  x7:  0x%016llx\n\t  x8:  0x%016llx x9:  0x%016llx  x10: 0x%016llx  x11: 0x%016llx\n\t  x12: 0x%016llx x13: 0x%016llx  x14: 0x%016llx  x15: 0x%016llx\n\t  x16: 0x%016llx x17: 0x%016llx  x18: 0x%016llx  x19: 0x%016llx\n\t  x20: 0x%016llx x21: 0x%016llx  x22: 0x%016llx  x23: 0x%016llx\n\t  x24: 0x%016llx x25: 0x%016llx  x26: 0x%016llx  x27: 0x%016llx\n\t  x28: 0x%016llx fp:  0x%016llx  lr:  0x%016llx  sp:  0x%016llx\n\t  pc:  0x%016llx cpsr: 0x%08x         esr: 0x%08x          far: 0x%016llx\n");
	_panic_with_thread_kernel_state("Synchronous exception taken while SP1 selected",0 );
	_panic("perfmon: reserving source twice: %d @%s:%d");
	_panic("kauth_cred_unref: cred %p resurrected @%s:%d");
	_panic("kauth_cred_ref: cred %p over-retained @%s:%d");
	_panic("kauth_cred_unref: cred %p over-released @%s:%d");
	_panic("userspace panic: %s @%s:%d");
	_panic("assertion failed: %s, file: %s, line: %d");
	_panic("mcache_audit: buffer %p modified after free at offset 0x%lx (0x%llx instead of 0x%llx)\n");
	_panic("mcache_audit: buffer %p modified after free at offset 0x%lx (0x%llx instead of 0x%llx)\n%s\n");
	_panic("Failed to allocate memory for firehose logging buffer @%s:%d");
	_panic("mcl_audit: buffer %p modified after free at offset 0: %p out of range [%p-%p)\n%s\n");
	_panic("mcl_audit: freed mbuf %p with type 0x%x (instead of 0x%x)\n%s");
	_panic("MRANGE: address out of range 0x%p");
	_panic("%s: %s failed to get bufctl for %p @%s:%d");
	_panic("Unexpected cast fail: from %p to %p @%s:%d");
	_panic("A kext referenced an unresolved weak symbol @%s:%d");
	_panic("overflow detected @%s:%d");
	_panic("os_refcnt: unexpected release of final reference (rc=%p) @%s:%d");
	_panic("os_refcnt: underflow (rc=%p) @%s:%d");
	_panic("os_refcnt: attempted resurrection (rc=%p) @%s:%d");
	_panic("os_refcnt: overflow (rc=%p) @%s:%d");
	_panic("Halt/Restart Timed Out @%s:%d");
	_panic("%s timed out in phase '%s'. Total %d ms @%s:%d");
	_panic("%s timed out in phase '%s'. Total %d ms:%s @%s:%d");
	_panic("Platform Expert not initialized @%s:%d");
	_panic(""Unable to recycle a chunk" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""%s clockFrequenciesNCLK[x%x] = %d is unknown: incompatible iBoot and AppleARMIO\n" @%s:%d");
	_panic(""Invalid devicetree: %s size %d %s size %d\n" @%s:%d");
	_panic(""ioDeviceClocks NULL size was %d\n" @%s:%d");
	_panic(""%s: unexpected resume." @%s:%d");
	_IOLog("%s: could not start the panic log device\n");
	_panic(""Invalid datastream configuration parameters. config:%s configEntryCount%d\n" @%s:%d");
	_panic(""Failed to deprioritize DSID %d. rc:0x%x\n" @%s:%d");
	_panic(""CPU configuration in device tree is invalid" @%s:%d");
	_panic(""%s: Invalid DevicePowerState" @%s:%d");
	_panic(""In structure does not match required structure\n" @%s:%d");
	_panic(""phys_carveout_size == 0" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""ClientId %d is beyond allowed limit of %d\n" @%s:%d");
	_panic(""Policy Manager is set to NULL\n" @%s:%d");
	_panic(""MEMCachePolicyManager: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""StreamId %d is beyond allowed limit of %d\n" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""MEMCachePolicyManager: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""%s: unknown provider type" @%s:%d");
	_panic(""%s: missing page size" @%s:%d");
	_panic(""%s: 'cpu-debug-interface.light-em-up': property is undefined.\n" @%s:%d");
	_panic(""%s: data is too short.\n" @%s:%d");
	_panic(""%s: data is too malformed.\n" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""Data streams per group exceeded the limit\n" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""StreamId %d is beyond allowed limit of %d\n" @%s:%d");
	_panic(""Unexpected allocation policy(%d)\n" @%s:%d");
	_panic(""Failed to get PMGR Counter AppleARMFunction\n" @%s:%d");
	_panic(""IOPCIDevice(%p) linked" @%s:%d");
	_panic(""!IOPCIConfigurator" @%s:%d");
	_panic(""Failed to initialize host bridge data structure" @%s:%d");
	_panic(""setDevicePowerState" @%s:%d");
	_panic(""tunnel" @%s:%d");
	_panic(""%s: pci restore invalid deviceid 0x%08lx\n" @%s:%d");
	_panic(""%s(%s): thunderbolt power on failed 0x%08x\n" @%s:%d");
	_panic(""IOMD::initWithOptions" @%s:%d");
	_panic(""Host bridge config entry not found." @%s:%d");
	_panic(""Host bridge data is not initialized for the host bridge." @%s:%d");
	_panic(""Orphant event source." @%s:%d");
	_panic(""IOPCIEventSource cannot find bridge data." @%s:%d");
	_panic(""did" @%s:%d");
	_panic(""IOPCIDevice" @%s:%d");
	_panic(""!host bridge" @%s:%d");
	_panic(""bridgeRemoveChild" @%s:%d");
	_panic(""!range" @%s:%d");
	_panic(""!IOPCIRangeListDeallocateSubRange" @%s:%d");
	_panic(""!IOPCIRangeListDeallocateSubRange busResv" @%s:%d");
	_panic(""!range" @%s:%d");
	_panic(""!IOPCIRangeListAllocateSubRange" @%s:%d");
	_panic(""bridgeMoveChildren" @%s:%d");
	_panic(""IOPCIRangeListDeallocateSubRange" @%s:%d");
	_panic(""MPS configuration failed" @%s:%d");
	_panic(""IOPCIRangeCollapse" @%s:%d");
	_panic(""end" @%s:%d");
	_panic(""s>" @%s:%d");
	_panic(""s<" @%s:%d");
	_panic(""e>" @%s:%d");
	_panic(""e<" @%s:%d");
	_panic(""sA" @%s:%d");
	_panic(""!minSize" @%s:%d");
	_panic(""!maxSize" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("acipc-slowlu-panic",SP + 0x24,0x4);
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""%s: unknown queue type %d" @%s:%d");
	_panic(""IOSkywalkNetworkBSDClient: not on work loop" @%s:%d");
	_panic(""%s: segment prepare error 0x%x" @%s:%d");
	_panic(""createSegmentBuffers failed" @%s:%d");
	_panic(""%s: unknown packet type %d" @%s:%d");
	_panic(""default packetCompletion()" @%s:%d");
	_panic(""default bufferCompletion()" @%s:%d");
	_panic(""__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu)" @%s:%d");
	_panic(""[%s] TxSQ.%x finalize timed out, state 0x%x dqcnt %u" @%s:%d");
	_panic(""TxSQ doorbell overflow (limit %u, count %u)" @%s:%d");
	_panic(""[%s] RxSQ.%x finalize timed out, state 0x%x pkts %u" @%s:%d");
	_panic(""poller disabled from callback" @%s:%d");
	_panic(""__copyin_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu)" @%s:%d");
	_panic(""__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu)" @%s:%d");
	_panic(""__copyin_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu)" @%s:%d");
	_panic(""UTxSQ.%x: no packet at slot %u" @%s:%d");
	_panic(""tx signal callback not available" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IOSkywalkNetworkPacket::prepareWithQueue failed: Q: %p, direction: %u ret: 0x%x\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("acipc-pdp-fc-ack-panic",SP + 0xac,0x4);
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""unable to remap memory segments" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""memory addresses [0x%llx, 0x%llx] out of range\n" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""IOACIPCFamily segment handling reinitialized" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""AppleSamsungSPIController: %s stopDMACommand error %x" @%s:%d");
	_panic(""AppleSamsungSPIController: stop DMA timed out, %s: woke %d, status %#x" @%s:%d");
	_panic(""%s: Calling thread needs to own the gate!" @%s:%d");
	_panic(""%d -- %s: Timeout waiting for completion rdar://16910843" @%s:%d");
	_panic(""%s: Timeout polling for completion" @%s:%d");
	_panic(""PPL cc_malloc_clear trying to allocate %zu > PAGE_SIZE" @%s:%d");
	_panic(""PPL cc_malloc_clear trying to free %zu > PAGE_SIZE" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""corecrypto kext RNG initialization failure (%d)" @%s:%d");
	_panic(""FIPS Kernel POST Failed (%d)!" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""subclass is required to implement getAlgorithmName" @%s:%d");
	_panic(""Creating Special Keys Twice" @%s:%d");
	_panic(""Tried to call commandSleep without holding command gate" @%s:%d");
	_panic("invalid min/max: min = %u, max = %u");
	_panic("invalid executable object index: %llu");
	_panic("invalid chip type: %llx");
	_panic("invalid iterator: %lu");
	_panic("illegal identifier constraint: %llu");
	_panic("illegal identifier definition: %s");
	_panic("read negative bytes: total = %d, left = %d, read = %d");
	_panic("buffer not large enough for hash: actual = %lu, expected >= %lu");
	_panic("unsupported digest length: %lu");
	_panic("illegal property definition: %s");
	_panic("cannot initialize digest from buffer: len = %lu, max = %lu");
	_panic("invalid offset: %lld");
	_panic("pmap and kext data length inconsistency: pmap = %lu, kext = %lu");
	_panic("pmap data misaligned: p = %p, aligned = %#lx");
	_panic("failed to instantiate ap: %d");
	_panic("failed to get previous stage manifest hash: %d");
	_panic("failed to get mix-n-match policy: %d");
	_panic("failed to get long os version: %d");
	_panic("nonce value too large: actual = %u, expected <= %lu");
	_panic("invalid offset: %lld");
	_panic("illegal identifier: id = %llu, name = %s, type = %s");
	_panic("invalid identifier [bad id]: id = %llu, name = %s");
	_panic("unsupported signature oid: len = %lu");
	_panic("failed to allocate lockable memory: %#x");
	_panic("bogus nonce epoch defined/computed: %s");
	_panic("failed to get previous stage manifest hash: %d");
	_panic("failed to read nonce blob: %d");
	_panic("failed to clear nvram variable: %s: %d");
	_panic("failed to clear nvram variable: nonce-seeds: %d");
	_panic("failed to copy nonce: %d");
	_panic("failed to write nonce blob: %d");
	_panic("unsupported digest length: %lu");
	_panic("failed to compute nonce digest: nonce = %s, error = [%d] %s");
	_panic("seed is zero: flags = %#llx");
	_panic("invalid nonce domain: %llu");
	_panic("unexpected error: %#x");
	_panic("unexpected error: system = %#x, sub = %#x, code = %#x");
	_panic("msleep: %d");
	_panic("failed to allocate thread: %#x");
	_panic("prepare descriptor: %#x");
	_panic("complete descriptor: %#x");
	_panic("cyphertext too small: actual = %lu, needed = %lu");
	_panic("performAES: %#x");
	_panic("buffer cannot hold object: object = %s, length = %lu, required = %lu");
	_panic("invalid sync type: %#llx");
	_panic("failed to get device tree node: %s: %d");
	_panic("failed to get crypto algorithm: %d");
	_panic("non-sensical crypto hash method: %s");
	_panic("failed to read lp-smb0: %d");
	_panic("failed to read lp-smb1: %d");
	_panic("invalid lp state: %#x");
	_panic("failed to get ephemeral data mode property: %d");
	_panic("unexpected nvram read return: %d");
	_panic("non-sensical nonce length: %u");
	_panic("failed to roll nonce: %d");
	_panic("failed to complete descriptor: %#x");
	_panic("failed to prepare descriptor: %#x");
	_panic("failed to allocate lockable memory: %#x");
	_panic("non-sensical nonce length: %u");
	_panic("bogus digest length: %lu");
	_panic("attempt to deallocate statically-allocated buffer");
	_panic("error not set to valid posix code");
	_panic("illegal chip definition");
	_panic("vnode-backed firmware cannot be used in the ppl");
	_panic("error not set to valid posix code");
	_panic("illegal firmware: attached manifest on vnode source");
	_panic("error not set to valid posix code");
	_panic("non-NULL context");
	_panic("error not set to valid posix code");
	_panic("vnode-backed firmware cannot be used in the ppl");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("cannot execute in guarded mode: %s");
	_panic("illegal identifier spec");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("zero-length string read for identifier");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("unexecutable object spec");
	_panic("must execute in guarded mode: %s");
	_panic("nonce already set");
	_panic("nonce state corrupted");
	_panic("must execute in guarded mode: %s");
	_panic("unreachable");
	_panic("must execute in guarded mode: %s");
	_panic("cannot execute in guarded mode: %s");
	_panic("error not set to valid posix code");
	_panic("illegal identifier definition");
	_panic("error not set to valid posix code");
	_panic("illegal identifier definition");
	_panic("error not set to valid posix code");
	_panic("address not page-aligned");
	_panic("error not set to valid posix code");
	_panic("address not page-aligned");
	_panic("failed to allocate mutex");
	_panic("cannot find IOAESAccelerator: timeout = %llu seconds");
	_panic("could not find IONVRAM resource");
	_panic("could not init workloop");
	_panic("could not init command gate");
	_panic("unexpected re-entrancy into work loop thread");
	_panic("failed to allocate mutex");
	_panic("error not set on wakeup");
	_panic("cannot entangle this early");
	_panic("alloc failed: ptbuff");
	_panic("alloc failed: ctbuff");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("zero-length string read for identifier");
	_panic("error not set to valid posix code");
	_panic("unreachable");
	_panic("cannot execute in guarded mode: %s");
	_panic("error not set to valid posix code");
	_panic("cannot execute in guarded mode: %s");
	_panic("thread call already pending");
	_panic("failed to free thread call");
	_panic("failed to get chosen node");
	_panic("cannot execute in guarded mode: %s");
	_panic("error not set to valid posix code");
	_panic("failed to copy input");
	_panic("error not set to valid posix code");
	_panic(""AMFI: unable to obtain local signing public key (%x)" @%s:%d");
	_panic(""entitlement key name is too long: %s" @%s:%d");
	_panic(""CoreEntitlments has triggered a panic\n" @%s:%d");
	_panic(""AMFI: While evaluating profile for %s got invalid profile from amfid\n" @%s:%d");
	_panic(""Profile passed by amfid does not authorize the certificate\n" @%s:%d");
	_panic(""Profile has invalid entitlements\n" @%s:%d");
	_panic(""Couldn't create entitlements context\n" @%s:%d");
	_panic(""AMFI: AMFIEntitlementGetBool got called with %s that exceeds MAX_KEY_SIZE\n" @%s:%d");
	_panic(""AMFI: No chip from IMG4? errno: %d" @%s:%d");
	_panic(""Cannot unload AMFI - policy is not dynamic\n" @%s:%d");
	_panic(""amfid is broken. (%s) (%d) (%d) (%d)" @%s:%d");
	_panic(""AMFI: '%s': Invalid first Code Directory should have been caught by xnu.\n" @%s:%d");
	_panic(""AMFI: unable to start local signing key initialization thread: %d" @%s:%d");
	_panic(""AMFI: no chosen device tree node!" @%s:%d");
	_panic(""AMFI: no protected-data-access device tree node!" @%s:%d");
	_panic(""AMFI: unable to obtain AKS services for local signing public key" @%s:%d");
	_panic(""AMFI: protected-data-access has unexpected size (%u)!" @%s:%d");
	_panic(""AMFI: calling %s without xART storage support" @%s:%d");
	_panic(""AMFI: %s: unable to obtain local signing public at early boot" @%s:%d");
	_panic(""Couldn't allocate entitlements access lock" @%s:%d");
	_panic(""AMFI: querying entitlements for the wrong process\n" @%s:%d");
	_panic(""AMFI: DER entitlements anomaly in %s" @%s:%d");
	_panic(""AMFI: DER entitlements validation anomaly in %s" @%s:%d");
	_panic(""AMFI: querying entitlements for the wrong process\n" @%s:%d");
	_panic(""AMFI: XML is larger than uint32_t" @%s:%d");
	_panic(""AMFI: XML serialization failed too late in the process" @%s:%d");
	_panic(""AMFI: Cannot construct exemption profile." @%s:%d");
	_panic(""AMFI: Invalid context occured, this shouldn't happen\n" @%s:%d");
	_panic(""AMFI failed to initialize. This would compromise system security." @%s:%d");
	_panic(""can't has cs_enforcement_disable" @%s:%d");
	_panic(""AMFI: no chosen device tree node!" @%s:%d");
	_panic(""AMFI: no amfi-only-platform-code device tree node!" @%s:%d");
	_panic(""AMFI mac policy could not be registered!" @%s:%d");
	_panic(""AMFI: amfi-only-platform-code has unexpected size (%u)!" @%s:%d");
	_panic(""Couldn't allocate memory for a denylist" @%s:%d");
	_panic(""%s failed to become idle (0x%08x) in %dms" @%s:%d");
	_panic(""%s Overflow/Underflow: %08x" @%s:%d");
	_panic(""%s failed to reach target power state %d" @%s:%d");
	_panic(""%s:%s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(""Property '%s' of registry entry '%s' is %u bytes long.  Expected %lu bytes." @%s:%d");
	_panic(""RTBuddy: memcpy_to32 requires 4-byte alignment (dst=%p, size=%zu)" @%s:%d");
	_panic(""RTBuddy: memcpy_from32 requires 4-byte alignment (src=%p, size=%zu)" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""RTBuddy(%s)::%s " "mapFirmware is deprecated." @%s:%d");
	_panic(""RTBuddy(%s)::%s " "releaseFirmware is deprecated.  Call 'release' instead." @%s:%d");
	_panic(?);
	_panic(""RTBuddy: truncation. %zu cannot be represented in a uint32_t." @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Incompatible protocol version: %s=[%x,%x] kext=%x" "\n%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(?);
	_panic(""%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Invalid oslog command %x" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Failed to copy entries" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""%s:%u: Single segment mapping does not cover entire memory descriptor." @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Failed to attach to CoreAnalyticsHub" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Selected firmware does not match the target IOP. (%s)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "failed to start (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "failed to stop (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "failed to transition from idle to ON on sleep request (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "failed to transition from idle to ON on off request (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "failed to start (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "already running (current state: %d)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "No response received in %llds, %s not started? (%x)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "DART provided a 0 DVA" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "sleep-on-hibernate applies only to IOPs that are not power-managed or user-power-managed" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "dont-power-on is not compatible with power-managed" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "power-managed and user-power-managed are mutually exclusive device tree flags" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Unable to save SRAM contents" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Unable to restore SRAM contents" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "invalid reporter type (%d) for reporter %s (0x%llx)" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "forceCrashlog() called with unexpected RTBuddyNmiType: %d" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Unable to determine target memory for firmware." "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Firmware will not fit in the target memory region." "\n%s" @%s:%d");
	_panic(""Variable read size (%ld) does not match patch variable size(%d)" @%s:%d");
	_panic(""Variable write size (%ld) does not match patch variable size(%d)" @%s:%d");
	_panic(""%s: Unable to allocate %u byte heap" @%s:%d");
	_panic(""Variable read size (%ld) does not match patch variable size(%d)" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "invalid management message %llx received: %d, status = %x\n" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "unsupported message received on management endpoint: 0x%016llx" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Invalid pinger sequence number received: 0x%x (timestamp 0x%x), expected 0x%x" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "unsupported power state: 0x%x" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "Failed to send TS response message to IOP - %x" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "receive an unexpected message while still bussy (0 != _receiveTime), state:%d, msg: 0x%llx" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "message %llx for unknown endpoint %d" "\n%s" @%s:%d");
	_panic(""RTBuddy(%s)::%s " "%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""user panic" @%s:%d");
	_snprintf(SP + 0x10,0xe4,"panic %02x");
	_panic(""Incompatible protocol version: spu=%#08x kext=%#08x" @%s:%d");
	_panic(""ringbuffer abort at %s:%d" @%s:%d");
	_panic(""%s: invalid firmware bundle format\n" @%s:%d");
	_panic(""%s: firmware target %s not found" @%s:%d");
	_panic(""%s: firmware validation failed %d" @%s:%d");
	_panic(""%s: %d images found in fw bundle" @%s:%d");
	_panic(""Variable write size (%ld) does not match patch variable size(%d)" @%s:%d");
	_panic(""_handleReadyReport called more than once \n" @%s:%d");
	_panic(""Unexpected message from IOP (msg: %#llx)" @%s:%d");
	_panic(""slaveMemory=%p" @%s:%d");
	_panic(""multiple historical queue owners on %s\n" @%s:%d");
	_panic(""AOT not supported on endpoints with historical buffer" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleS5L8920XPWM: Failed to send droop event message" @%s:%d");
	_panic(""CCFaultReport::saveFileName called with 0 length fileName" @%s:%d");
	_panic(""CCFaultReport::initWithFaultInfo called with 0 length functionName" @%s:%d");
	_IOLog("Force panic for %x\n");
	_panic(""Cannot resize in ring buffers" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("uart.panic_on_delay",SP + 0x1c,0x4);
	_panic(""AppleOnboardTestBSDClient::watchDogTimer detected an unexpected delay in ctl_send()\n" @%s:%d");
	_panic(""actualByteCount is smaller than buffer size\n" @%s:%d");
	_panic(""%s: Serial Debug Trap for datarate=%d (%d)" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: could not find system ID: %s <NO ESN_STATUS!>" @%s:%d");
	_panic(""%s: could not find system ID: %s %s" @%s:%d");
	_panic(""post init failed\n" @%s:%d");
	_panic(""%s: could not create power source" @%s:%d");
	_panic(""%s: could not start power source" @%s:%d");
	_panic(""%s::handleStartGated() failed" @%s:%d");
	_IOLog("%s: Skipping sochot panic due to low temp: %d alarm1: %d tolerance: %d");
	_panic(""No loop config data found for %s" @%s:%d");
	_panic(""Couldn't find any data for loop-sensor-set%d" @%s:%d");
	_panic(""Bad dockChannelIndex %d for tGraphModeEnable " @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot source" @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d, Ids %d/%d/%d)" @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot source" @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Perf %d/%d)" @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d",);
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d");
	_panic(""AppleSocHot: Hot Hot Hot (%08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d %08X/%d, Ids %d/%d/%d/%d/%d/%d/%d/%d/%d, Perf %d/%d)" @%s:%d",);
	_panic(""Couldn't configure fast die control loop(s)" @%s:%d");
	_panic(""Too many loops defined" @%s:%d");
	_panic(""Bad uart_control_base base for tGraphModeEnable " @%s:%d");
	_panic(""Bad uart_data_base base for tGraphModeEnable " @%s:%d");
	_panic(""Bad uart_dock_data_base base for tGraphModeEnable " @%s:%d");
	_panic(""Bad dock_agent_base disabling tGraphModeEnable " @%s:%d");
	_panic(""Sensor registered with ADTC, but was not assigned to any control loop" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("panic-wait-forever",SP + 0xb,0x1);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("smc-panic-on-key-timeout",0xfffffff009f8c370,0x1);
	_IOLog("SMC cross panic flow is not supported, bail out\n");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleSMC::start failed to allocate acm threadcall" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""%s: Need to add 'reg' entry in device tree for the timers memory space" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""Unknown command 0x%x\n" @%s:%d");
	_panic(""AppleSMCpanic kSMCNoCommand" @%s:%d");
	_panic(""Error reading SMC region base from Device Tree" @%s:%d");
	_panic(""Error reading SMC region size from Device Tree" @%s:%d");
	_panic(""SMC Key Payload SRAM Address is out of range" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleSMCpanic Tag/ID mismatch" @%s:%d");
	_panic(""something wrong with AppleA7IOPNub" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""NULL message\n" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleSMC: wrong provider" @%s:%d");
	_panic(""%s: No downstream IOAccessoryManager to pass on the charging capabilities menu." @%s:%d");
	_panic(""AppleEmbeddedAudio: Invalid size of external-power-provider property [length = %u, pHandleLength = %u, numberOfHandles = %u]\n" @%s:%d");
	_panic(""%s: error establishing default routes: %s" @%s:%d");
	_panic(""%s::%s unimplemented" @%s:%d");
	_panic(""AppleARMDMAAudioDevice::createStreamFormat dataFormat=%4s" @%s:%d");
	_panic(""zero" @%s:%d");
	_panic(""%s::%s() should not be called without owning workloop" @%s:%d");
	_panic(""%s: mismatched bytes per frame: input %lu output %lu" @%s:%d");
	_panic(""%s::%s attempting to release/re-allocate DMA buffer while DMA is streaming." @%s:%d");
	_panic(""%s: invalid power stage %d" @%s:%d");
	_panic(""%s::%s should not be called without owning workloop" @%s:%d");
	_panic(""%s: invalid power stage %d" @%s:%d");
	_panic(""%s: unknown base class %#x for control ID %u" @%s:%d");
	_panic(""minimum value cannot be greater than maximum" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""%s:%s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""could not stop lifs kext!" @%s:%d");
	_panic(?);
	_panic(""AppleSmartIO: sent unexpected async Message: EP: %2d TAG: %d OP: %3d PARAM: 0x%02X DATA: 0x%08X" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""got unexpected 'tag' on message from SmartIO: EP: %s(%2d) TAG: %d OP: %3d PARAM: 0x%02X DATA: 0x%08X" @%s:%d");
	_panic(""SmartIO sent unexpected async Message: EP: %2d TAG: %d OP: %3d PARAM: 0x%02X DATA: 0x%08X" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""got unexpected 'tag' on message from SmartIO: EP: %s(%2d) TAG: %d OP: %3d PARAM: 0x%02X DATA: 0x%08X" @%s:%d");
	_panic(""dmaCommand->prepareWithSpecification didn't work %d, offset = 0x%llu\n" @%s:%d");
	_panic(?);
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""Unexpected SIO Protocol version %u - %u" @%s:%d");
	_panic(""Failed to retrieve SIO Protocol Version" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""Endpoint %s(%d) being used by parent driver when shutdown requested." @%s:%d");
	_panic(""Endpoint %s(%d) being used by parent driver before start." @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""sce is null\n" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""dma-channels config incorrect length" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""Timeout waiting for stop to idle on EP %s(%d) CS: %d" @%s:%d");
	_panic(""DMA stop failed with error %u on EP %s(%d)" @%s:%d");
	_panic(""Expected ACK from configure on Channel %s(%d): Received: %d" @%s:%d");
	_panic(""bad report tag %u received on EP %s(%d)" @%s:%d");
	_panic(""tag %u reported on EP %s(%d) while not active" @%s:%d");
	_panic(""unexpected opcode %u received on EP %s(%d)" @%s:%d");
	_panic(""got DMA completion with unexpected tag %u on EP %s(%d)" @%s:%d");
	_panic(""unexpected asynchronous error %u on EP %s(%d)" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(" @%s:%d");
	_panic(""unexpected power state %ld" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""AppleUSBRequestCompleter[%p]::%s: thread call(%p) failed (0x%08x)" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s[%p]::closeGated failed" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s[%p]::closeGated failed" @%s:%d");
	_panic(" @%s:%d");
	_panic(""failed to allocate client record\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(" @%s:%d");
	_panic(""Unhandled %c-core error: " "LLC_ERR_STS/ADR/INF=%#llx/%#llx/%#llx " "LSU_ERR_STS(P/E)=%#llx/%#llx " "FED_ERR_STS(P/E)=%#llx/%#llx " "MMU_ERR_STS(P/E)=%#llx/%#llx " "DPC_ERR_STS=(P/E)=%#llx/%#llx" @%s:%d");
	_kprintf("AppleARM64ErrorHandler: will %spanic on correctible ECC errors\n");
	_panic(""LLC %s error%s from %s: FAR=%#lx LLC_ERR_STS/ADR/INF=%#llx/%#llx/%#llx addr=%#llx cmd=%#x(%s)" @%s:%d");
	_panic(""LLC %s error: FAR=%#lx LLC_ERR_STS/ADR/INF=%#llx/%#llx/%#llx" @%s:%d");
	_panic(""LLC %s error: FAR=%#lx LLC_ERR_STS/ADR/INF=%#llx/%#llx/%#llx way=%#x syndrome=%#x%s" @%s:%d");
	_panic(""FED err (%s%s) on %c-core: FAR=%#lx FED_ERR_STS=%#llx MMU_ERR_STS=%#llx %s" @%s:%d");
	_panic(""LSU err (%s%s) on %c-core: FAR=%#lx LSU_ERR_STS=%#llx MMU_ERR_STS=%#llx addr=%#llx" @%s:%d");
	_panic(""MMU err (%s%s) on %c-core: FAR=%#lx MMU_ERR_STS=%#llx way=%#x set=%#x" @%s:%d");
	_panic(""DPC err (%s%s) on %c-core: FAR=%#lx DPC_ERR_STS=%#llx" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IOFenceTransaction %p freed with non-zero fence count!\n" @%s:%d");
	_panic(""IOSurface released with non-zero client retain count: %p" @%s:%d");
	_panic(""IOFence current queue is not empty for surface: %p" @%s:%d");
	_panic(""IOFence wait queue is not empty for surface: %p" @%s:%d");
	_panic(""fDeviceCacheList is not empty for surface: %p" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IOSurface in slot %08x has a mismatched surface ID of %08x\n" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""IOSurfaceRootUserClient::set_surface_handle asked to set handle %08x that was not free: %p" @%s:%d");
	_panic(""IOSurfaceRootUserClient: asked to allocate client shared id %08x not known by IOSurfaceRoot" @%s:%d");
	_panic(""fence freed before completion: %p" @%s:%d");
	_panic(""IOSurfaceSharedEventListener::free(): notification list is not empty" @%s:%d");
	_panic(""IOSurfaceSharedEvent::free() called with non-empty notification list" @%s:%d");
	_panic(""failed to allocate memory" @%s:%d");
	_panic(""IOSurface does not support release with when != 1" @%s:%d");
	_panic(""IOSurface does not support taggedRelease with when != 1" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""IOFence does not support release with when != 1" @%s:%d");
	_panic(""IOFence does not support taggedRelease with when != 1" @%s:%d");
	_panic(""os_refcnt: underflow (rc=%p)\n" @%s:%d");
	_panic(""os_refcnt: attempted resurrection (rc=%p)\n" @%s:%d");
	_panic(""os_refcnt: overflow (rc=%p)\n" @%s:%d");
	_panic(""%s, Should not get here: mBusyCodecs=%d < mNumCodecs=%d but no codec selected\n" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: failed to save global mapper property %s : %p" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""unsupported" @%s:%d");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: SID %u persistent L2 entries must be within the first CTE, found %u L2 entries in CTE %p index %#x" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Invalid Direction %u \n" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: pio-region %d not page aligned: 0x%016llx 0x%016llx" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Persistent mapping page limits [0x%lx..0x%lx) outside valid range [0x%lx..0x%lx)" @%s:%d");
	_panic(""%s: Failed to allocate space for persistent mapping with page range [0x%lx..0x%lx)" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Unable to reserve DVA range %u @ [%#llx..%#llx) pages [%#lx..%#lx) possible overlapping ranges %p" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Mapper not registered: 0x%08x" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""dead mapping {0x%08x 0x%08x} not found in vm space" @%s:%d");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: IODMACommand %p not prepared: 0x%x" @%s:%d");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: CE %p on unknown list 0x%08x" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Request begin/end (0x%llx/0x%llx) not page aligned" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: failed to create mapper for mapper nub %p" @%s:%d");
	_panic(""%s: dynamic mapper dictionary contains reserved '%s' property" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: failed to create globalMapperProperties" @%s:%d");
	_panic(""%s: Incompatible DART interface: expected 0x%016llx actual 0x%016llx" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("%s:%u: REQUIRE failed");
	_panic(""%s: pio-range property not allowed" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	_panic(""%s: Mapper cannot be invoked with preemption disabled" @%s:%d");
	_panic(""%s: VM space declined translation" @%s:%d");
	_panic(""%s: Mapper cannot be invoked with preemption disabled" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: dynamic mapper dictionary contains reserved '%s' property" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	_panic(""IOPCIProxyMessagedInterruptController::handleInterrupt should not be called" @%s:%d");
	_panic(""APCIe MMU not supported" @%s:%d");
	_panic(""Disabling PHY power gating not supported" @%s:%d");
	_panic(""PCIe config space access to %02x:%02x:%x while port is disabling" @%s:%d");
	_panic(""PCIe config space access to %02x:%02x:%x while port %d device is in deep sleep" @%s:%d");
	_panic(""apcie[%u:%s] unhandled interrupts (0x%x out of 0x%x)" @%s:%d");
	_panic(""apcie[%u:%s] Attempt to %s port while in deep sleep" @%s:%d");
	_panic(""apcie[%d:%s] unexpected state transition (%d->%d) while in deep sleep" @%s:%d");
	_panic(""apcie[%d:%s] %s for device %p failed: 0x%08x" @%s:%d");
	_panic(""unsupported" @%s:%d");
	_panic(""PCIe MMU not supported" @%s:%d");
	_panic(""apcie[%u::%s] link width is %u, expected %u" @%s:%d");
	_panic(""NVMe not supported" @%s:%d");
	_panic(""function not implemented" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""lookupDTProperty: missing property %s on node %s" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""device %s requesting crpto msi, but _msiCryptoAddress is 0" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie: can't wait with resume or noLTSSM" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie[%u:%s]: unexpected port state %u" @%s:%d");
	_panic(""apcie[%u:%s] unexpected deep sleep entry notification in state %d" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie[%u:%s] unexpected deep sleep exit notification in state %d" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie[%u:%s]::enableHardware() called in state %d" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie[%d:%s] failed to train link to desired speed: expected %d actual %d" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""apcie[%u::%s]::setDeviceWake() not supported for port" @%s:%d");
	_panic(""lookupDTProperty: missing property %s on node %s" @%s:%d");
	_panic(""Can't assert NVMe reset while port is enabled" @%s:%d");
	_panic(""APCIEPortControl[%u:%s]::%s endpoint reset not supported" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("amfm-panic-on-manuals2r-pe-failure",SP + 0x1c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("amfm-panic-on-ld",SP + 0x1c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("amfm-panic-on-br",SP + 0x1c,0x4);
	_func_fffffff00898e3a4(?,0x6,"%s:panic on link down: %u\n");
	_func_fffffff00898e3a4(?,0x6,"%s:panic on bad request: %u\n");
	_panic(""Invalid power state: %lu" @%s:%d");
	_panic(""REG_ON failed: 0x%x\n" @%s:%d");
	_panic(""Port disable failed: 0x%x\n" @%s:%d");
	_panic(""port enable failed: 0x%x" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""state_print_ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""state_print_ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""state_print_ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""state_print_ret > 0" @%s:%d");
	_panic(""cursor < size" @%s:%d");
	_panic(""state_print_ret > 0" @%s:%d");
	_panic(""fWorkLoop->inGate()" @%s:%d");
	_panic(""owner" @%s:%d");
	_panic(""fClientLock" @%s:%d");
	_panic(""!fClientArray->getCount()" @%s:%d");
	_panic(""Port enable failed: 0x%x" @%s:%d");
	_panic(""port in deep sleep while resetting, DS vector: 0x%x" @%s:%d");
	_panic(""Port disable failed: 0x%x\n" @%s:%d");
	_panic(""clientClasses" @%s:%d");
	_panic(""theClass" @%s:%d");
	_panic("(%s) %s:%u: filter slice %d start is not %#llx-byte aligned: %#llx");
	_panic("(%s) %s:%u: filter slice %d length is not %#llx-byte aligned: %#llx");
	_panic("(%s) %s:%u: filter slice %d start/end is invalid: (%#llx, %#llx)");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""DAPF: %s : %sreg mismatch - offset 0x(%x). read 0x%llx, but expected 0x%llx" @%s:%d");
	_panic(""DAPF: %s : %sfilter reg mismatch - slice(%d) offset 0x(%x). read 0x%llx, but expected 0x%llx" @%s:%d");
	_panic(""(%s) %s::%s: " "Superclass failed to start" @%s:%d");
	_panic(""DAPF : %s : was previously locked but not enabled" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: invalid immediate packet" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s is negative before increment" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	_panic(""%s is negative before increment" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	_panic(""%s is negative before increment" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	_panic(""%s::%s:%d _pendingPowerStateChange already true. this=%p" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	_panic(""%s is negative before increment" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	_panic(""%s is negative before increment" @%s:%d");
	_panic(""%s is negative after decrement" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("pmgr-disable-energy-panic",SP + 0x3c,0x4);
	_panic(""ApplePMGR: %s:%u " "%s pendingPerfState device %s driver in %s state" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s currentPerfState %d devices %s %s %s %s %s driver in %s state" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s pendingPerfState device %s driver in %s state. Debug: While Loop time elapsed = %llu, debugStart = %llu, deadline = %llu" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s currentPerfState %d devices %s %s %s %s %s driver in %s state. Debug: While Loop time elapsed = %llu, debugStart = %llu, deadline = %llu" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "device %x (%s) wrong powerDomainID %x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%x (%s) wrong energy counter %x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Bridge %d has no mapping\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "device %s (%x) not set in group %x index %x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s PerfDomain %x >= %x (kPerfDomainIDMax)\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s not found\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_psRegToDeviceIDMap[0x%x][0x%x] = 0x%x != kIDReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Unexpected PS state MANUAL_PS=%x for %s" @%s:%d");
	_panic(""ApplePMGR die %u device 0x%x %s count reached %u (run-max) %u (clock-off)\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " " currentPerfState %u devices %s %s %s %s %s driver in %s state" @%s:%d");
	_panic(""ApplePMGR: %s:%u " " requestedPerfState %u driver in %s state" @%s:%d");
	_panic(""newPerf (%d) and newPerfTrue (%d) differ, but no reason given" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_deviceIDToIndexMap[%x] == %x != kIndexReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_psRegToDeviceIDMap[0x%x][0x%x] = 0x%x != kIDReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Invalid map %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_psRegToDeviceIDMap[0x%x][0x%x] = 0x%x != kIDReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s %d 0x%x & 0x%x is 0x%x instead of 0x%x after %d ticks die %u\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_pwrGateRegToPowerDomainIDMap[0x%x][0x%x] = 0x%x != kIDReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_psRegToDeviceIDMap[0x%x][0x%x] = 0x%x != kIDReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_powerDomainIDToIndexMap[%x] == %x != kIndexReserved" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_regIndex = 0x%x, _regGroup = 0x%x, _perfRegGroups[(_regGroup)].regCount = 0x%x" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Deadline: 0x%llx, AbsTime: 0x%llx PMP Failed to Come Online within 15 seconds" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Deadline: 0x%llx, AbsTime: 0x%llx PMP-DevHandle : 0x%x, Expected: {%llx}: Actual: {%llx}" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_syncDeviceStatusChange takes too long execTime %llu us threshold %llu us PsLevelChangeTime %llu us turningOn %x threadSlept %x" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "roscData[%d].node(%d) -1 < %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "roscRef[roscData[%d].node(%d) - 1] (%d) < %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s power > max threshold. Power = %llu mW, max threshold = %llu mW, current energy = %llu, previous energy = %llu, currTicks = %llu, prevTicks = %llu" @%s:%d");
	_panic(""checkCpuEnergy core %u current value %llu previousValue %llu deltaValue %llu" @%s:%d");
	_panic(?);
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""invalid pmp version" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "device %x (%s) wrong perfDomainID %x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "device %x (%s) wrong perfDomainID %x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Interrupt index %u is registered and enabled but not handled" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_perfStateToID state >= maxPerfStateCount, state %u, perfStateCount %u domain %s pendingState %u currState %u targetState %u" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_deviceIdCheck failed, duplication for device Id %x " @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " " pendingPerfState device %s driver in %s state" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "light-em-up=1 not supported for S2R" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "soc-device-die-offset should be non zero and set in EDT" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "soc-device-die-offset should be non zero and set in EDT" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "device %x is perf counter only, not suitable for %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "[Die %u] %s reset (id %x) while driver in %s state\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "[Die %u] %s reset while not powered on (id %x)\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_updateCPUComplexPerfState takes too long execTime %llu us deltaSetPerfState %llu perfDomainID %x" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Lock took %lld  us\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s power > upper bound. Power = %llu mW, upper bound = %u mW" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Missing EDT property: misc-acg-offset" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Missing EDT property: misc-cores-offset" @%s:%d");
	_panic(""ApplePMGRNub: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""AppleSOCTuner: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""gcb(%d) >= _numGCBs(%d)" @%s:%d");
	_panic(""failed to allocate intStatus[%d]\n" @%s:%d");
	_panic(""GPIO Interrupt Storm!! _activeirqs (%p) _irqCount (%p) \n" @%s:%d");
	_panic(""GPIO vector #%d is using unsupported interrupt group: %d\n" @%s:%d");
	_panic(""A GPIO interrupt was configured on pin (zero indexed) #%d, but there's only %d pins!" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""gcb(%d) >= _numGCBs(%d)" @%s:%d");
	_panic(""GPIO Interrupt Storm!! _activeirqs (%p) _irqCount (%p) \n" @%s:%d");
	_panic(""GPIO vector #%d is using unsupported interrupt group: %d\n" @%s:%d");
	_panic(""A GPIO interrupt was configured on pin (zero indexed) #%d, but there's only %d pins!" @%s:%d");
	_panic(""GPIO(%zu): 0x%p: oldConfig(%x) != config(%x)" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""failed to allocate _intStatus[%d]\n" @%s:%d");
	_panic(""GPIO AppleARMFunction refers to pin #%d (zero-indexed), but there's only %d pins!" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""gcb(%d) >= _numGCBs(%d)" @%s:%d");
	_panic(""GPIO Interrupt Storm!! _activeirqs (%p) _irqCount (%p) \n" @%s:%d");
	_panic(""GPIO vector #%d is using unsupported interrupt group: %d\n" @%s:%d");
	_panic(""A GPIO interrupt was configured on pin (zero indexed) #%d, but there's only %d pins!" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""_supportedIntGroups must be allocated before initPinsAndGroups" @%s:%d");
	_panic(""Memory allocation failed" @%s:%d");
	_panic(""!wl" @%s:%d");
	_panic(""!_wakeEventSignal" @%s:%d");
	_panic(""initForPM" @%s:%d");
	_panic(""addEventSource" @%s:%d");
	_panic(""failed to allocate intStatus\n" @%s:%d");
	_panic(""_supportedIntGroups must be allocated before initPinsAndGroups" @%s:%d");
	_panic(""Memory allocation failed" @%s:%d");
	_panic(""GPIO Device Controller refers to pin #%d (zero-indexed), but there's only %d pins!" @%s:%d");
	_panic(""failed to allocate _supportedIntGroups or _isWakeupIntGroup\n" @%s:%d");
	_panic(""no InterruptController name found in start()" @%s:%d");
	_panic(""InterruptController buffer allocation failed in start()" @%s:%d");
	_panic(""InterruptVector buffer allocation failed in start()" @%s:%d");
	_panic(""missing role property or provider is not available" @%s:%d");
	_panic(""failed to allocate _wakeEvents\n" @%s:%d");
	_panic(""failed to allocate _intStatus\n" @%s:%d");
	_panic(""wake-events improperly defined" @%s:%d");
	_panic(""interruptLock allocation failed in start()" @%s:%d");
	_panic(""wake-no-interrupt-group isnt supported on this GPIO device. Requires an always on gpio block" @%s:%d");
	_panic(""too many supported int groups" @%s:%d");
	_panic(""malformed supported-int-groups device tree data" @%s:%d");
	_panic(""IOInterruptController start function failed" @%s:%d");
	_panic(""This service does not support GPIO control in EDT" @%s:%d");
	_panic(""Failed to allocate GPIO Device" @%s:%d");
	_panic(""Invalid service matching" @%s:%d");
	_panic(""_supportedIntGroups must be allocated before initPinsAndGroups" @%s:%d");
	_panic(""Memory allocation failed" @%s:%d");
	_panic(""%s::%s %s; last %s status %08x int shadow %08x xfer %08x fifo %08x for device %s" @%s:%d");
	_panic(""Unable to initialize AppleUSBPhyServiceNotifier members" @%s:%d");
	_panic(""Invalid phyID" @%s:%d");
	_panic(""ApplePPM: %s:%u " "setTable failed, error: 0x%x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "i %d, lane %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d, output timescale %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d, output timescale %d, input source %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "%s, lane %d, output %d out of range" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d, unsupported input source" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d, unsupported output timescale" @%s:%d");
	_panic(""ApplePPM: %s:%u " "lane %d, no decision tree" @%s:%d");
	_panic(""ApplePPM: %s:%u " "%s, lane %d, %d handles\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "count %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client %d, no thermal timescale" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client %d ack, idx %d, timescale %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unsupported filter tau %d, index %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "getPTDRangeInfo for range %d returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "getNumPTDRanges returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "num_ranges %d, ranges_found %d\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "writePTDEntry %i returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "writePTDEntry 0 returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "enablePTDEntryInterrupt (%d) returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unknown data ID %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "readPTDEntry returned 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM PTD unexpected statusID %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "bad power list timescale %d for uniqueId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "must create %s entity in subclass" @%s:%d");
	_panic(""ApplePPM: %s:%u " "inconsistent inputs (%p, %d, %d)" @%s:%d",);
	_panic(""ApplePPM: %s:%u " "clientID %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "%s %d, but reg count %d only" @%s:%d");
	_panic(""ApplePPM: %s:%u " "clientID %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Client ID : %d registration: callPlatformFunction failed. error 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client ID %u registration: admission check failed. error 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client IOPORT registration: admission check failed. error 0x%08x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "key %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "ApplePPMCPMS: Could not register client id %d. Error code 0x%8x\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "could not get properties for clientid %s, subclient %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "CPU power profile wrong! total(%d, %d, %d), leftover(%d, %d, %d), max(%d, %d, %d), profile(%d, %d, %d)" @%s:%d",);
	_panic(""ApplePPM: %s:%u " "clientID %d, min %d, max %d\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Couldn't add object for client id %u in collection" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Unexpected state. Object not found for id %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "CPMSTimeScale %d fallback object allocation failed" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Failed to read %s table" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Temp range %u not a multiple of row dim %u\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "SOC range %u not a multiple of col dim %u\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unknown timescale %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client %d, handle %d (effort)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "client %d, handle %d (output)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "count %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "setPreThrottleTable failed, error: 0x%x" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unknown input source %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "rowIndex %u rowSize %u" @%s:%d");
	_panic(""ApplePPM: %s:%u " "columnIndex %u columnSize %u" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unexpected CLPC budget request, %d timescales" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "no client defined for budget list for uniqueId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "no client defined for power list for uniqueId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "duplicate clients property entries for uniqueId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM clients property missing from EDT" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM client_powers property missing from EDT" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM client_budgets property missing from EDT" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM client_powers_extra property missing from EDT (clients_extra is present)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "PPM client_budgets_extra property missing from EDT (clients_extra is present)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "failed to add new entity" @%s:%d");
	_panic(""ApplePPM: %s:%u " "failed to add entity to entityList" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "budget update failure" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "failed to update entity" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "failed to update entity" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "NULL matchingDict for AppleSMCInterface" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "couldn't find %s\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "%s: Failed to add command gate to workloop\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "could not get properties for clientid %u" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "unknown policy type %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "num_updates %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "powerBudget->powerLevels[0].timescale is %d and is not equal to the enum value of 1s - %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "powerBudget->numberOfTimeScales is %d and is not equal to 1" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Invalid clientId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Invalid clientId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Invalid clientId %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "failed to add entity to entityList" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "clientID %d, min %d, max %d\n" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "No support for sending budget limits to userspace clients" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "setSystemCapability failed" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "power servo count %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "power servo count %d" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "ASSERT failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "total power profile wrong! (%d, %d, %d)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "entity %d power profile wrong! (%d, %d, %d)" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Non-zero channel count required" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePPM: %s:%u " "Do not call single-channel method on multichannel reporter" @%s:%d");
	_panic(""ApplePPM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""%s: invalid method: %u\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s:  sourceSpace=%d, sourceRange=%d, " "destSpace=CSCData_Space_RGB, " "destRange=CSCData_Range_Full, " "accessibility=CSCData_Accessibility_Identity, " "Variant=CSCData_Variant_Normal\n" @%s:%d");
	_panic(""%s: PROGRAM ERROR: Invalid register group: %u\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid HW plane: %d\n" @%s:%d");
	_panic(""%s: PROGRAM ERROR: Invalid register group: %u\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid HW plane: %d\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid iCLA: %d\n" @%s:%d");
	_panic(""%s: unexpected DeReGamma value: %d" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid HW plane: %d\n" @%s:%d");
	_panic(""%s: PROGRAM ERROR: Invalid register group: %u\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid HW plane: %d\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid iCLA: %d\n" @%s:%d");
	_panic(""%s: PROGRAM ERROR: commands submitted (%u) less than the number " "of commands completed by hardware (%u)\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: mpApiodma=%p, mpPacketSequenceBufDescriptor=%p\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""PROGRAM ERROR: %s: Failed to initialize sequence buffer: %p\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s, Line=%d: PROGRAM ERROR. " @%s:%d");
	_panic(""Missing CSC Matrix: sourceSpace=%d, sourceRange=%d, " "destSpace=%d, destRange=%d, accessibility=%d, variant=%d\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s enableDeviceClock() failed: 0x%x\n" @%s:%d");
	_panic(""%s enableDevicePower() failed: 0x%x\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: Same request enqueued twice %p\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: Scaler %d selected while running\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: HAL SCALER %d NOT EQUAL TO REQUEST %p SCALER NUMBER %d\n" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid HW plane: %d\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""PROGRAM ERROR: Invalid iCLA: %d\n" @%s:%d");
	_panic(""Missing CSC Matrix: sourceSpace=%d, sourceRange=%d, " "destSpace=%d, destRange=%d, accessibility=%d, variant=%d\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s:  sourceSpace=%d, sourceRange=%d, " "destSpace=CSCData_Space_RGB, " "destRange=CSCData_Range_Full, " "accessibility=CSCData_Accessibility_Identity, " "Variant=CSCData_Variant_Normal\n" @%s:%d");
	_panic(""%s: invalid method: %u\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: unknown value for colorRange: %d\n" @%s:%d");
	_panic(""%s: unknown value for formatClass: %d\n" @%s:%d");
	_panic(""%s: unexpected value for ITU_VARIANT: %d\n" @%s:%d");
	_panic(""%s: error when cleaning AppleM2ScalerCSCDriverFilters: 0x%x" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s, Line=%d: Program error\n" @%s:%d");
	_panic(""Program error: %s, Line=%d\n" @%s:%d");
	_panic(""%s, line=%d: PROGRAM ERROR: Invalid address format: %d\n" @%s:%d");
	_panic(""%s: line=%d: PROGRAM ERROR\n" @%s:%d");
	_panic(""%s, Line=%d, Program Error" @%s:%d");
	_panic(""%s, Line=%d: Program error\n" @%s:%d");
	_panic(""CM must be enabled before Gamma LUT is written" @%s:%d");
	_panic(""%s, Line=%d, Program Error" @%s:%d");
	_panic(""SYSTEM ERROR: %s, Line=%d: ARM FUNCTION NOT FOUND\n" @%s:%d");
	_panic(""%s: can't abort thread %u!" @%s:%d");
	_panic(""%s user client call to K2K method!" @%s:%d");
	_panic(""%s is only called from user space!" @%s:%d");
	_panic(""%s user client call to K2K method!" @%s:%d");
	_panic(""%s must only be called from user space!" @%s:%d");
	_panic(""%s: line=%d: PROGRAM ERROR\n" @%s:%d");
	_panic(""write request out of bounds of register map: offset=0x%x, aperture=0x%llx\n" @%s:%d");
	_panic(""%s: Unsupported packet version %d\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: mCommandsSubmitted=%u\n" @%s:%d");
	_panic(""%s: Address bounds err in APIODMA" @%s:%d");
	_panic(""%s: APIODMA Sequence FIFO overflow" @%s:%d");
	_panic(""%s: APIODMA command parse error" @%s:%d");
	_panic(""PROGRAM ERROR: %s: Could not allocate base " "register for sequence buffer" @%s:%d");
	_panic(""%s: Out of system memory!\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s: sequence buffer register type" " %s, capacity (%u) exceeded\n" @%s:%d");
	_panic(""%s: packet version %d not supported.\n" @%s:%d");
	_panic(""%s: PROGRAM ERROR: Context resume could not find sequence buffer to reset \n" @%s:%d");
	_panic(""%s: error detected on AXI bus.\n" @%s:%d");
	_panic(""%s: Address bounds err in APIODMA" @%s:%d");
	_panic(""%s: APIODMA Sequence FIFO overflow" @%s:%d");
	_panic(""%s: APIODMA command parse error" @%s:%d");
	_panic(""%s: line=%d: PROGRAM ERROR\n" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""%s: wrong value passed %d" @%s:%d");
	_panic(""%s, %d Program error detecting SOC version for HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing WDMA Control HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing RDMA Control HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Prescaler Control HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing ASE Control HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Compressed Tile HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Internal Pipe HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Color Manager HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Dither HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Src/Dst Config HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing CSC HAL\n" @%s:%d");
	_panic(""%s, %d Program error initializing Scaling Control HAL\n" @%s:%d");
	_panic(""%s, Line=%d: Program error\n" @%s:%d");
	_panic(""%s, Line=%d, Program Error" @%s:%d");
	_panic(""IMPLEMENTATION ERROR: %s" ": unhandled run time property type: undefined behavior!" @%s:%d");
	_panic(""%s Failed to allocate null driver return data structure\n" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""scaler request not found for fence signal" @%s:%d");
	_panic(""IMPLEMENTATION ERROR: %s" ": unhandled run time property type: undefined behavior!" @%s:%d");
	_panic(""Invalid scaler number %d in %s, Line=%d\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d\n" @%s:%d");
	_panic(""%s, %s(%d): Default chroma coeffsProgram Error\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: Powered down MSR while it is running\n" @%s:%d");
	_panic(""%s, Line=%d: program error\n" @%s:%d");
	_panic(""Program error: %s, Line=%d\n" @%s:%d");
	_panic(""%s called with %s" @%s:%d");
	_panic(""%s, line=%d: PROGRAM ERROR: Invalid address format: %d\n" @%s:%d");
	_panic(""%s Source base address not 16-bit aligned\n" @%s:%d");
	_panic(""%s, Line=%d: program error\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d\n" @%s:%d");
	_panic(""%s: NULL client or driver passed" @%s:%d");
	_panic(""%s Line=%d Program Error\n" @%s:%d");
	_panic(""%s, Line=%d: Program error\n" @%s:%d");
	_panic(""%s System error: Mismatched data size\n" @%s:%d");
	_panic(""PROGRAM ERROR: %s, %s(%d)\n" @%s:%d");
	_panic(""%s, Line=%d, Program Error" @%s:%d");
	_panic(""%s: line=%d: PROGRAM ERROR\n" @%s:%d");
	_panic(""%s: getRatiosCount() > MAX_RATIOS_COUNT: %d > %d" @%s:%d");
	_panic(""%s: trying to overwrite read-only coefficients" @%s:%d");
	_panic(""PROGRAM ERROR: %s, Line=%d: MMR API params not supported\n" @%s:%d");
	_panic(""%s: ERROR: entry is not in the pool\n" @%s:%d");
	_panic(""%s: no default action for argument %u!" @%s:%d");
	_panic(""%s: argument queue not empty!" @%s:%d");
	_panic(""%s, Line=%d: program error\n" @%s:%d");
	_panic(""%s called with %s" @%s:%d");
	_panic(""%s Source base address not 32-bit aligned\n" @%s:%d");
	_panic(""%s called with %s" @%s:%d");
	_panic(""failed to lock netif, status = 0x%08x\n" @%s:%d");
	_panic(""H11ANEIn::%s: %llx returns: %llx, current value: %llx , cache value: %llx\n" @%s:%d");
	_panic(""overflow detected\n" @%s:%d");
	_panic(""Invalid DART page size\n" @%s:%d");
	_panic(""ANE%d:%s fANEVersion is not set!" @%s:%d");
	_panic(""ANE%d:%s :ERROR: H11ANEIn : ANE power left ON when no clients connected!\n" @%s:%d");
	_panic(""H11ANEIn::ANE Timeout panic\n" @%s:%d");
	_panic(""ANE failed to power up properly" @%s:%d");
	_panic(""ANE%d:%s: Could not allocate 0x%08zx bytes of memory for logging database\n" @%s:%d");
	_panic(""IOUSBDeviceController::hardwareException: Type: 0x%08x %s" @%s:%d");
	_panic(""failed to append device capability descriptor, totalLength: %d, bLength: %d\n" @%s:%d");
	_panic(""Invalid maxPacketSize" @%s:%d");
	_panic(""Invalid state %d\n" @%s:%d");
	_panic(""Data packet not expected in the current state - %d\n" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""%s::%s[%u] Error: Invalid queue Entry\n" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""no _faultReporter\n" @%s:%d");
	_panic(""bufout overflow! %s %u\n" @%s:%d");
	_panic(""buf overflow! %s %u\n" @%s:%d");
	_panic(""bufout overflow! %s %u\n" @%s:%d");
	_panic(""buf overflow! %s %u\n" @%s:%d");
	_panic(""bufout overflow! %s %u\n" @%s:%d");
	_panic(""buf overflow! %s %u\n" @%s:%d");
	_panic(""bufout overflow! %s %u\n" @%s:%d");
	_panic(""buf overflow! %s %u\n" @%s:%d");
	_panic(""%s" @%s:%d");
	_func_fffffff008c1d77c(0 ,"IOCTL calls will trigger a panic. wlan.fPanicOnIOCTL=%d.\n");
	_panic(""No _faultReporter" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""reportTransmitStatus with info struct not supported for this mode" @%s:%d");
	_panic(""TxStatus reported without mbuf" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.postmessage",SP + 0x2c,0x4);
	_panic(""kev_post_msg failure" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IOCTL %d" @%s:%d");
	_panic(""%s - %s <= 0!" @%s:%d");
	_panic(""%s - %s > INT_MAX / sizeof(%s)!" @%s:%d");
	_panic(""%s was called out of config locked context!" @%s:%d");
	_panic(""%s was called out of locked context!" @%s:%d");
	_panic(""%s was called out of config locked context!" @%s:%d");
	_panic(""%s - %s <= 0!" @%s:%d");
	_panic(""%s - %s > INT_MAX / sizeof(%s)!" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""reportTransmitStatus with info struct not supported for this mode" @%s:%d");
	_panic(""TxStatus reported without mbuf" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.postmessage",SP + 0x2c,0x4);
	_panic(""kev_post_msg failure" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""IO80211VirtualInterface requires a peerManager\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IO80211Buffer use-after-free detected!\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""LogManager::allocateQueueNode: firstQueueNode->refCnt = %u.\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Linkdown debounce timer creating failed\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E(" wlan.panic.postmessage",SP + 0x2c,0x4);
	_panic(""kev_post_msg failure" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""IO80211QueueCall::freeEntry - bogus entry, type %d, entry %p" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.postmessage",SP + 0x60,0x4);
	_panic(""kev_post_msg fail with retries" @%s:%d");
	_panic(""IO80211QueueCall::handleEntry - bogus type %d, entry %p\n" @%s:%d");
	_panic("CLPC: index %lu out of bounds for array of size %lu");
	_panic("CLPC: Unsupported work_interval type = %d");
	_panic("%s:%d Assertion failed: %s : CLPC: init called multiple times for group %llu");
	_panic("CLPC: Bad thread group type %u");
	_panic("CLPC: index %lu out of bounds for array of size %lu");
	_panic("CLPC: bad chain type %u");
	_panic("CLPC: Unsupported work_interval type = %d");
	_panic("CLPC: Bad thread group type %u");
	_panic("CLPC: Unsupported work_interval type = %d");
	_panic("%s:%d Assertion failed: %s : bad limiter info?");
	_panic("CLPC: Called function on invalid thread group.");
	_panic("%s:%d Assertion failed: %s : failed to enable %s");
	_panic("%s:%d Assertion failed: %s : failed to enable %s sampler");
	_panic("%s:%d Assertion failed: %s : failed to disable %s");
	_panic("%s:%d Assertion failed: %s : failed to enable %s sampler");
	_panic("CLPC: Called function on invalid thread group.");
	_panic("CLPC: Unsupported work_interval type = %d");
	_panic("CLPC: Called function on invalid thread group.");
	_panic("%s:%d Assertion failed: %s : failed to enable core perf counter sampler");
	_panic("%s:%d Assertion failed: %s : failed to enable uncore perf counter sampler");
	_panic("CLPC: Called function on invalid thread group.");
	_panic(""dup" @%s:%d");
	_panic(""t1 >= 0" "%8s failed loops %d coef %d mse*1000 %lld t0*100 %lld t1*100 %lld fuse 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x version %d\n" @%s:%d",);
	_panic(""ApplePMGR: %s:%u " "Unknown sensor type %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "MatrixID %d MatrixVersion %d num_voltage ROT/ROV %d num_voltage VDD %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "[%d] MatrixID %d MatrixVersion %d MTR_Vdd_Grid %d %d!=1\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "[%d] MatrixVersion %d!= %d!=1 %d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_aneDpeData.energyAccumAccp[%u][%u] = %llu" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_aneDpeData.energyCalcVoltage[%u] = %u" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "ifane-max for freqHz=%llu not found\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_socDpeData[%u].dee.voltTable[%u] = %u" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_socDpeData[%u].lee.voltTable[%u][%u] = %u" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "_waitAPSCPending takes too long exeution time %llu us domain %u apscManSlpStartTsTmp %llu, CurrentTime %llu counter %llu deltaDPE %llu\n" @%s:%d");
	_panic(""ApplePMGR::%s can't access offset 0x%8x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Failed to find entry for %u Hz [tolerance=%u, index=%u]" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "polynomBinary[polynomOrder[%d] == %d] = 0x%x\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "%s Computing fuse 0x%llx 0x%llx 0x%llx 0x%llx 0x%x 0x%x 0x%x 0x%x %d -mr=%d -fr=%d\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "MTR polynom need fuses" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "MTR polynom vector undersized" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""mse<=MTR_MAX_TEMPERATURE_CAL_MSE" "%8s failed loops %d coef %d mse*1000 %lld t0*100 %lld t1*100 %lld fuse 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x version %d\n" @%s:%d",);
	_panic(""loops<=MTR_MAX_SEARCH_LOOP_COUNT" "%8s failed loops %d coef %d mse*1000 %lld t0*100 %lld t1*100 %lld fuse 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x version %d\n" @%s:%d",);
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "IOMalloc failed for MTR matrix!\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Trying to free up a null matrix\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "Incorrect sram state %u n" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "DVC_DONE_ERR :PMGR_VOLMAN_STATUS=0x%08X" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u ASSERT failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMGR: %s:%u " "polynomNb %d, but scale NULL\n" @%s:%d");
	_panic(""ApplePMGR: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Can't find endpoint ID %u for OOL size " "advertisement" @%s:%d");
	_panic(""next_val %u, _trace_buffer->next %u >= _entry_count %lu\n" @%s:%d");
	_panic(""Not supported, use hiloEnable instead" @%s:%d");
	_panic(""Not supported, use hiloDisable instead" @%s:%d");
	_func_fffffff008dc6100(SP + 0xd8,"user client","test panic");
	_panic(""SEP Boot failure, op %u data 0x%08x" @%s:%d");
	_panic(""SEP Boot Failure: ROM failed to ack %s %s: 0x%x" @%s:%d");
	_panic(""SEP Boot Failure: status check 1 failed - 0x%x" @%s:%d");
	_panic(""SEP Boot Failure: ROM failed to ack BootTz0: 0x%x" @%s:%d");
	_panic(""SEP Boot Failure: status check 2 failed - 0x%x" @%s:%d");
	_panic(""Nonce generate replies processed out of order; inactive tag %d " "timeout tag %d" @%s:%d");
	_panic(""Unexpected ep_name 0x%x" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("-sep_panic_mbox_to",0x180,0x1);
	_panic(""target %s appears to be both FastSIM and FPGA" @%s:%d");
	_panic(""Error (%d) capturing sleep ART" @%s:%d");
	_panic(""Error on SEP SLEEP control message (0x%x)" @%s:%d");
	_panic("SEP SLEEP control reply timeout; controlEP Rx queue outstanding: %d; Rx queue latest: 0x%08llX; H/W mailbox message: 0x%08llX\n%s");
	_panic("SEP SLEEP control reply timeout; controlEP Rx queue outstanding: %d; Rx queue latest: 0x%08llX; H/W mailbox error: 0x%08X\n%s");
	_panic(""SEP: postMailbox %p failed: 0x%08x" @%s:%d");
	_panic(""Multiply overflow" @%s:%d");
	_panic("%s\n%s");
	_panic("AppleSEPManager panic for %s: %s\n%s");
	_panic(""Device tree update with SEP status: result = %08x\n" @%s:%d");
	_panic("Unexpected error 0x%x waiting for SEP to power-gate\n%s");
	_panic(""Multiply overflow" @%s:%d");
	_panic("%s\n%s");
	_panic("AppleSEPManager panic for %s: %s\n%s");
	_panic(""Failed to initialize Gigalocker (likely a filesystem issue) - ret 0x%x" @%s:%d");
	_panic(""Error return on ART_LOAD (%x)" @%s:%d");
	_panic(""SEP manifest too large (0x%lx > 0x%lx)" @%s:%d");
	_panic(""Error return on MANIFEST (%x)" @%s:%d");
	_panic(""subclass must override" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP firmware too large. Firmware size: 0x%x; allocated space: 0x%x" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP firmware prepare failed" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""We seem not to support ART or xART" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""We seem not to support ART or xART" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP timebase message failed" @%s:%d");
	_panic(""SEP Boot Failure: SEP fast wake failed" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP boot message send failed" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP Boot Failure: Failed to send %s message to SEPROM" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP Boot Failure: failed to fetch ART from storage" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP Boot Failure: ROM failed to ack LoadSEPART: 0x%x" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP Boot Failure: unexpected status 2:%u" @%s:%d");
	_panic(""SEP Boot Failure: unexpected status 1:%u" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Unknown nonce race state %d" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic("SEP/OS failed to %s at stage %d\n%s");
	_panic(""SEP ROM boot timeout waiting for panic message" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Multiply overflow" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP aborted SLEEP control message" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""failed to allocate SEP shared memory buffer" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic("SEP Panic: %s\n%s");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Multiply overflow" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Multiply overflow" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic("SEP failed to power-gate after 5s\n%s");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Multiply overflow" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Timeout on ART_LOAD" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""Timeout on MANIFEST" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP returned zero-length ART" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""SEP ROM boot panic%s. 0x%s" @%s:%d");
	_panic(""REQUIRE fail: %s @ %s:%u:%s: " @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	_panic(""AppleS5L8940DWI::_waitTransaction timeout for register %x" @%s:%d");
	_panic(""AppleS8000DWI::sendWLED: version: %x is unsupported\n" @%s:%d");
	_panic(" @%s:%d");
	_panic(""CIO close called while there are tunnels open" @%s:%d");
	_panic(""AppleTypeCPhyDisplayPortInterface::free called while there is an open tunnel %d\n" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""Invalid msiVectors value %u on port %u" @%s:%d");
	_panic(""apcie[%u:%s]::%s: %s linksts=0x%08x pcielint=0x%08x%s linkcdmsts=0x%08x (ltssm 0x%x=%s)\n" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""unsupported lane configuration" @%s:%d");
	_panic(""Timeout waiting for hot reset link down" @%s:%d");
	_panic(""%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleSmartBattery: not inside workloop gate" @%s:%d");
	_panic(""failed to add _commandGate to workLoop\n" @%s:%d");
	_panic(""failed to add _timerEventSource to workLoop\n" @%s:%d");
	_panic(""%s:%u: %s(): %s" @%s:%d");
	_panic(""Unrecoverable error in IOAVAsyncEventSource: waitResult=%d, action=%p.\n" @%s:%d");
	_panic(""%s: invalid eventSize(%u) < sizeof(*event)(%u)\n" @%s:%d");
	_panic(""openGate() with no work loop" @%s:%d");
	_panic(""closeGate() with no work loop" @%s:%d");
	_panic(""openGate() with no work loop" @%s:%d");
	_panic(""closeGate() with no work loop" @%s:%d");
	_panic(""AppleUSBAudioStream::WatchdogTimer - no callbacks for a while\n" @%s:%d");
	_panic(""IOSCSIMultiPathedLogicalUnit: freeing lunpath before termination\n" @%s:%d");
	_panic(""%s::%s - currentQueueEntry(%p)->next == NULL.\n" @%s:%d");
	_panic(""%s::%s - currentQueueEntry (%p)->prev == NULL.\n" @%s:%d");
	_panic(""%s::%s - firstEntry(%p)->next == NULL.\n" @%s:%d");
	_panic(""%s::%s - firstEntry (%p)->prev == NULL.\n" @%s:%d");
	_panic(""%s::%s - lastEntry(%p)->next == NULL.\n" @%s:%d");
	_panic(""%s::%s - lastEntry (%p)->prev == NULL.\n" @%s:%d");
	_panic(""%s::%s - fOutstandingCommands = %d, it should always be 0 at free() time.\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - fPendingCommandsCount underflow\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - ScheduleRecovery() command %p is not active!\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - ScheduleRecovery() was called without the lock held!\n" @%s:%d");
	_panic(""%s::%s - Unknown IU\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - HandleRequestForStatus should not be used if the device supports streams!\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - HandleReadReadyIU() should not be used if the device supports streams!\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - HandleWriteReadyIU() should not be used if the device supports streams!\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - data direction should never be %u\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! command %p still in the watch dog fRequestTimer list\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - ExecuteTaskManagementSync() called from the workloop thread\n" @%s:%d");
	_panic(""%s::%s - Unknown abort type\n" @%s:%d");
	_panic(""%s::%s - !!!!! DEBUG !!!!! - should run behind the workloop\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("mipi-panic-on-error",ARG0,0x4);
	_kprintf("%s panicOnError NOT Supported\n");
	_panic(""AppleSynopsysMIPIDSIController::start _sacGenerateFrequencyList failed: %08x" @%s:%d");
	_panic(""%s: Setting up interrupt %d event source failed" @%s:%d");
	_panic(""SWMPR should be disabled but swmpr_state %d, _swmprEnabled %d" @%s:%d");
	_panic(""errors found : ST0 0x%lx ST1 0x%lx" @%s:%d");
	_panic(""%s frequency list count (%d) does not match the number of elements (%d)" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""%s timeout Reg offset 0x%x (status & 0x%08x) %s 0x%08x\n" @%s:%d");
	_panic(""%s: Device Tree missing mipi-top-size property" @%s:%d");
	_panic(""%s: _dsimRegisterTopDefaults array size too small\n" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::start Could not create lock" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::start Not enough information to enable SAC " @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::start AppleARMFunctionSlowAdaptiveClockingAggressor::withProvider() failed" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::start: Failed to create the SAC thread" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::start AppleARMFunctionSlowAdaptiveClockingAggressor::withProvider() LPM failed" @%s:%d");
	_panic(""%s device with LPM doesn't support sac-range SAC\n" @%s:%d");
	_panic(""%s missing lpm SAC information\n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""_dsimInterruptSources > MAX_MIPI_INTERRUPT_COUNT :: %d > %d" @%s:%d");
	_panic(""SWMPR interrupt not defined. _dsimInterruptSources < SWMPR_INTERRUPT_INDEX :: %d < %d" @%s:%d");
	_panic(""_dsimInterruptSources * sizeof(uint32_t)) != tmpData->getLength() :: %d bytes != %d bytes" @%s:%d");
	_panic(""swmpr-memory-index not found on device supporting SWMPR" @%s:%d");
	_panic(""SWMPR memory map not defined on a device supporting SWMPR" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""AppleSynopsysMIPIDSIController::enableInterfaceGated : MIPI PLL Failed to lock: 0x%08x" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Inconsistent state _swmprEnabled %d, kSWMPR_ENABLE 0x%x \n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Inconsistent state _swmprEnabled %d, kSWMPR_ENABLE 0x%x \n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Inconsistent state _swmprEnabled %d, kSWMPR_ENABLE 0x%x \n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Inconsistent state _swmprEnabled %d, kSWMPR_ENABLE 0x%x \n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Enabling SWMPR when its already enabled" @%s:%d");
	_panic(""Disabling SWMPR when its already disabled" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Timing out on DMM Exit. Waited %d s. kSWMPR_INTERRUPT_AP:0x%x" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Timing out on commit. Waited %d s. kSWMPR_INTERRUPT_AP:0x%x" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""_dsimSACDivisor == 0\n" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::_sacGenerateFrequencyList: failed to generate any valid frequencies" @%s:%d");
	_panic(""_dsimSACDivisor == 0\n" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::_sacGenerateFrequencyList: kSACMaxFrequencyCount exceeded" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController::_sacGenerateFrequencyList: unsupported SAC Version (%d)" @%s:%d");
	_panic(""AppleSynopsysMIPIDSIController:_leaveAPIFunction usage count < 0" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""SWMPR FIFO not empty kSWMPR_MIPI_STATUS 0x%x, MipiRegWrFifoOccupancy 0x%x, Active %d/n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""unlocked too many times _swmprUsageCount %d\n" @%s:%d");
	_panic("%s:%u: REQUIRE failed: %s  ");
	_panic(""Could not get GPS to wake up after %u tries\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("chg-panic-err",0x1bf,0x1);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("chg-panic-disable",0x1c0,0x1);
	_panic(""failed to write WASF key: (filterNonMtpAddresses = 0x%x)" @%s:%d");
	_panic(""hw error pending: (status 0x%llx) this=0x%llx" @%s:%d");
	_panic(""fw error pending: %d (status 0x%llx) this=0x%llx" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""clock-mask needs to be defined in the devicetree" @%s:%d");
	_panic(""phyGoOnBus was called when powered off" @%s:%d");
	_panic(""%s::%s fifo-depth not provided in device-tree\n" @%s:%d");
	_panic(""%s::%s fifo-depth IORegistry property was %ld, less than kFifoOffsetEnd %d\n" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s::%s unable to find a free FIFO for endpoint 0x%02lx\n" @%s:%d");
	_panic(""count not allocate SG endpoint instance" @%s:%d");
	_panic(""clock-mask needs to be defined in the devicetree" @%s:%d");
	_panic(""phyGoOnBus was called when powered off" @%s:%d");
	_panic(""secondaryMemory:%p" @%s:%d");
	_panic(""no secondary memory" @%s:%d");
	_panic(""failed to create MD from address 0x%llx" @%s:%d");
	_panic(""failed to create visible memory" @%s:%d");
	_panic(""%s: '%s' (%u) Unexpected message from IOP (msg: %#llx)" @%s:%d");
	_panic(""%s: '%s' (%u) Incompatible protocol version: iop=%#08x kext=%#08x" @%s:%d");
	_panic(""ringbuffer abort at %s:%d" @%s:%d");
	_panic(""%s: '%s' (%u) Incompatible protocol version: iop=%#08x kext=%#08x" @%s:%d");
	_panic(""%s: '%s' (%u) Unexpected message from IOP (msg: %#llx)" @%s:%d");
	_panic(""Could not find EPIC for command" @%s:%d");
	_panic(""%s(%s): %s: Unsupported packet category (%#x)" @%s:%d");
	_panic(""%s::%s(requestState=%d, replyState=%d) should not be called without owning workloop" @%s:%d");
	_panic(""%s::%s(), should not be called without owning the workloop" @%s:%d");
	_panic(""ringbuffer abort at %s:%d" @%s:%d");
	_panic(""%s: queueRef:%p and queue:%p should be NULL" @%s:%d");
	_panic(""%s: magic check failed - observed %04x,expected %04x" @%s:%d");
	_panic(""%s: _rdptr=%u, _endptr=%u" @%s:%d");
	_panic(""%s: size=%lu, capacity=%u" @%s:%d");
	_panic(""%s: _rdptr=%u, _endptr=%u" @%s:%d");
	_panic(""%s, Could not cast newService: %p to CommonAVVideoInterface\n" @%s:%d");
	_panic(""IOTextCrypter::decryptPage: no session!" @%s:%d");
	_panic(""IOTextCrypter::endCryptSession: no session!" @%s:%d");
	_panic(""AppleFairplayTextCrypter::sessionDidEnd(): no session!" @%s:%d");
	_panic(""assertion failed %s:%u" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("pmp-disable-energy-panic",SP + 0xc,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("pmp-msg-queue-panic",SP + 0xc,0x4);
	_panic(""ApplePMPFirmware: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""Variable write size (%ld) does not match patch variable size(%d)" @%s:%d");
	_panic(" @%s:%d");
	_panic(""%s[%p]::closeGated failed" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	_panic(""Timeout waiting for AES accelerator service" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	_panic(""Invalid crypto hash method: %d" @%s:%d");
	_panic("%s:%u: REQUIRE failed");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("spmi-fault-panic",SP + 0x1c,0x4);
	_IOLog("%s[%s]:%d: Dumping SPMI registers before panicing\n\n");
	_panic(""%s" @%s:%d");
	_panic("msg @%s:%d");
	_panic(""null context" @%s:%d");
	_panic(""no memory" @%s:%d");
	_panic(""null context" @%s:%d");
	_panic(""unsupported request %d" @%s:%d");
	_panic(""unexpected wakeup reason 0x%x" @%s:%d");
	_panic(""Failed to read s_key (%d)." @%s:%d");
	_panic(""failed to cast value %s" @%s:%d");
	_panic(""unexpected length" @%s:%d");
	_panic(""failed to invalidate cache" @%s:%d");
	_panic(""device state call is not gated" @%s:%d");
	_panic(""no SEP endpoint" @%s:%d");
	_panic(""sks request timeout (%d strikes)" @%s:%d");
	_panic(""Failed to sep->allocateVisibleMemory() for OOL send Buffer" @%s:%d");
	_panic(""Failed to sep->allocateVisibleMemory() for OOL recv Buffer" @%s:%d");
	_panic(""Failed endpoint->setReceiveOOLBuffer() for SEP" @%s:%d");
	_panic(""Failed endpoint->setSendOOLBuffer() for SEP (ret=%x)" @%s:%d");
	_panic(""Failed to initialize SEP" @%s:%d");
	_panic(""set_env failed" @%s:%d");
	_panic(""Failed to read effaceable." @%s:%d");
	_panic(""Failed to write effaceable." @%s:%d");
	_panic(""Failed to save s_key" @%s:%d");
	_panic(""invalid pub key" @%s:%d");
	_panic(""failed to add entropy to kernel prng" @%s:%d");
	_panic(""REQUIRE" @%s:%d");
	_panic(""failed to encode" @%s:%d");
	_panic(""corrupted state?" @%s:%d");
	_panic(""Unknown message: %#llx" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("pmp-msg-timout-panic",SP + 0xc,0x4);
	_panic(""Unknown message: %#llx" @%s:%d");
	_panic(""ApplePMP: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""ApplePMPUserClient: %s:%u REQUIRE failed: %s" @%s:%d");
	_panic(""%s::%s failed to access EDT ARM function" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x CMD %#x(%s)" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x CMD %#x(%s)" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x CMD %#x(%s)" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCNP %s error: INTSTS 0x%08x ADDR %#llx CMD/AID/TID/SIZ %#x(%s)/%#x/%#x/%#x" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x INFO CA/AF0/AF1 %#x/%#x/%#x ADDR %#llx CMD/AID/TID %#x(%s)/%#x/%#x WAY/SIZE %#x/%#x" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x TAG_PAR_ERR_LOG0=%#x TAG_PAR_ERR_LOG1=%#x" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x INFO CA/ST/DT/AF %#x/%#x/%#x/%#x ADDR %#llx CMD/AID/TID %#x(%s)/%#x/%#x" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x ** UNIDENTIFIED SOURCE **" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x INFO CA/DT/AF %#x/%#x/%#x ADDR %#llx CMD/AID/TID %#x(%s)/%#x/%#x WAY/DT/ST %#x/%#x/%#x" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x ECCMULTIBITSERRLOG(Bank/Way/Entry) %#x(%#x/%#x/%#x)" @%s:%d");
	_panic(""AMCC PLANE%d %s error: INTSTS 0x%08x ECCONEBITERRLOG(Bank/Way/Entry/BitOff) %#x(%#x/%#x/%#x/%#x) ERRBITCNT %#x" @%s:%d");
	_panic(""DCS CHANNEL%d %s error: INTSTS 0x%08x" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to get PLANE0%d register map" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to get PLANE%d debug register map" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to get PLANE%d dsid register map" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: Unable to register DCS[%d] interrupt" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler: Failed to clear timeout error on plane %d\n" @%s:%d");
	_panic(""SEP Memory Protection Module error" @%s:%d");
	_panic(""Unhandled AMCC Error: NP:%08x/%08x %s " @%s:%d");
	_panic(""AMCC PLANE%d: Deprioritize on DSID %d isn't completed\n" @%s:%d");
	_panic(""AMCC PLANE%d: De-prioritize request on dsid %u is invalid\n" @%s:%d");
	_panic(""SEP monitor error: MON_ERROR_STATUS 0x%08x(%s) MON_CPM_STATUS 0x%08x(%s) SEPCLK_DFREQ_MON_MEAS 0x%08x NCLK_DFREQ_MON_MEAS 0x%08x BOOT_NUMBER 0x%08x THERMAL 0x%08x SNOOP1 0x%08x SOC_PERF_STATE_CTL 0x%08x VOLMAN_SOC_VOLTAGE 0x%08x" @%s:%d",);
	_func_fffffff0081e3aa8(,0xfffffff009f29e18,0 ,"AppleT8030MemCacheController::start:Unable to locate panic memory");
	_kprintf("%s:%d: AppleT8030MemCacheController::start:Unable to locate panic memory\n");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:illegal pram range: base=%llx bytes=%llx" @%s:%d");
	_panic(""AppleT8030MemCacheController::_mccSelectDynamicDRAMCFGMode requested mode %u\n" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::_mccSelectDynamicCacheMode:requested mode %u but max config count is %u!" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::_mccSelectDynamicPowerGateMode: requested mode %u\n" @%s:%d");
	_panic(""%s:%d: " "_mccSamplePerfCounter id %u > %u!" @%s:%d");
	_panic(""Unexpected dsid count %d data stream %s\n" @%s:%d");
	_panic(""AppleT803xIO::start: can't find 'function-clock_gate', update Device Tree" @%s:%d");
	_panic(""AppleT803xIO::start: can't find 'function-power_gate', update Device Tree" @%s:%d");
	_panic(""AppleT803xIO::start: can't create AppleARM64ErrorHandler" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to get AMCNP register map" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to get DCS register map" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to create commandgate" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to create InterruptEventSource\n" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: Unable to register SEP MPM interrupt" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: Unable to register SEP CPM interrupt" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to add interrupt event source to workloop\n" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: failed to add commandgate to workloop event source" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::start: super start failed" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler: DSID timeout interrupt without any StickNR DSIDs\n" @%s:%d");
	_panic(""AppleT8030PlatformErrorHandler::_mccStarted: Failed to allocate %lu bytes\n" @%s:%d");
	_panic("AppleT8030PlatformErrorHandler::%s:%u: REQUIRE failed");
	_panic(""Unhandled DCS Error: %s " @%s:%d");
	_panic("AppleT8030PlatformErrorHandler::%s:%u: REQUIRE failed");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:failed to get AMCC Non Plane register map" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start: failed to get AMCC PLANE register map" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:failed to get DCS register map" @%s:%d");
	_panic(""Failed to allocate memory for DRAM config. Channel count: %d\n" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:failed to find config-data in DT mode" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:no pram service" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:no pram range" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::start:pram length %d expected %d" @%s:%d");
	_panic(""%s:%d: " "way_count greater than kT8030MCC_MAX_WAY_ON_CNT\n" @%s:%d");
	_panic(""%s:%d: " "AppleT8030MemCacheController::_mccSelectDynamicCacheMode: way_count greater than kT8030MCC_MAX_WAY_ON_CNT\n" @%s:%d");
	_panic(""Assert failed: %s" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""workqueue thread start function pointer is NULL" @%s:%d");
	_panic("__func__ ": thread_set_wq_state failed: %d" @%s:%d");
	_panic(0xfffffff009f4b810);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""ksyn_wait continuation returned" @%s:%d");
	_panic(0xfffffff009f4b810,);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""kw_turnstile still non-null upon release" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""adding enqueued item to another queue" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""removing item from empty queue" @%s:%d");
	_panic(""removing item from wrong queue" @%s:%d");
	_panic(""CV:entries in queue durinmg reinit %d:%d\n" @%s:%d");
	_panic(""ksyn_mtxsignal: panic signaling empty queue" @%s:%d");
	_panic(""ksyn_signal: panic signaling non-waiting element" @%s:%d");
	_panic(""ksyn_signal: panic waking up thread %x\n" @%s:%d");
	_panic(""ksyn_signal: panic signaling empty queue" @%s:%d");
	_panic(""ksyn_queue_find_signalseq(): unknown wait queue element type (%d)\n" @%s:%d");
	_panic(""unknown kwe state\n" @%s:%d");
	_panic(""failed to allocate kwe\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""unknown kwe state\n" @%s:%d");
	_panic(""psync_cvwait: unexpected wait queue element type\n" @%s:%d");
	_panic(""rwunlock: invalid type for lock grants" @%s:%d");
	_panic(""kwq_handle_unlock: writer pending but no writebit set %x\n" @%s:%d");
	_panic(""pth_proc_hashinit: hash init returned 0\n" @%s:%d");
	_panic(0xfffffff009f4b810);
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(0xfffffff009f4b810);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""failed to lock netif, status = 0x%08x\n" @%s:%d");
	_panic(""can't validate modified node %p (oid:%llu, xid:%llu)" " of fs %p (%llu). imo xid: %lld" @%s:%d");
	_panic(""root volume seal is broken %p\n" @%s:%d");
	_panic(""Cannot install APFS device switch - got %d\n" @%s:%d");
	_panic(""Why did %p gave me extent %lld @ %lld for LBA %lld?\n" @%s:%d");
	_panic(""vp %p has type %d which is NOT right (orig_vp %p crypto %p crypto->owner %p)\n" @%s:%d");
	_panic(""nx_buf_bread: write not allowed! \n" @%s:%d");
	_panic(""can not do encrypted i/o with a null cpx! crypto state %p\n" @%s:%d");
	_panic(""Verification [(" "dev_state_is_set(dev, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "==" " (" "0" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "tmp" ") " "<" " (" "dev->dv_num_slice" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "first_blk" ") " "<=" " (" "last_blk" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_state_is_set(dev, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "==" " (" "0" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_state_is_set(dev, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "==" " (" "0" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "num_slice_chunk" ") " "<=" " (" "num_chunk" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "num_slice_chunk" ") " "<" " (" "4294967295U - num_cib_chunk" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dist" ") " "!=" " (" "4294967295U" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "bit_pos" ") " ">=" " (" "0" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "aggr_two_dev_state_is_set(ad, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "<" " (" "2" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "aggr_two_dev_state_is_set(ad, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "<" " (" "2" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "aggr_two_dev_state_is_set(ad, SM_STATE_CONSTR)" ") " "==" " (" "1" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Verification [(" "dev_idx" ") " "<" " (" "2" ")] failed: lo=%lld ro=%lld\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""HW CRYPTO: [media unwrap]: CP_RAW_KEY_WRAPPEDKEY is NOT set" @%s:%d");
	_panic(""HW CRYPTO: [unwrap]: CP_RAW_KEY_WRAPPEDKEY is NOT set" @%s:%d");
	_panic(""HW CRYPTO: [create]: CP_RAW_KEY_WRAPPEDKEY is NOT set" @%s:%d");
	_panic(""HW CRYPTO: [unwrap]: CP_RAW_KEY_WRAPPEDKEY is " "NOT set" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("apfs_corruption_panics",0xfffffff009f4c060,0x4);
	_panic(""%s:%u: apfs corruption detected\n" @%s:%d");
	_panic(""Namedstream parent's vnode pointer (%p) different than what it is suppossed to be (%p)\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""private id 0 for ino %p\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""buf_map failed with error %d for bp %p" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""buf_map failed with error %d for bp %p" @%s:%d");
	_panic(""Data hash mismatch for %zd bytes at offset %lld in %sdata stream %lld of inode %lld: expected %s @ %p, got %s @ %p, data %p\n" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""ino %lld: fs_map_file_offset() returned %lld:%lld (%lld) but that does not cover %lld:%lld (map_flags 0x%x; dstream %lld/%lld\n" @%s:%d");
	_panic(""attempt to write block zero on xattr io!\n" @%s:%d");
	_panic(""Cannot read outside of the given extent: ino %llu, addr %llu not in extent %llu:+%llu @ %llu\n" @%s:%d");
	_panic(""xattr %p changed from embedded but did not update namedstream inode\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""we should never reclaim the xattr io vnode unless we are unmounting! (apfs %p, xattr_io_vnode %p)\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""Invalid state for namedstream inode %p" @%s:%d");
	_panic(""%s : Recursive exclusive lock attempt" @%s:%d");
	_panic(""xattr changed without updating namedstream vnode\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""xattr context not set up for getxattr" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""apfs_vnop_verify for ino %p failed for volume %s @ %s, error %s (%d)\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic("__func__" doesn't support the resource fork" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""decmpfs_pagein_compressed: couldn't ubc_upl_map a single page\n" @%s:%d");
	_panic(""%s : Recursive exclusive lock attempt" @%s:%d");
	_panic(""%s : Downgrading to shared but lock not held in exclusive" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "empty file %llu enqueued\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "file %lld is enqueued for upgrade of data protection " "class but its state object is missing\n" @%s:%d");
	_panic(""apfs_get_firmlink_target_vnode failed with error %d, volume %s, device %s\n" @%s:%d");
	_panic(""error is 0 but drec is NULL" @%s:%d");
	_panic(""Found directory entry but could not get inode 1024 times for dvp %p and %s" @%s:%d");
	_panic(""cache_lookup returned -1 but did not return vnode" @%s:%d");
	_panic(""Found directory entry but inode %p has has iflags 0x%llx 1024 times for dvp %p and %s" @%s:%d");
	_panic(""inode returned from vnode_getfirmlink has JI_DELETED set iflags: %llx\n" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""cannot get iocount %d\n" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""cannot get mapping's ek %llu, %d\n" @%s:%d");
	_panic(""dedupe mapping uses inode's key" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""failed %d: ""fext_iterator_next(snk_iter)" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""id %llu not in crypto cache" @%s:%d");
	_panic(""ier_assert() failed: %s" @%s:%d");
	_panic(""Zeroing a range of an encrypted file is not implemented\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""assert failed %s" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""you can't have apfs %p w/devt %d mismatched w/ino %lld %d\n" @%s:%d");
	_panic(""assert failed %s" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""assert failed %s" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""%p: root volume seal is broken\n" @%s:%d");
	_panic(""could not authenticate personalized root hash! (%p, %zu)\n" @%s:%d");
	_panic(""APFSX: could not validate root hash %s (%d)\n" @%s:%d");
	_panic(""could not validate root hash %s (%d)\n" @%s:%d");
	_panic(""cannot lock inode on non-content protected volumes" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""unencrypted data volume is not allowed" @%s:%d");
	_panic(""Rooting from the live fs of a sealed volume is not allowed on a RELEASE build\n" @%s:%d");
	_panic(""dedupe_assert() failed: %s" @%s:%d");
	_panic(""couldn't find name from tmp ino %d\n" @%s:%d");
	_panic(""extents must be moved in the same transaction the tmp xattr inode is deleted" @%s:%d");
	_func_fffffff0093a8330("%s:%d: %s nx_panic_on_corruption set to false\n");
	_func_fffffff0093a8330("%s:%d: %s nx_panic_on_corruption restored to %d\n");
	_panic(""Invalid key rolling argument how %d:" @%s:%d");
	_panic(""apfs_lock_io_lock_pair() was called with invalid arguments" @%s:%d");
	_panic(""apfs_lock_inode_lock_pair() was called with invalid arguments" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""found a reserved, non-busy jhash object" @%s:%d");
	_panic(""jhash_getvnode: bad devt on object.\n" @%s:%d");
	_panic(""reserved jhash objects should be busy" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""jhash_insert: apfs object with a zero devt.\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""jhash_try_insert: apfs object with a zero devt.\n" @%s:%d");
	_panic(""cannot insert reserved, un-busy jhash object" @%s:%d");
	_panic(""jhash_swap: apfs object with a zero devt.\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""jhash_removevnode: apfs object with a zero devt.\n" @%s:%d");
	_panic(""can not lock stream-id zero\n" @%s:%d");
	_panic(""bad pext.\n" @%s:%d");
	_panic(""fext %lld (pos %lld len %lld flags %x can not have crypto-id -1\n" @%s:%d");
	_panic(""can't have a negative refcnt on crypto state 0x%llx refcnt %d\n" @%s:%d");
	_panic(""refcnt overflowed on dstream id 0x%llx refcnt %d (delta: %d)\n" @%s:%d");
	_panic(""_fs_add_xattr does not support stream-based xattrs in the kernel\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""invalid crypto id" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""apfs_unlock_phys_range num_locks==0\n" @%s:%d");
	_panic(""apfs_unlock_phys_range lock %d not taken\n" @%s:%d");
	_panic(""apfs_lock_phys_range first_pbn 0, last_pbn 0x%llx\n" @%s:%d");
	_panic(""kind == NEW && refcnt = %d\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""failed to insert ek %llu, %u times" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""map capacity overflow %lu" @%s:%d");
	_panic(""id %llu not in crypto cache" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s cannot be called for namedstream inodes\n" @%s:%d");
	_panic(""res->xid %lld but xid is now %lld\n" @%s:%d");
	_panic(""invalid crypto id %llu" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cannot update ino %llu, %d\n" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "ino %llu invalid class %u\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cannot unwrap ek %llu, %d\n" @%s:%d");
	_panic(""%s:%u: " "cannot rewrap ek %llu, %d\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "ino %llu invalid class %u\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""we asked for %lld blocks but got %lld (orig %lld, blks_this_allocation %lld)\n" @%s:%d");
	_panic(""we asked for %lld blocks but got zero (paddr %lld) from spaceman_alloc() and no error.\n" @%s:%d");
	_panic(""ino %lld illogical file extent %lld:%lld != alloced_size %lld (fsize %lld)\n" @%s:%d");
	_panic(""ino %lld pos:len %lld:%lld fext %lld:%lld (%lld)\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cp_corrupt_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""%s:%u: " "cannot get ekwk ino %llu, id %llu, %d\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""cannot overwrite vek" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""you can't change a key here!  (ekey %p eklen %d; key %p klen %d; n %p bt %p)\n" @%s:%d");
	_panic(""btree_node_child_id_update failed with error: %d\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""apfs_unwrap: invalid key length! (%u)\n" @%s:%d");
	_panic(""apfs_unwrap: invalid iv key length! (%ul)\n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""apfs_crypto_state_init: invalid key length! (%ul) \n" @%s:%d");
	_panic(""apfs_crypto_state_init: invalid iv key length! (%ul) \n" @%s:%d");
	_panic(""%s:%u: cp_assert() failed: %s" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""crypto-id %lld still has refcount %d\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("-apfs_crypto_leak_panics",0 ,0 );
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Crypto hash cache size hit the hard limit (%u)\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""crypto state retain count %d is not valid (crypto-id %lld, apfs %p)\n" @%s:%d");
	_panic(""Unmounting in progress on %p, started by %p" @%s:%d");
	_panic(""obj_cache_lock_by_state, invalid oc_lock_state %d\n" @%s:%d");
	_panic(""obj_cache_unlock_by_state, invalid oc_lock_state %d\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""non-virtual object on virtual object dirty list: oid %lld flags 0x%llx 0x%x\n" @%s:%d");
	_panic(""virtual object on dirty list not dirty: oid %lld flags 0x%llx 0x%x\n" @%s:%d");
	_panic(""non-physical object on physical object dirty list: oid %lld flags 0x%llx 0x%x\n" @%s:%d");
	_panic(""physical object on dirty list not dirty: oid %lld flags 0x%llx 0x%x\n" @%s:%d");
	_panic(""dirty object flush state inconsistent: oid %lld flags 0x%llx 0x%x fl %p\n" @%s:%d");
	_panic(""physical object dirty count underflow\n" @%s:%d");
	_panic(""virtual object dirty count underflow\n" @%s:%d");
	_panic(""Reference count overflowed for object %p!\n" @%s:%d");
	_panic(""Get count overflowed for object %p!\n" @%s:%d");
	_panic(""bad object type in flush list: oid %lld flags 0x%llx 0x%x\n" @%s:%d");
	_panic(""Reference count underflowed for object %p!\n" @%s:%d");
	_panic(""Release count overflowed for object %p!\n" @%s:%d");
	_panic(""Object has no address: o %p oid %llu flags 0x%llx 0x%x paddr %llu naddr %llu\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""can not delete an object w/a non-current xid %lld o == %p\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Reference count overflowed for object %p!\n" @%s:%d");
	_panic(""invalid lock flags: 0x%x\n" @%s:%d");
	_panic(""can't modify o %p on encrypted and locked fs %p\n" @%s:%d");
	_panic(""physical object new address mismatch: oid 0x%llx flags 0x%llx 0x%x type 0x%x/0x%x xid 0x%llx 0x%llx 0x%llx naddr 0x%llx 0x%llx\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""deleted object @ %p can not be dirtied!! (flags: 0x%llx)\n" @%s:%d");
	_panic(""oid 0x%llx flags 0x%llx 0x%x type 0x%x/0x%x object not prepared before dirtying\n" @%s:%d");
	_panic(""obj %p oid 0x%llx flags 0x%llx 0x%x type 0x%x/0x%x dirty object on the free list?!\n" @%s:%d");
	_panic(""new address mismatch on redirty 0x%llx 0x%llx\n" @%s:%d");
	_panic(""invalid unlock flags: 0x%x\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Dirty extent should not have Tenant flag" @%s:%d");
	_panic(""Range (0x%llx,%llu) is intersecting WBC (0x%llx,%llu)\n" @%s:%d");
	_panic(""%s, Reserved space < reserved metadata: %llu < %llu\n" @%s:%d");
	_panic(""reserved metadata space underflow: %lld (%lld)\n" @%s:%d");
	_panic(""Absurd combination of allocation flags for spaceman %llx" @%s:%d");
	_panic(""%s, Reserved space < reserved metadata: %llu < %llu\n" @%s:%d");
	_panic(""reserved metadata space underflow: %lld (%lld)\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""current tx not closed/flushing?!\n" @%s:%d");
	_panic(""not handling the current tx!\n" @%s:%d");
	_panic(""can't transition from tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""bad transition tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""not handling the flushing tx!\n" @%s:%d");
	_panic(""flush phase checkpoint lengths (%d %d) don't match prepare phase (%d %d)\n" @%s:%d");
	_panic(""bad transition tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""bad transition tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""Thread %llx is already in tx, but is trying to enter a transaction without providing the current XID!\n" @%s:%d");
	_panic(""can't transition from tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""bad transition tx flags 0x%x to 0x%x (expected 0x%x)\n" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""how odd... there is nothing at the tail of the dir iterator list yet the count is %d\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""bad xattr vnode context! xattr_dstream_id 0x%llx\n" @%s:%d");
	_panic(""xattr vnode does not exist; so we cannot do any xattr IO\n" @%s:%d");
	_panic(""did not find xattr ctx for xattr %llu to release it!\n" @%s:%d");
	_panic(""didn't find our IO context for xdstream %lld!\n" @%s:%d");
	_panic(""BAD IO CONTEXT %d: NOT IN USE" @%s:%d");
	_panic(""xattr-dstream-obj-id %lld has a hole at offset %lld\n" @%s:%d");
	_panic(""NO XATTR DSTREAM PASSED!" @%s:%d");
	_panic(""offset %lld not found in apfs_xattr_io_ctxes, or wasn't in use\n" @%s:%d");
	_panic(""%s : Recursive exclusive lock attempt" @%s:%d");
	_panic(""null context" @%s:%d");
	_panic(""no memory" @%s:%d");
	_panic(""null context" @%s:%d");
	_panic(""no memory" @%s:%d");
	_panic(""null context" @%s:%d");
	_panic(""AppleUSBXHCI[%p]::%s: port %d in test mode %d" @%s:%d");
	_panic(" @%s:%d");
	_panic(""AppleS8000AESAccelerator::AES Error: IntStatus 0x%#x\n" @%s:%d");
	_IOLog("AppleS8000AESAccelerator: WARNING: DPA is not seeded, but not panicking!\n");
	_panic(""dmaSRC %016llx %p %d" @%s:%d");
	_panic(""dmaDST %016llx %p %d" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleS8000AESAccelerator: AppleS8000AESAccelerator failed to register with IOAESAccelerator" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleS8000AESAccelerator::_enableAES: DPA has not been seeded!" @%s:%d");
	_panic(""AppleS8000AESAccelerator::Wrapped Key Policy is undefined" @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleS8000AESAccelerator::Powering Down AES Block while Commands still in FIFO." @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""AppleS8000AESAccelerator::Powering Down AES Block while Commands still in FIFO." @%s:%d");
	_panic(""%s:%s:%u: REQUIRE failed: %s" @%s:%d");
	_panic(""lockInterfaceStateGated called from non-gated context 0x%08x\n" @%s:%d");
	_panic(""unlockInterfaceStateGated called but thread %p is not the owner %p\n" @%s:%d");
	_panic(""lockInterfaceStateGated called recursively\n" @%s:%d");
	_panic(""Port enable failed %d\n" @%s:%d");
	_panic(""invalid power state: %lu\n" @%s:%d");
	_panic(""Failed to register interest for AMFM" @%s:%d");
	_panic(""failed to open AMFM\n" @%s:%d");
	_panic(""Reset sequence did not finish within %ums" @%s:%d");
	_panic(""%s:%u:" "fResetProgress != kResetStepRequested" @%s:%d");
	_panic(""%s:%u:" "triggerAsyncResetWork(kAppleOLYHALPortInterfaceActionReset) == kIOReturnSuccess" @%s:%d");
	_panic(""%s:%u:" "!fResetProgress" @%s:%d");
	_panic(""%s:%u:" "triggerAsyncResetWork(kAppleOLYHALPortInterfaceActionPrepareOutsideFunctionReset) == kIOReturnSuccess" @%s:%d");
	_panic(""%s:%u:" "fResetProgress == kResetStepBusQuiesced" @%s:%d");
	_panic(""%s:%u:" "triggerAsyncResetWork(kAppleOLYHALPortInterfaceActionReset) == kIOReturnSuccess" @%s:%d");
	_panic(""%s:%u:" "fResetIsInternal" @%s:%d");
	_panic(""%s:%u:" "fOwner && fAction" @%s:%d");
	_panic(""%s:%u:" "params" @%s:%d");
	_panic(""%s:%u:" "!fPendingErrorHandling" @%s:%d");
	_panic(""%s:%u:" "triggerAsyncResetWork(kAppleOLYHALPortInterfaceActionPowerOn) == kIOReturnSuccess" @%s:%d");
	_panic(""%s:%u:" "fOwner && fAction" @%s:%d");
	_panic(""%s:%u:" "triggerAsyncResetWork(kAppleOLYHALPortInterfaceActionReset) == kIOReturnSuccess" @%s:%d");
	_panic(""%s:%u:" "fOwner && fAction" @%s:%d");
	_func_fffffff00953b09c(0x28,"acm_panic_on_sep_response_timeout",SP + 0x80,0x1,0 );
	_panic(""SEP cmd(%u) timeouted after waiting for %u ms for SEP response" @%s:%d");
	_panic(""Failed endpoint->setReceiveOOLBuffer() for SEP: err = 0x%x" @%s:%d");
	_panic(""Failed endpoint->setSendOOLBuffer() for SEP: err = 0x%x" @%s:%d");
	_panic(""%s::%s: bad hex digit (%#x)" @%s:%d");
	_panic(""%s::%s: object %#x bad index %u" @%s:%d");
	_panic(""%s::%s: object %#x, bad type" @%s:%d");
	_panic(""%s::%s: %s: CONTROL (%#x & %#x) != 0" @%s:%d");
	_panic(""%s::%s: %s: %p, %p, %p" @%s:%d");
	_panic(""%s::%s: %s: enableNCO(%u, %#x), _ncoFrequency=%u, failed (%#x)" @%s:%d");
	_panic(""%s::%s: _Switch->enableDeviceClock(%s, %u, %u, %#x), failed" @%s:%d");
	_panic(""%s:%s:%u: %s: %u, %u, %#x, %#x, %#x, %#x\N" @%s:%d");
	_panic(""%s::%s: index %u: cannot map" @%s:%d");
	_panic(""%s::%s: index %u: _virtualAddress is NULL" @%s:%d");
	_panic(""%s::%s: %s: index %u: length %#x vs. count %u, stride %#x" @%s:%d");
	_panic(""%s::%s: %s: enableDeviceClock(%s, %u), failed (%#x)" @%s:%d");
	_panic(?);
	_panic(""%s::%s: %s: bad type %#x, %#x" @%s:%d");
	_panic(""%s::%s: %s: bad mcaNum %#x, %#x" @%s:%d");
	_panic(""%s::%s: %s: bad type %#x, %#x" @%s:%d");
	_panic(""%s:%s: bad boot-arg \"%s=%s\"" @%s:%d");
	_panic(""%s %lu" @%s:%d");
	_panic(""%s::%s: bad direction %#x" @%s:%d");
	_panic(""%s::%s: %s: bad mcaNum %u" @%s:%d");
	_panic(""%s::%s: %s: disable before reset" @%s:%d");
	_panic(""%s::%s: %s: reset SAC fail" @%s:%d");
	_panic(""%s::%s: initWithTargetDataAndSymbol failed" @%s:%d");
	_panic(""%s::%s: %s: ovcnt %u\n" @%s:%d");
	_panic(""%s::%s: %s: bad mcaNum %u" @%s:%d");
	_panic(""%s:%s: non-kClockMCLKTypeFixed as yet unsupported" @%s:%d");
	_panic(""%s::%s: %s: TX is enabled" @%s:%d");
	_panic(""%s::%s: %s: RX is enabled" @%s:%d");
	_panic(""%s::%s: %s: failed" @%s:%d");
	_panic(""%s::%s: %s: cannot create _mcaSwitchDeviceClocks[%u]" @%s:%d");
	_panic(""%s::%s: %s: cannot create _mcaSwitchMCLKs[%u]" @%s:%d");
	_panic(""%s::%s: %s: cannot create _mcaSwitchMCLKOutPins[%u]" @%s:%d");
	_panic(""%s::%s: failed" @%s:%d");
	_panic(""%s::%s: start failed, result %#x" @%s:%d");
	_panic(""%s::%s: failed" @%s:%d");
	_panic(""%s::%s: %s: unknown clock domain for object %#x" @%s:%d");
	_panic(""%s::%s: %s: cannot create AppleARMFunctionMCA2Config [%u]" @%s:%d");
	_panic(""%s::%s: %s: cannot create _mcaSwitchDeviceClocks[%u]" @%s:%d");
	_panic(""%s::%s: %s: bad mcaNum %u" @%s:%d");
	_panic(""%s::%s: cannot setMCLKConfig" @%s:%d");
	_panic(""Mask value not set to enable PCLK reset but TXA channel is active" @%s:%d");
	_panic(""Mask value not set to enable PCLK reset but RXA channel is active" @%s:%d");
	_panic(""PCLK reset feature enable bit not set, even though channel_mask register values are non-zero" @%s:%d");
	_panic(""%s::%s: %s: index %u: cannot map\n" @%s:%d");
	_panic(""%s::%s: %s: index %u: baseAddress is NULL\n" @%s:%d");
	_panic(""%s::%s:%u: _mcaSwitchConfigFunction not yet initialized(" @%s:%d");
	_panic(""%s::%s: bad mclk pin %u" @%s:%d");
	_panic(""%s::%s: bad mclk number %u" @%s:%d");
	_panic(""%s::%s: mclk data bad length %lu" @%s:%d");
	_panic(""%s::%s: syncGen data bad length %lu" @%s:%d");
	_panic(""%s::%s: bad direction %#x" @%s:%d");
	_panic(""%s:%s: no space in Shim" @%s:%d");
	_panic(""%s:%s: bad iisTxBitsPerChannel %#x" @%s:%d");
	_panic(""%s::%s: bad mask %#x" @%s:%d");
	_panic(""%s::%s: increase kMaximumChannelNameLength (%d)\n" @%s:%d");
	_panic(""%s::%s: bad mask %#x" @%s:%d");
	_panic(""%s::%s:%u: enableDeviceClock failed (%#x)" @%s:%d");
	_panic(""%s::%s:%u: enableDeviceClock(%s) failed" @%s:%d");
	_panic(" @%s:%d");
	_panic(""No space for events\n" @%s:%d");
	_panic(" @%s:%d");
	_panic(""psNode != NULL" @%s:%d");
	_panic(""psNode->psPrev != NULL" @%s:%d");
	_panic(""psNode->psNext != NULL" @%s:%d");
	_panic(""psNode != NULL" @%s:%d");
	_panic(""psNewNode != NULL" @%s:%d");
	_panic(""psNode->psPrev != NULL" @%s:%d");
	_panic(""psNode->psNext != NULL" @%s:%d");
	_panic(""psNode != NULL" @%s:%d");
	_panic(""psNewNode != NULL" @%s:%d");
	_panic(""psNode->psPrev != NULL" @%s:%d");
	_panic(""psNode->psNext != NULL" @%s:%d");
	_panic(""psNode != NULL" @%s:%d");
	_panic(""psNode->psPrev != NULL" @%s:%d");
	_panic(""psNode->psNext != NULL" @%s:%d");
	_panic(""psList != NULL" @%s:%d");
	_panic(""psNewNode != NULL" @%s:%d");
	_panic(""psList->psPrev != NULL" @%s:%d");
	_panic(""psList->psNext != NULL" @%s:%d");
	_panic(""psList != NULL" @%s:%d");
	_panic(""psNewNode != NULL" @%s:%d");
	_panic(""psList->psPrev != NULL" @%s:%d");
	_panic(""psList->psNext != NULL" @%s:%d");
	_panic(""psSrcList != NULL" @%s:%d");
	_panic(""psDstPos != NULL" @%s:%d");
	_panic(""psList != NULL" @%s:%d");
	_panic(""pCmd != NULL" @%s:%d");
	_panic(""m_pcaHwC[i] != NULL" @%s:%d");
	_panic(""m_pcaHwC[pMap->saCHM[i].iID] != NULL" @%s:%d");
	_panic(""m_pcaHwC[id] != NULL" @%s:%d");
	_panic(""m_pcaHwC[i] != NULL" @%s:%d");
	_panic(""m_pcaHwC[pMap->saCHM[i].iID] != NULL" @%s:%d");
	_panic(""(m_iPhyAddr & (page_size -1)) == 0" @%s:%d");
	_panic(""(m_iKernelAddr & (page_size - 1)) == 0" @%s:%d");
	_panic(""(AVE_DART::GetMappedAddr(m_psaDARTEntry[id]) & (AVE_DART_HW_PAGE_SIZE - 1)) == 0" @%s:%d");
	_panic(""AVE TIMER" @%s:%d");
	_panic(""pCHM != NULL && pCHM->psClient != NULL" @%s:%d");
	_panic(""psList != NULL" @%s:%d");
	_panic(""psList->psPrev != NULL" @%s:%d");
	_panic(""psList->psNext != NULL" @%s:%d");
	_panic(""psNode != NULL" @%s:%d");
	_panic(""pTmp != NULL" @%s:%d");
	_panic(""psList != NULL" @%s:%d");
	_panic(""psList->psPrev != NULL" @%s:%d");
	_panic(""psList->psNext != NULL" @%s:%d");
	_panic(""pCfg != NULL" @%s:%d");
	_panic(""AppleInterruptController::start: device tree ipid-mask property length is %d but should be %d" @%s:%d");
	_panic(""Number of class timeout values entries(%d) != coalesce interrupt classes (%d)" @%s:%d");
	_panic(""_aicNumCIStartDelays(%d) > _aicNumCPUs(%d)" @%s:%d");
	_panic(""_aicCoalesceInterruptCount (%d) > _aicNumExtInts (%d)" @%s:%d");
	_panic(""AppleInterruptController::callPlatformFunction: unexepcted other vector number: 0x%08x" @%s:%d");
	_panic(""AppleInterruptController::callPlatformFunction: unexepcted vector type: 0x%08x" @%s:%d");
	_panic(""AppleInterruptController::callPlatformFunction: unexepcted IPI vector number: 0x%08x" @%s:%d");
	_panic(""Invalid vector number %d max %d" @%s:%d");
	_panic(""AppleInterruptController::handleInterrupt: unexpected vectorType: 0x%08x, IACK=0x%08x" @%s:%d");
	_panic(""Interrupt storm: int %d fired %lld times, iack=%x, vector=%p" @%s:%d");
	_panic(""Interrupt vector %p (%u) changed preemption level from %d to %d" @%s:%d");
	_panic(""AIC writing register 0x%08x = 0x%08x after quiesce\n" @%s:%d");
	_panic(""_aicCoalesceInterruptMap[i].coalesceInterruptClass (%d) > _aicNumClassTimeouts (%d)" @%s:%d");
	_panic(""AppleInterruptController::handleInterrupt: vectorType == kAICIackVecTypeTimer" @%s:%d");
	_panic(""Merge from non-scrubbed src event %p\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""IOGPUClientSharedMachine::getClientSharedAddressForId unable to find client map for id %08x\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("panic_on_gpu_hang",SP + 0x30,0x4);
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""IOGPUMemory::dealloc() eviction failed\n" @%s:%d");
	_panic(""IOGPUMemory::dealloc() memory still prepared\n" @%s:%d");
	_panic(""failed to allocate memory" @%s:%d");
	_panic(""IOGPUObject does not support release with when != 1" @%s:%d");
	_panic(""IOGPUObject does not support taggedRelease with when != 1" @%s:%d");
	_panic(""os_refcnt: underflow (rc=%p)\n" @%s:%d");
	_panic(""os_refcnt: attempted resurrection (rc=%p)\n" @%s:%d");
	_panic(""os_refcnt: overflow (rc=%p)\n" @%s:%d");
	_panic(""IOGPUResource::free called for resource still owned by an IOGPUDevice" @%s:%d");
	_panic(""GPU hang (boot-args contains \"panic_on_gpu_hang=1\")" @%s:%d");
	_panic(""Unbalanced call to enableWorkQueues() %d\n" @%s:%d");
	_panic(""%s: active mapping list not empty\n" @%s:%d");
	_panic(""%s: IOGPUTask unexpectedly freed\n" @%s:%d");
	_panic(""segment list shmem no longer mapped" @%s:%d");
	_panic(""kernel command shmem no longer mapped" @%s:%d");
	_panic(""sideband buffer shmem no longer mapped" @%s:%d");
	_panic(""shmemOffset value is corrupt" @%s:%d");
	_panic(""IOGPUResidentMemorySet unable to expand" @%s:%d");
	_panic(""IOGPUMTLEvent::clean_ring() read overflow" @%s:%d");
	_panic(""IOGPUMTLEvent::mergeSubmitted couldn't find submitted signal event" @%s:%d");
	_panic(""IOGPUMTLEvent::mergeSubmitted readCount overflowed write count" @%s:%d");
	_panic(""IOGPUSysMemory::makeUntracked() called while resident\n" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: max pState greater than num supported.\n");
	_panic("AGXk: %s:%d:%s: !!! Failed to reboot the firmware\n");
	_panic("AGXk: %s:%d:%s: !!! %s: Failed to prepare YUV ColorSpaceConversion table mapping\n");
	_panic("AGXk: %s:%d:%s: !!! Fender address is unknown\n");
	_panic(""Failed to create ioFence (0x%llx) on ioSurface (0x%llx, id: %d) in sync mode.\n" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate sleep/restart lock\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: GPU uses 16K page size but CPU does not\n");
	_panic("AGXk: %s:%d:%s: !!! %s: Failed to allocate IOFence data structures\n");
	_panic("AGXk: %s:%d:%s: !!! %s: Failed to initialize DSIDManager\n");
	_panic("AGXk: %s:%d:%s: !!! %s: Failed to prepare timestamp mapping[%d]\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate accelerator lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate configuration lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate context release lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate sleep power transition lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate static power transition lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not allocate trace lock\n");
	_panic("AGXk: %s:%d:%s: !!! %s: Failed to prepare DSIDManager\n");
	_panic("AGXk: %s:%d:%s: !!! %s Could not instantiate GFXDV Accessor\n");
	_panic("AGXk: %s:%d:%s: !!! %s Fail to allocate fPerfCtrLock\n");
	_panic("AGXk: %s:%d:%s: !!! %s Fail to allocate fConsistentPerfStateLock\n");
	_panic("AGXk: %s:%d:%s: !!! [%s] Unsupported number of reg ranges in EDT (%u)\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: [%s] Fender address unknown\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: [%s] UVWarn expected but address unknown\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: [%s] Could not map GPU reg range\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: [%s] Could not map Fender reg range\n");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: max pState greater than num supported.\n");
	_panic(""AGXk: pid=%u name=%s panicking due to submission while the GPU is powered off!" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Cannot have both gpu-fstp-downgrade and gpu-fstp-downgrade-mask specified at the same time.\n");
	_panic(""Received a kAGFILogEntryTypeAssert message from FW in a release build, this may indicate a KMD/FW mismatch." @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Stale recovery packet is received from firmware. Firmware should never send stale recovery packets.\n");
	_panic("AGXk: %s:%d:%s: !!! ChannelError of unknown type! (%d)\n");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic("AGXk: %s:%d:%s: !!! not implemented!\n");
	_panic("AGXk: %s:%d:%s: !!! base_perf_state not valid (%d)\n");
	_panic("AGXk: %s:%d:%s: !!! AGXPowerTransitionState (%d) must be in kAGXPowerTransitionStateNone\n");
	_panic("AGXk: %s:%d:%s: !!! Firmware wasn't stopped for recovery\n");
	_panic(""AGXSecureGart::unmap Timed out waiting for FW to process secure unmap after %llu ns" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: FW mappings descriptor is full (%u) - Too many mappings to record\n");
	_panic(""AGXArmFirmware:: Power State (%d) must be in external state" @%s:%d");
	_panic(""AGXArmFirmware::kickFirmware: Command submission is disabled!" @%s:%d");
	_panic(""AGXArmFirmware:: Power State (%d) must be in external state" @%s:%d");
	_panic(""Failed to stop GFX FW for GPU recovery" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: max pState greater than num supported.\n");
	_panic(""AGXArmFirmwareMapper::iovmInsert: insertion into previous mappings not supported!" @%s:%d");
	_panic(""AGXArmFirmwareMapper::iovmUnmapMemory: unmapping address that was never mapped!" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""AGXArmFirmwareMapper::iovmUnmapMemory: unmapping different length than was mapped!" @%s:%d");
	_panic(""Attempting to map past the end of the descriptor!" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""AGXArmFirmwareMapper::stop: mapping list not empty!" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Setting AGXArmFirmwareMapper accelerator handle a second time (fAccelerator=0x%p accel=0x%p)!\n");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic("AGXk: %s:%d:%s: !!! Failed to create matching dictionary for AGXArmFirmwareMapper!\n");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic("AGXk: %s:%d:%s: !!! this code should only be run on META GPUs\n");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s: DPE must be enabled on G12.\n");
	_panic(""Attempt to overflow fPrepareCounts for id %d" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Failed to register with M$ driver (%d)\n");
	_panic("AGXk: %s:%d:%s: !!! not implemented!\n");
	_panic("AGXk: %s:%d:%s: !!! Verification failed: %s\n");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Asking to update mappings, should never happen\n");
	_panic(""Cannot allocate from default range!" @%s:%d");
	_panic(""Cannot reserve from default range!" @%s:%d");
	_panic(""Cannot deallocate from default range!" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Cannot allocate from default range!" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Error, fail to allocate fSharedAllocatorLock\n");
	_panic(""AGXParameterMemoryVirtual: no space for additional mapping" @%s:%d");
	_panic(""__copyout_chk object size check failed: uaddr %p, kaddr %p, (%zu < %zu)" @%s:%d");
	_panic(""bad logic, should not reach here" @%s:%d");
	_panic(""AGXSecureGart::unmap" @%s:%d");
	_panic(""AGXSecureGart::map" @%s:%d");
	_panic(""AGXSecureGart::registerContextID" @%s:%d");
	_panic(""Cannot deallocate from default range!" @%s:%d");
	_panic(""AGXSecureGart::unmapWithAddress" @%s:%d");
	_panic(""AGXSecureGart::init" @%s:%d");
	_panic(""AGXSecureGart::describeDriverAllocations" @%s:%d");
	_panic(""AGXSecureGart::free" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! No free block found for SKU stream\n");
	_panic(""Bad shrink head during PM reinit\n" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic("AGXk: %s:%d:%s: !!! not implemented!\n");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Invalid priority %d used for work queue 0x%p\n");
	_panic(""fGartTables[ttbr_index].fPageCataloguePtr[pc_index] & AGXUAT_L1_WORD0_VALID_EN" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryPtrs[pc_index] != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryPtrs[pc_index][pd_index] & AGXUAT_L2_WORD0_VALID_EN" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index] != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index][pd_index] != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index][pd_index][pt_index] & AGXUAT_L3_WORD0_VALID_EN" @%s:%d");
	_panic(""(physAddr & AGXUAT_L3_WORD0_OUTPUTADDR_CLRMSK) == 0" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageCataloguePtr[pc_index] & AGXUAT_L1_WORD0_VALID_EN" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryPtrs[pc_index]!=nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryPtrs[pc_index][pd_index] & AGXUAT_L2_WORD0_VALID_EN" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index]!=nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index][pd_index]!=nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index][pd_index][pt_index] == fGartTables[0].encodedDummyPTE" "failed: " "virt:%010llX [0x%llx][0x%llx][0x%llx]=0x%llX new: 0x%llX" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs[pc_index][pd_index])[i] == (fGartTables[0].encodedDummyPTE)" @%s:%d");
	_panic(""page_directory_ptr[pd_index] & AGXUAT_L2_WORD0_VALID_EN" @%s:%d");
	_panic(""page_table_ptr!=nullptr && page_table_desc!=nullptr" @%s:%d");
	_panic(""page_table_desc->getRetainCount() == 1" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTableRefCount[pc_index][pd_index] > 0" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableDescs[pc_index])[i] == (nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs[pc_index])[i] == (fGartTables[0].fDummyPTPtr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableRefCount[pc_index])[i] == (0)" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageCataloguePtr[pc_index] & AGXUAT_L1_WORD0_VALID_EN" @%s:%d");
	_panic(""page_directory_ptr!=nullptr && page_directory_desc!=nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryRefCount[pc_index] > 0" @%s:%d");
	_panic(""page_directory_desc->getRetainCount() == 1" @%s:%d");
	_panic(""Unable to create page directory or page table descriptor" @%s:%d");
	_panic(""page_table_ptr != nullptr && page_table_desc != nullptr" @%s:%d");
	_panic(""page_table_desc->getRetainCount() == 1" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTableRefCount[pc_index][pd_index] > 0" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs[pc_index]" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTableDescs[pc_index]" @%s:%d");
	_panic(""page_directory_ptr != nullptr && page_directory_desc != nullptr" @%s:%d");
	_panic(""page_directory_desc->getRetainCount() == 1" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryRefCount[pc_index] > 0" @%s:%d");
	_panic(""nullptr == fGartTables[ttbr_index].fPageTableDescs[pc_index]" @%s:%d");
	_panic(""fGartTables[0].fDummyPageTablePtrs == fGartTables[ttbr_index].fPageTablePtrs[pc_index]" @%s:%d");
	_panic(""nullptr == fGartTables[ttbr_index].fPageTableRefCount[pc_index]" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableDescs[pc_index])[i] == (nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs[pc_index])[i] == (nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableRefCount[pc_index])[i] == (0)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs[pc_index] != nullptr) == (fGartTables[ttbr_index].fPageTableDescs[pc_index]!= nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs[pc_index] != nullptr) == (fGartTables[ttbr_index].fPageTableRefCount[pc_index]!= nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageCataloguePtr)[i] == (fGartTables[0].encodedDummyPCE)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageDirectoryDescs)[i] == (nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageDirectoryPtrs)[i] == (fGartTables[0].fDummyPageDirectoryPtr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTablePtrs)[i] == (fGartTables[0].fDummyPageTablePtrs)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableDescs)[i] == (nullptr)" @%s:%d");
	_panic(""(fGartTables[ttbr_index].fPageTableRefCount)[i] == (0)" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageCataloguePtr != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageCatalogueDesc != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryDescs != nullptr" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageDirectoryPtrs != nullptr" @%s:%d");
	_panic(""fGartTables[1].fDummyPTPtr" @%s:%d");
	_panic(""fGartTables[1].fDummyPageDirectoryPtr" @%s:%d");
	_panic(""fGartTables[1].fDummyPagePtr" @%s:%d");
	_panic(""fOwningTask == kernel_task || (fOwningTask != kernel_task) && (fGartTables[1].fPageCatalogueDesc != nullptr)" @%s:%d");
	_panic(""ttbrIdx < 2" @%s:%d");
	_panic(""(options & ~kUATValidOptionsMask) == 0" @%s:%d");
	_panic(""(options & (kUATMapFWDeviceMem | kUATMapFWUncached)) != (kUATMapFWDeviceMem | kUATMapFWUncached)" @%s:%d");
	_panic(""OSDynamicCast(AGXAccelerator, driverService)" @%s:%d");
	_panic(""uat_config" @%s:%d");
	_panic(""kernel_gart_tables" @%s:%d");
	_panic(""fCodeRangeAllocator" @%s:%d");
	_panic(""unimplemented!" @%s:%d");
	_panic(""fGartTables[ttbr_index].fPageTablePtrs" @%s:%d");
	_panic(""ttbrIdx < 2" @%s:%d");
	_panic(""taskId != kAGXUATClientContextIDInvalid" @%s:%d");
	_panic(""fUnmapQueue[i].desc" @%s:%d");
	_panic(""fUnmapQueueCount == 0" @%s:%d");
	_panic(""clientCtxID != kAGXUATClientContextIDInvalid" @%s:%d");
	_panic(""taskId != kAGXUATClientContextIDInvalid" @%s:%d");
	_panic(""(fGPTBATPtr[gptbat_idx] & AGXUAT_TTBA_WORD0_VALID_EN_V) == 0" @%s:%d");
	_panic(""(((uint64_t)~AGXUAT_TTBA_WORD0_ASID_CLRMSK >> AGXUAT_TTBA_WORD0_ASID_SHIFT) & (uint64_t)(taskId)) == (uint64_t)(taskId)" @%s:%d");
	_panic(""(((uint64_t)~AGXUAT_TTBA_WORD0_OUTPUTADDR_CLRMSK >> AGXUAT_TTBA_WORD0_OUTPUTADDR_SHIFT) & (uint64_t)((ttba0_phys >> (14U)))) == (uint64_t)((ttba0_phys >> (14U)))" @%s:%d");
	_panic(""(((uint64_t)~AGXUAT_TTBA_WORD0_OUTPUTADDR_CLRMSK >> AGXUAT_TTBA_WORD0_OUTPUTADDR_SHIFT) & (uint64_t)((ttba1_phys >> (14U)))) == (uint64_t)((ttba1_phys >> (14U)))" @%s:%d");
	_panic(""isAlignedToPOT(page_virtual_address, (uint32_t)cached_page_size)" "failed: " "0x%llX/%u" @%s:%d");
	_panic(""isAlignedToPOT(physical_address, (uint32_t)cached_page_size)" "failed: " "0x%llX/%u" @%s:%d");
	_panic(""isAlignedToPOT(aligned_segment_length, (uint32_t)cached_page_size)" "failed: " "%u/%u" @%s:%d");
	_panic(""alignment && ((alignment & (alignment-1)) == 0)" @%s:%d");
	_panic(""isAlignedToPOT(virtual_length, (uint32_t)cached_page_size)" "failed: " "%llu/%u" @%s:%d");
	_panic(""isAlignedToPOT(base_virtual_address, (uint32_t)cached_page_size)" "failed: " "0x%llX/%u" @%s:%d");
	_panic(""fUnmapQueueCount == 0" @%s:%d");
	_panic(""failed to prepare a descriptor in AGXUAT::unmap()!" @%s:%d");
	_panic(""fUnmapQueueCount < AGXUAT_UNMAP_QUEUE_SIZE" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""failed to grow bsddev cache" @%s:%d");
	_panic(""%s: IOUserClient::registerFilterCallbacks failed: %d" @%s:%d");
	_panic(""%s called on incorrect vnode type" @%s:%d");
	_panic(""Sandbox leaked %llu bytes" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""released collection's reference to profile" @%s:%d");
	_panic(""%s: mac_policy_register failed: %d\n" @%s:%d");
	_panic(""unexpected filter type" @%s:%d");
	_panic(""failed to populate platform kernel endpoint message filter: %d" @%s:%d");
	_panic(""invalid # of syscalls from xnu" @%s:%d");
	_panic(""invalid # of mach traps from xnu" @%s:%d");
	_panic(""invalid # of mach kobject routines from xnu" @%s:%d");
	_panic(""failed to set syscall filter callbacks" @%s:%d");
	_panic(""failed to initialize builtin collection: %d" @%s:%d");
	_panic(""failed to initialize platform sandbox: %d" @%s:%d");
	_panic(""%s: ref already held by pid %u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""%s: overrelease" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: allocation header marked as sandbox tracked (%p)" @%s:%d");
	_panic(""sfree on freed allocation at %p" @%s:%d");
	_panic(""sfree on invalid allocation at %p" @%s:%d");
	_panic(""%s: null sandbox pointer for tracked allocation (%p)" @%s:%d");
	_panic(""%s: allocation header marked as not sandbox tracked (%p)" @%s:%d");
	_panic(""%s: tracked deallocation caused sandbox size to underflow (%p)" @%s:%d");
	_panic(""%s: null sandbox pointer for tracked allocation (%p)" @%s:%d");
	_panic(""%s: allocation already tracked (%p)" @%s:%d");
	_panic(""%s: size underflow" @%s:%d");
	_panic(""shenanigans!" @%s:%d");
	_panic(""no profile to evaluate" @%s:%d");
	_panic(""platform sandbox invalid (%s)" @%s:%d");
	_panic(""invalid builtin %s (%s)" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""refcnt overflow" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: tracked deallocation caused sandbox size to underflow (%p)" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: tracked deallocation caused sandbox size to underflow (%p)" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""extension handle count overflow" @%s:%d");
	_panic(""%s: failed to allocating matching dict" @%s:%d");
	_panic(""%s: failed to look up AMFI service\n" @%s:%d");
	_panic(""failed to resolve static policy identifier" @%s:%d");
	_panic(""builtin count overflow" @%s:%d");
	_panic(""collection builtin count overflow" @%s:%d");
	_panic(""builtin %s already exists" @%s:%d");
	_panic(""cannot register builtin profile with no name" @%s:%d");
	_panic(""unexpected destruction of builtin profile" @%s:%d");
	_panic(""failed to initialize protobox collection: %d" @%s:%d");
	_panic(""attempt to free invalid port label" @%s:%d");
	_panic(""cannot derive connection port from bootstrap port" @%s:%d");
	_panic(""unexpected port role: %u" @%s:%d");
	_panic(""invalid attempt to update connection port filters" @%s:%d");
	_panic(""unknown storage class type" @%s:%d");
	_panic(""failed to allocate OSSymbol for string \"%s\"" @%s:%d");
	_panic(""Unable to allocate IOKit matching dictionary for %s" @%s:%d");
	_panic(""%s:unexpected argument sent to AppleEmbeddedAudio micIndex %u state %u max retry count %u\n" @%s:%d");
	_panic(""Unexpected voltage returned by AppleEmbeddedAudio\n" @%s:%d");
	_panic(""SetFWSize failed with status 0x%x\n" @%s:%d");
	_panic("" nvme: Initialize NVMe failed with status - 0x%x\n" @%s:%d");
	_panic("nvme: "Image checksum failed. ExpectedCRC = 0x%x @ OldOffset = 0x%x, inImageIndex = %d, ErrorCRC = 0x%x @ NewOffset = 0x%x, key = 0x%x, size=0x%x unmapOffset = 0x%x, unmapSize = 0x%x \n" @%s:%d");
	_panic(SP + 0x38);
	_panic(?);
	_panic(""Incorrect key being passed : fEncryptionKeySize - 0x%lx, keySize - 0x%lx\n" @%s:%d");
	_panic(""SetupTagReserveDefaults: requestCount is 0, this is a fatal error\n" @%s:%d");
	_panic(""nvme: Unable to create NVRAM device\n" @%s:%d");
	_panic("nvme: "nvme: AppleEmbeddedNVMeController::ThreadEntry, ShutdownNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic("nvme: "nvme: InitializeNVMe error = 0x%08X\n" @%s:%d");
	_panic(""nvme: Invalid size for NSID %d\n" @%s:%d");
	_panic("nvme: "nvme: AllocateScratchBuffer - fDDRScratchBufferBase %p fDDRScratchBufferSize 0x%x\n" @%s:%d");
	_panic("nvme: "nvme: SetupScratchBuffer - MapBuffer failed with status 0x%0X\n" @%s:%d");
	_panic("nvme: "nvme: AllocateScratchBuffer - Unable to allocate IOMD\n" @%s:%d");
	_panic("nvme: "AppleEmbeddedNVMeController::enablePCIPort failed !\n" @%s:%d");
	_panic("nvme: "AppleEmbeddedNVMeController::disablePCIPort failed !\n" @%s:%d");
	_panic(""nvme: DoHousekeeping failed.\n" @%s:%d");
	_panic(""Could not initialize wall time.\n" @%s:%d");
	_panic(""burnin-size boot-arg should not be set. Remove burnin-size boot-arg and retry again. \n" @%s:%d");
	_panic(""nvme: InitializeNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic(""nvme: ShutdownNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic(""pmap_iommu_alloc_contiguous_pages failed: size=%u %\n" @%s:%d");
	_panic(""pmap_iommu_alloc_contiguous_pages failed: size=%u \n" @%s:%d");
	_panic(""pmap_iommu_ioctl - NVME_PPL_IOCTL_SET_TCB_ADDR - failed\n" @%s:%d");
	_panic(""pmap_iommu_init failed\n" @%s:%d");
	_panic(""pmap_iommu_ioctl - NVME_PPL_IOCTL_ENABLE_CG - failed\n" @%s:%d");
	_panic(""pmap_iommu_ioctl - NVME_PPL_IOCTL_SET_SQ_ENTRY - failed\n" @%s:%d");
	_panic(""pmap_iommu_map failed\n" @%s:%d");
	_panic(""pmap_iommu_ioctl - NVME_PPL_IOCTL_RESET_SQ_ENTRY - failed\n" @%s:%d");
	_panic(""nvme: CPX_USE_OFFSET_FOR_IV not set\n" @%s:%d");
	_panic(""nvme: Missing key!\n" @%s:%d");
	_panic(""NVMe desc is NULL!\n" @%s:%d");
	_panic(""prepare failed.\n" @%s:%d");
	_panic(""nvme: Enabling PCI port failed\n" @%s:%d");
	_panic(""nvme: AppleNVMeUpdateUC::FirmwareActivate, ShutdownNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic(""nvme: Invalid provider for NVRAM\n" @%s:%d");
	_panic(""nvme: Unable to allocate IOLock for NVRAM\n" @%s:%d");
	_panic("nvme: "EAN verifyImages() failed during eraseImage()\n" @%s:%d");
	_panic(""There should be no IOs happening this early on init\n" @%s:%d");
	_panic("nvme: "%s.\n" @%s:%d");
	_panic(""%s: assert failed: " "inOldRequest != NULL" " %s:%u\n" @%s:%d");
	_panic(""AppleNVMeController::PolledIO: Invalid key length %d\n" @%s:%d");
	_panic(""AppleNVMeController::PolledIO, trying to do polled IO with polled command in flight, inPolledIOSelector = 0x%08x\n" @%s:%d");
	_panic(""Could not create low power timer event source.\n" @%s:%d");
	_panic("nvme: "Self-refresh entry failed !! (0x%08X)\n" @%s:%d");
	_panic("nvme: "InitializeNVMe error = 0x%08X\n" @%s:%d");
	_panic("nvme: "Exit self-refresh failed ! (going to active)\n" @%s:%d");
	_panic("nvme: "SendShutdownNotification error = 0x%08X\n" @%s:%d");
	_panic("nvme: "Exit self-refresh failed ! (going to sleep) = 0x%08X\n" @%s:%d");
	_panic("nvme: "Self-refresh entry failed !! (0x%08X)\n" @%s:%d");
	_panic("nvme: "AppleNVMeController::HandleControllerPowerOff, ShutdownNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic("nvme: "ShutdownNVMe() completed with status = 0x%08x\n" @%s:%d");
	_panic("nvme: "SendShutdownNotification() completed with status = 0x%08x\n" @%s:%d");
	_panic("nvme: "Exit self-refresh failed !\n" @%s:%d");
	_panic(""Could not create timer event source.\n" @%s:%d");
	_panic(""Could not start timer event source.\n" @%s:%d");
	_panic(""nvme: HousekeepingTimerEvent failed.\n" @%s:%d");
	_panic(""%s: assert failed: " "status == kIOReturnSuccess" " %s:%u\n" @%s:%d");
	_panic(""nvme: Missing key!\n" @%s:%d");
	_panic(""%s: assert failed: " "queue_empty ( &fTokenFreeList ) == false" " %s:%u\n" @%s:%d");
	_panic(""%s: assert failed: " "fOutstanding > 0" " %s:%u\n" @%s:%d");
	_panic(""AppleH10PearlCam::SendReportErrorMessageToClient - PearlCam fatal error = %d\n" @%s:%d");
	_panic(""AppleH10CamIn::AllocateSharedMemorySurface() - allocation failure: 0x%08X" @%s:%d");
	_panic(""AppleH10CamIn::Failed to write PS register %x with value: %x\n" @%s:%d");
	_panic(""AppleH10CamIn::%s - ISP_Init failed: 0x%08X\n" @%s:%d");
	_panic(""AppleH10CamIn::%s - CISP_CMD_CH_ERROR_NOTIFICATION, errorSource = %d, errorCode = 0x%x\n" @%s:%d");
	_panic(""AppleH10CamIn::%s - CISP_CMDCH_ERROR_NOTIFICAITON_ERROR_SOURCE_ASYNCH_ERROR, L2C_ERR_STS(0x%x), L2C_ERR_ADR(0x%x), L2C_ERR_INF(0x%x), \t\t\t  MMU_ERR_STS(0x%x), LSU_ERR_STS(0x%x), LSU_ERR_CTL(0x%x), FED_ERR_STS(0x%x), FED_ERR_CTL(0x%x) \n" @%s:%d");
	_panic(""AppleH10CamIn::%s - register force idle failed (offset: 0x%x) - with force_idle_ack return %d\n" @%s:%d");
	_panic(""AppleH10CamIn::%s - register force idle failed (offset: 0x%x) - still return Wait for Ack or Nack after 1 us\n" @%s:%d");
	_panic(""AppleH10CamIn::%s - CISP_CMD_STOP failed with command 0x%08x \n" @%s:%d");
	_panic(""AppleH10CamIn::%s - Failed to map shared memory descriptor\n" @%s:%d");
	_panic(""ISP version from platform struct does not match rISP_ISPVERSION register value" @%s:%d");
	_panic(""ISP Firmware panic\n" @%s:%d");
	_panic(""ISP Firmware Timed out\n" @%s:%d");
	_panic(""ISP didnt power-up cleanly" @%s:%d");
	_panic(""AppleH10CamIn::%s - CISP_CMD_POWER_DOWN failed with command 0x%08x \n" @%s:%d");
	_panic(""AppleH10CamIn::%s - CISP_CMD_SUSPEND failed with command 0x%08x \n" @%s:%d");
	_panic(""AppleH10CamIn::%s - Could not allocate 0x%08zx bytes of memory for logging database\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("baseband-pcie-ld-panic",SP + 0x33,0x1);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("baseband-pcie-nolu-panic",SP + 0x32,0x1);
	_IOLog("%06ld.%06d %s::%s: failed port enable, but not panicking\n");
	_panic(""%s:%s" @%s:%d");
	_panic(""%s::%s: port enable failed" @%s:%d");
	_panic(""%s:%s" @%s:%d");
	_panic(""abort()" @%s:%d");
	_panic("A5AudioCodec: can't allocate memory");
	_panic(""AudioCodecWrapper::Initialize error, all of these should be null: m_InputData %p m_OutputData %p m_ShadowInputData %p\n" @%s:%d");
	_panic(""Freeing non-empty queue %p" @%s:%d");
	_panic(""AppleBCMWLANTimeSyncEngine::freeTimestampTxIO unexpected IOMemoryDescriptor\n" @%s:%d");
	_panic(""Unexpected Feature Enabled\n" @%s:%d");
	_panic(""%s::%s(): Unbalanced driver registrations in %p: %lu\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.pqs",SP + 0x58,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.oqs",SP + 0x58,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.aqs",SP + 0x58,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.queuestall",SP + 0x58,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.queuefull",SP + 0x58,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.problem",SP + 0x58,0x4);
	_panic(""%s" @%s:%d");
	_panic(""%s::%s(): Undefined link state %d\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.debug.postmessage.panic",SP + 0x47,0x1);
	_panic(""postMessage: msg[%3u] dataLen[%5zu] > %u, kevMaxLength[%u]\n" @%s:%d");
	_panic(""No BDC header mbuf" @%s:%d");
	_panic(""Not enough space in mbuf for bus header. Well, this is unexpected!" @%s:%d");
	_panic(""Unable to prepend BDC header\n" @%s:%d");
	_panic(""invalid interface in requestPacketTx\n" @%s:%d");
	_func_fffffff00864fa60(JUNSAFE to view,"%s@%d:Last watchdog failed, max retries performed, waiting for panic\n");
	_panic(""%s" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.panic.factory",SP + 0x2c,0x4);
	_func_fffffff00864fa60(SP + 0x120801858,"%s@%d:%s::%s(): Will panic on init failure\n");
	_panic(""%s::%s(): Unit isn't properly provisioned (no WiFi MAC Address)!\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.commander.panic_rateexceeded",SP + 0x14,0x4);
	_panic(""Load would cause buffer overflow." @%s:%d");
	_panic(""unknown map action\n" @%s:%d");
	_panic(""%s" @%s:%d");
	_panic(""%s::%s fCreditMap not setup!\n" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.commander.paniconchecktimer",SP + 0x48,0x4);
	_panic(""read failed for power control reg" @%s:%d");
	_panic(""unexpected forcePower setting" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.pcie.paniconaer",SP + 0x6c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.pcie.paniconcommitrings",SP + 0x6c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.pcie.paniconhostpollfwtrap",SP + 0x6c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wifibt.pcie.panicOnPendingBackplaneErrors",SP + 0x6c,0x4);
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("wlan.pcie.paniconlinkdown",SP + 0x6c,0x4);
	_panic(""%s::%s(): " "Secondary interrupt execution timeout\n" @%s:%d");
	_panic(""%s::%s(): " "PCIe port error type %u not handled\n" @%s:%d");
	_panic(""%s::%s(): " "Linkdown during wlan bus driver start()\n" @%s:%d");
	_panic(""WLAN PCIe Failed to enumerate\n" @%s:%d");
	_panic(""Unexpected linkdown in wlan pcie \n" @%s:%d");
	_panic(""%s::%s(): " "AER reported\n" @%s:%d");
	_panic(""%s::%s(): " "Get Interrupt Attempts maxed out\n" @%s:%d");
	_panic(""%s::%s(): " "Failed to enable port (%s)\n" @%s:%d");
	_panic(""%s::%s(): " "PCIe port error type %u not handled\n" @%s:%d");
	_panic(""%s::%s(): " "External reset request timed out" @%s:%d");
	_panic(""%s::%s(): " "WiFi FLR resulted in pending backplane errors!" @%s:%d");
	_panic(""%s::%s(): " "Detach notification didn't execute within 5 seconds" @%s:%d");
	_panic(""%s::%s(): " "Failed to enable port (%s)\n" @%s:%d");
	_panic(""%s::%s(): " "Attach notification didn't execute within 5 seconds" @%s:%d");
	_panic(""unexpected pending H2D MB data" @%s:%d");
	_panic(""%s::%s(): " "maxNbrOfDynamicSubmissionRings %u <= maxNbrOfTxFlowRings %u" @%s:%d");
	_panic(""%s::%s(): " "btLogNoMaxQIncrease is set but BT logging isn't supported" @%s:%d");
	_panic(""Error in AMSDU aggregation!\n" @%s:%d");
	_panic(""ERROR: Invalid monitor packet chain!\n" @%s:%d");
	_panic(""ERROR: Unexpected monitor mode packet without AMSDU first packet!\n" @%s:%d");
	_panic(""%s::%s(): " " Bad direction on io %p, %#X" @%s:%d");
	_panic(""Host memory access timeout" @%s:%d");
	_panic(""unexpected pending H2D MB data" @%s:%d");
	_panic(""TCM access with inactive device core. ivars->fFWHealthCheck 0x%x\n" @%s:%d");
	_panic(""Error in AMSDU aggregation!\n" @%s:%d");
	_panic(""ERROR: Invalid monitor packet chain!\n" @%s:%d");
	_panic(""ERROR: Unexpected monitor mode packet without AMSDU first packet!\n" @%s:%d");
	_panic(""::commit not used at present" @%s:%d");
	_panic(""AppleBCMWLANPCIeSubmissionRing::getReadIndex() Invalid index(0x%x)\n" @%s:%d");
	_panic(""AppleBCMWLANPCIeSubmissionRing::getWriteIndex() Invalid index(0x%x)\n" @%s:%d");
	_panic(""AppleBCMWLANPCIeSubmissionRing::getIndices() Invalid index(0x%x)\n" @%s:%d");
	_panic(""::commit not used at present" @%s:%d");
	_panic(""AppleBCMWLANPCIeCompletionRing::getReadIndex() Invalid index(0x%x)\n" @%s:%d");
	_panic(""AppleBCMWLANPCIeCompletionRing::getWriteIndex() Invalid index(0x%x)\n" @%s:%d");
	_panic(""AppleBCMWLANPCIeCompletionRing::getIndices() Invalid index(0x%x)\n" @%s:%d");
	_panic(""hfs_truncatefs: unexpected error flushing volume header (%d)\n" @%s:%d");
	_panic(""hfs_copy_extent: vp=%p (cp=%p) not owned?\n" @%s:%d");
	_panic(""hfs: ff_blocks %d is less than unalloc blocks %d\n" @%s:%d");
	_panic(""hfs_makenode: no cpentry for cnode (%p)" @%s:%d");
	_panic(""hfs: symlink bp @ %p is not marked meta-data!\n" @%s:%d");
	_panic(""hfs: ModifyBlockStart: null bp  for blockdescptr %p?!?\n" @%s:%d");
	_panic(""hfs: btree_swap_node: about to write corrupt node!\n" @%s:%d");
	_panic(""hfs: releaseblock: modified is 0 but forcewrite set! bp %p\n" @%s:%d");
	_panic(""hfs: releaseblock: modified is 0 but markdirty set! bp %p\n" @%s:%d");
	_panic(""hfs: extendbtree: fcb %p has eof 0x%llx not a multiple of 0x%x (trim %llx)\n" @%s:%d");
	_panic(""hfs: truncate file didn't! fcbEOF %lld nsize %d fcb %p\n" @%s:%d");
	_panic(""hfs: error truncating btree files (sz 0x%llx, trim %lld, ret %ld)\n" @%s:%d");
	_panic(""hfs: btree file eof %lld less than orig size %lld!\n" @%s:%d");
	_panic(""hfs_create_attr_btree: bad buffer size (%d)\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""jnl: do_jnl_io: curlen == %lld, offset 0x%llx len %zd\n" @%s:%d");
	_panic(""jnl: request for i/o to jnl-header without JNL_HEADER flag set! (len %lld, data %p)\n" @%s:%d");
	_panic(""jnl: do_jnl_io: bad offset 0x%llx (max 0x%llx)\n" @%s:%d");
	_panic(""jnl: do_overlap: overlap of %lld is not multiple of %zd\n" @%s:%d");
	_panic(""jnl: do_overlap: after overlap, new block size is invalid (%u)\n" @%s:%d");
	_panic(""jnl: do_overlap: overlap with previous entry not a multiple of %zd\n" @%s:%d");
	_panic(""jnl: insert_block: bad size in insert_block (%zd)\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""jnl: %s: close: jnl @ %p had both an active and cur tr\n" @%s:%d");
	_panic(""jnl: owner is %p, expected NULL\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""jnl: end_tr: I'm not the owner! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""jnl: jnl @ %p has negative nested count (%d). bad boy.\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: journal @ %p has active tr (%p) and cur tr (%p)\n" @%s:%d");
	_panic(""jnl: check_free_space: tr starting @ 0x%llx not flushing (jnl %p).\n" @%s:%d");
	_panic(""could not acquire bp %p (err %d)\n" @%s:%d");
	_panic(""jnl: inconsistent binfo (NULL bp w/bnum %lld; jnl @ %p, tr %p)\n" @%s:%d");
	_panic(""jnl: buf_create_shadow returned NULL" @%s:%d");
	_panic(""jnl: end_tr: !!!DANGER!!! bp %p flags (0x%x) not LOCKED & DELWRI\n" @%s:%d");
	_panic(""jnl: check_free_space: buffer flushing isn't working " "(jnl @ %p s %lld e %lld f %lld [active start %lld]).\n" @%s:%d");
	_panic(""jnl: jnl @ %p already has cur_tr %p, new tr: %p\n" @%s:%d");
	_panic(""jnl: end_transaction: end is bogus 0x%llx (sz 0x%llx)\n" @%s:%d");
	_panic(""jnl: end_transaction: async_trim already non-NULL!" @%s:%d");
	_panic(""jnl: abort_tr: got back a different bp! (bp %p should be %p, jnl %p\n" @%s:%d");
	_panic(""jnl: owner is %p, expected NULL\n" @%s:%d");
	_panic(""jnl: end_transaction: bad tr journal start/end: 0x%llx 0x%llx\n" @%s:%d");
	_panic(""jnl: buffer_flushed: did not find tr w/start @ %lld (tr %p, jnl %p)\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""jnl: start_tr: owner %p, nested count %d, active_tr %p jnl @ %p\n" @%s:%d");
	_panic(""jnl: owner is %p, expected NULL\n" @%s:%d");
	_panic(""jnl: start_tr: active_tr is NULL (jnl @ %p, owner %p, current_thread %p\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""jnl: mod block start: bufsize %d not a multiple of block size %d\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""jnl: modify_block_start: bp @ %p is not a meta-data block! (jnl %p)\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: modify_block_start: called w/out a transaction! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""jnl: transaction too big (%d >= %lld bytes, bufsize %d, tr %p bp %p)\n" @%s:%d");
	_panic(""jnl: mod block start: phys blksz %d is too small (%d, %d)\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: modify_block_end: called w/out a transaction! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""jnl: modify_block_end: bp %p not locked! jnl @ %p\n" @%s:%d");
	_panic(""jnl: modify block end: no way man, prev == NULL?!?, jnl %p, bp %p\n" @%s:%d");
	_panic(""jnl: modify_block_end: i = %d, max_blocks %d\n" @%s:%d");
	_panic(""jnl: modify_block_end: old func %p / arg %p (func %p)" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: modify_block_end: called w/out a transaction! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""jnl: modify_block_end: called with bp not B_LOCKED" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: trim_add_extent: called w/out a transaction! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(""jnl: trim_remove_extent: called w/out a transaction! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: null journal ptr?\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""jnl: owner is %p, expected NULL\n" @%s:%d");
	_panic(""%s:%d: jhdr start looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jhdr end looks bad (0x%llx max size 0x%llx)\n" @%s:%d");
	_panic(""%s:%d: jdev is null!\n" @%s:%d");
	_panic(""%s:%d: fsdev is null!\n" @%s:%d");
	_panic(""%s:%d: jhdr magic corrupted (0x%x != 0x%x)\n" @%s:%d");
	_panic(""%s:%d: tr blhdr max_blocks looks bad: %d\n" @%s:%d");
	_panic(""jnl: relocate: Not the owner! jnl %p, owner %p, curact %p\n" @%s:%d");
	_panic(""%s:%d: null transaction ptr?\n" @%s:%d");
	_panic(""%s:%d: null tr->jnl ptr?\n" @%s:%d");
	_panic(""%s:%d: blhdr (%p) != tbuffer (%p)\n" @%s:%d");
	_panic(""%s:%d: tr total_bytes looks bad: %d\n" @%s:%d");
	_panic(""%s:%d: tr journal start looks bad: 0x%llx\n" @%s:%d");
	_panic(""%s:%d: tr journal end looks bad: 0x%llx\n" @%s:%d");
	_panic(ARG0,);
	_panic();
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""%s - should never get here when skiplock is set \n" @%s:%d");
	_panic(0x818,);
	_panic(ARG0,);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(0x818,);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(0x818,);
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(ARG0,);
	_panic(""xattr_assert() failed: %s" @%s:%d");
	_panic(""hfs: remove_attribute_records: corruption..." @%s:%d");
	_panic(""xattr_assert() failed: %s" @%s:%d");
	_panic(""hfs_key_roll_ctx_alloc: old context busy!" @%s:%d");
	_panic(""hfs_UNswap_BTNode: offset #%d invalid (0x%04X) (blockSize 0x%x numRecords %d)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: offsets %d and %d out of order (0x%04X, 0x%04X)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid forward link (0x%08X)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid forward link (0x%08x == 0x%08x)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid backward link (0x%08X)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid backward link (0x%08x == 0x%08x)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid node kind (%d)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid node height (%d)\n" @%s:%d");
	_panic(""hfs_UNswap_BTNode: invalid record count (0x%04X)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: extents key #%d invalid length (%d)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog record #%d keyLength=%d expected=%lu\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: fileID %u is not a system B-tree\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog key #%d invalid length (%d)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog key #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog key #%d offset too big (0x%04X)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr key #%d offset too big (0x%04X)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: extents key #%d offset too big (0x%04X)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: hotfile #%d offset too big (0x%04X)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: hotfile #%d incorrect keyLength %d\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr key #%d keyLength=%d attrNameLen=%d\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr key #%d too big (%d)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d name too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: unrecognized catalog record type (0x%04X; record #%d)\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog folder record #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: catalog file record #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr extents #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr fork data #%d too big\n" @%s:%d");
	_panic(""hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big (attrSize=%u)\n" @%s:%d");
	_panic(""hfs_cprotect: key too big!" @%s:%d");
	_panic(""hfs cp: no running mount point version! " @%s:%d");
	_panic(""hfs_cprotect: key too big!" @%s:%d");
	_panic(""cp_new: invalid key length! (%ul) \n" @%s:%d");
	_panic(""cp_new: invalid iv key length! (%ul) \n" @%s:%d");
	_panic(""CP: major vers not set in mount!" @%s:%d");
	_panic(""Content Protection: uninitialized cnode %p" @%s:%d");
	_panic(""hfs_cprotect: key too big!" @%s:%d");
	_panic(""cp_unwrap: invalid key length! (%ul)\n" @%s:%d");
	_panic(""cp_unwrap: invalid iv key length! (%ul)\n" @%s:%d");
	_panic(""Content Protection: unknown lock action %lu\n" @%s:%d");
	_panic(""hfs: hfs_ubc_setsize called without exclusive truncate lock!" @%s:%d");
	_panic(""hfs_truncate: invoked on non-UBC object?!" @%s:%d");
	_panic(""cannot find xattr fext for %llu" @%s:%d");
	_panic(""decmpfs_pagein_compressed: couldn't ubc_upl_map a single page\n" @%s:%d");
	_panic(""hfs_vnop_pageout: unforeseen clean page @ index %d for UPL %p\n" @%s:%d");
	_panic(""hfs_vnop_bwrite: about to write corrupt node!\n" @%s:%d");
	_panic(""hfs: CLEARING the lock bit on bp %p\n" @%s:%d");
	_panic(""hfs: getparentcnid: unknown recordType (crp @ %p)\n" @%s:%d");
	_panic(""hfs: catrec_update: rsrc fork == data fork" @%s:%d");
	_panic(""hfs: hfc_btree_open: not a system file (vp = %p)" @%s:%d");
	_panic(""hfs_recording_init: hfc_filevp exists (vp = %p)" @%s:%d");
	_panic(""hfs: hfc_btree_create: hfc_filevp exists (vp = %p)" @%s:%d");
	_panic(""hfs_recording_stop: hfc_filevp exists (vp = %p)" @%s:%d");
	_panic(""hfs_reload: dirty1" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""hfs: blk allocation overflow on \"%s\" sb:0x%08x eb:0x%08x cb:0x%08x fb:0x%08x stop:0x%08x min:0x%08x found:0x%08x" @%s:%d");
	_panic(""hfs: BlockFindAnyBitmap: allocation overflow on \"%s\"" @%s:%d");
	_panic(""hfs: ReleaseBitmapBlock: missing bp" @%s:%d");
	_panic(""Modified read-only bitmap buffer!" @%s:%d");
	_panic(""hfs_lock: locking against myself!" @%s:%d");
	_panic(""hfs_lock_truncate: cnode %p locked!" @%s:%d");
	_panic(""hfs_vnop_reclaim: vp points to wrong cnode (vp=%p cp->c_vp=%p cp->c_rsrc_vp=%p)\n" @%s:%d");
	_panic(""hfs_getnewvnode: orphaned data fork" @%s:%d");
	_panic(""hfs_getnewvnode: orphaned vnode (data)" @%s:%d");
	_panic(""hfs_getnewvnode: orphaned rsrc fork" @%s:%d");
	_panic(""hfs_getnewvnode: orphaned vnode (rsrc)" @%s:%d");
	_panic(""hfs_lock_truncate: cnode %p locked!" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""hfs: nr_delete: invalid NR (%p)" @%s:%d");
	_panic(""hfs_lock_global: locking against myself!" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""hfs_insertdirhint: hint %p already on list!" @%s:%d");
	_panic(""jnl: owner is %p, expected NULL\n" @%s:%d");
	_panic(""hfs_unlink: dir not empty (id %d, %d entries)" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to instantiate %s" @%s:%d");
	_func_fffffff009b4433c(0 ,?,"panic-reset-mask");
	_panic(""No button at interrupt index %d" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to allocate pressCountPairs" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to allocate nvram sync threadcall" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to allocate backlight threadcall" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to allocate acm threadcall" @%s:%d");
	_panic(""AppleM68Buttons::handleStart failed to allocate state serializer" @%s:%d");
	_func_fffffff0081e3aa8(,?,0x10,"Debug panic on forced shutdown, has LCD function: %s");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("pmu-disable-panic",0x188,0x1);
	_panic(""AppleDialogPMU::%s _socdCount(%d) > _scratchCount(%d)" @%s:%d");
	_panic(""AppleDialogPMU::%s Error 0x%x (NAK=%d,Parity=%d,Timeout=%d)" @%s:%d");
	_panic(""SMCFW failed to handle suspend/lpem request\n" @%s:%d");
	_panic("AppleDialogSPMIPMURTC"::getCurrentDateTime() should not be called" @%s:%d");
	_panic("AppleDialogSPMIPMURTC"::setCurrentDateTime() should not be called" @%s:%d");
	_panic("AppleDialogSPMIPMURTC"::readRTCUpcountTicks() ret=0x%x" @%s:%d");
	_panic(""SMCFW failed to handle restart request\n" @%s:%d");
	_panic(""AppleDialogPMU::%s failed to alloc %d bytes" @%s:%d");
	_panic(""SMCFW failed to handle shutdown request\n" @%s:%d");
	_panic(""Failed to write kAppleDialogBootStateOffset\n" @%s:%d");
	_panic(""Failed to read kAppleDialogBootStateOffset\n" @%s:%d");
	_panic(""%s called outside gate!\n" @%s:%d");
	_panic(""%s buffer already free" @%s:%d");
	_panic(""ApplePinotLCD::_lcdEnable redundant %sable request\n" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to stop config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to config PMU. ret: 0x%08X \n" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: BPIC V Hysteresis EDT value out of range %u" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read duty cycle from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read filters buffer from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to stop config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to clear/ack SPMI event. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read duty cycle from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read filters buffer from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read PI controller data from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to stop config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to reset worst case I/V buffer. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to config PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to read PI controller data from PMU. ret: 0x%08X" @%s:%d");
	_panic(""AppleBTM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "ASSERT failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "ASSERT failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "AppleBTM: unable to clear/ack SPMI event" @%s:%d");
	_panic(""AppleBTM: %s:%u " "REQUIRE failed: %s" @%s:%d");
	_panic(""AppleBTM: %s:%u " "ASSERT failed: %s" @%s:%d");
	_panic(""pageout offset not aligned to page size, node %llu, f_offset %llu, pl_offset %d\n" @%s:%d");
	_panic(""tmpfs_pagein_range: tn_id %llu, cannot shorten range (%llu + %llu) to exclude tail overlap (%llu + %zu)\n" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""tmpfs_alloc_node: type %p %d" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""tmpfs_free_node: type %p %d" @%s:%d");
	_panic(""tmpfs_alloc_vp: type %p %d" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""extent overlap for offset %llu, len %zu\n" @%s:%d");
	_panic(""existing extent offset %llu, len %zu, data %p when attempting to insert offset %llu, len %zu, data %p\n" @%s:%d");
	_panic(""Could not allocate space for rename" @%s:%d");
	_panic(""Could not init dirent for rename" @%s:%d");
	_panic(""%s : Recursive exclusive lock attempt" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""tmpfs_dir_getdents: type %p %d" @%s:%d");
	__ZN16AppleARMFunction12withProviderEP15IORegistryEntryPKc(0 ,"function-panic_flush_helper");
	__ZN16AppleARMFunction12withProviderEP15IORegistryEntryPKc(0 ,"function-panic_halt_helper");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("-panic_notify",SP + 0x27,0x1);
	__ZN16AppleARMFunction12withProviderEP15IORegistryEntryPKc(0 ,"function-panic_notify");
	_IOLog("wdog panic (attempt %d)\n");
	_panic("Device panic triggered by an external agent (via SMC doorbell)");
	_kprintf("not enabling long period watchdog (cleared SoC watchdog if enabled prior), panic SoC watchdog disabled\n");
	_kprintf("watchdog configured userspace monitoring %sabled, SoC watchdog %sabled, panic SoC watchdog %sabled, userspace defanged: %s, halt on SoC watchdog expiration: %s, userspace IOKit monitoring %sabled\n");
	_panic(""failed to read wdt-version property" @%s:%d");
	_panic(""%s: Need to add support for panicsave flag in scratch register that does not reset by chip watchdog reset" @%s:%d");
	_panic(""%s: Need to add panic-save-flag-bit in device tree" @%s:%d");
	_panic(""invalid panic-save-flag-bit flag specified in EDT (%d)" @%s:%d");
	_panic(""%s: Failed to allocate memory for the trigger configuration" @%s:%d");
	_panic(""%s: The contents of the 'trigger-config' property in the device tree are malformed" @%s:%d");
	_panic(""%s: Need to add 'reg' entry in device tree for the AP watchdog deadline" @%s:%d");
	_panic(""%s: Need to add a 'reg' entry in the device tree for the AP watchdog configuration" @%s:%d");
	_panic(""invalid panic-forcepoweroff-flag-bit flag specified in EDT (%d)" @%s:%d");
	_panic(""%s: clock speed %llu does not match absolute time" @%s:%d");
	_panic(""Reconfig watchdog cannot be supported without SMC AP watchdog support" @%s:%d");
	_panic(""PMU KEXT expected to handle restart but no saved PE_halt_restart routine found" @%s:%d");
	_panic(""restart not handled by next PE_halt_restart routine" @%s:%d");
	_panic(""Reconfig Watchdog monitoring can't be enabled" @%s:%d");
	_panic(""%s: invalid instance type: 0x%08x" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Reserved DVA range %u [0x%016llx..0x%016llx) overlaps with range %u [0x%016llx..0x%016llx)" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: remap of%s SID %u to%s SID %u" @%s:%d");
	_panic(""%s: Unsupported page size: %d" @%s:%d");
	_panic(""%s[%d]: DT property '%s' is obsolete use 'remap' instead" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: failed to unregister mapper %p SID 0x%x: 0x%08x" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: translation not permitted for bypassed SID (%d)" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic(""%s: translation not permitted for bypassed SID (%d)" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic(""%s: translation not permitted for bypassed SID (%d)" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic(""%s: translation not permitted for bypassed SID (%d)" @%s:%d");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic(""%s: translation not permitted for bypassed SID (%d)" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s (%p): Segment table changed: md %p page %#x segRef %p totalSegs %#x pthandle expected %p actual %p" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic("(%s) %s:%u: VERIFY failed");
	_panic(""%s[%d]: full bypass mode not supported and bypass-address property not specified" @%s:%d");
	_panic(""%s[%d]: page size is incorrectly configured: config %#x actual %#x" @%s:%d");
	_panic(""%s[%d]: access region protection is incorrectly configured: EDT config: 0x%x, Hardware config: 0x%x" @%s:%d");
	_panic(""%s[%d]: Invalid APF slice count: configured %#x max %#x" @%s:%d");
	_panic(""%s[%d]: Invalid SID count for AF_ID %#x: EDT config: %u, Hardware config: 16" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: Instance %d SID %d TTBR 0 (0x%08x) is not valid" @%s:%d");
	_panic(""%s: Instance %d SID %d TTBR 0 (0x%08x) PA 0x%016llx != expected PA 0x%016llx" @%s:%d");
	_panic(""%s: Instance %d is not locked" @%s:%d");
	_panic("(%s) %s:%u: REQUIRE failed");
	_panic(""%s: max %s instances exceeded" @%s:%d");
	_panic(""retention-force-quiesce not valid for client without retention" @%s:%d");
	_panic(""soft-fault-clients has been deprecated" @%s:%d");
	_panic(""%s: quiescing without valid saved state" @%s:%d");
	_panic(""%s (%p): _forceAvailable not supported" @%s:%d");
	_panic(""%s (%p): Max spurious DART/SMMU interrupts: interrupt index %d" @%s:%d");
	_panic(""t8020dart invalid lock state" @%s:%d");
	__ZN18IOTimerEventSource16timerEventSourceEP8OSObjectPFvS1_PS_E("abtm-ld-panic",SP + 0x14,0x4);
	_func_fffffff00864fe48(?,0x1,"AppleBluetoothModule::%s:ABTM will panic on PCIe link down\n");
	_panic(""Invalid power state: %lu" @%s:%d");
	_panic(""fAMFM" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepRequested" @%s:%d");
	_panic(""fCommandGate->commandSleep( &fDriverState, deadline, THREAD_UNINT ) != THREAD_TIMED_OUT" @%s:%d");
	_panic(""fCommandGate->commandSleep( &fManualLinkDownPending, deadline, THREAD_UNINT ) != THREAD_TIMED_OUT" @%s:%d");
	_panic(""false" @%s:%d");
	_panic(""fCommandGate->commandSleep( &fDriverState, deadline, THREAD_UNINT ) != THREAD_TIMED_OUT" @%s:%d");
	_panic(""fCommandGate->commandSleep( &fManualLinkDownPending, deadline, THREAD_UNINT ) != THREAD_TIMED_OUT" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepDone" @%s:%d");
	_panic(""false" @%s:%d");
	_panic(""!fDriverState.noPCIDriver" @%s:%d");
	_panic(""!!fDriverState.resetIsFLR" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepRequested || fDriverState.resetProgress == kResetStepDriverQuiesced" @%s:%d");
	_panic(""!fDriverState.resetIsFull" @%s:%d");
	_panic(""false" @%s:%d");
	_panic(""!fDeepSleepVoted" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepDriverQuiesced" @%s:%d");
	_panic(""fDriverState.resetIsFLR && !fDriverState.resetIsFull" @%s:%d");
	_panic(""!flrIssued" @%s:%d");
	_panic(""!fDeepSleepVoted" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepRequested || fDriverState.resetProgress == kResetStepDriverQuiesced" @%s:%d");
	_panic(""!fDeepSleepVoted" @%s:%d");
	_panic(""!fDriverState.resetProgress" @%s:%d");
	_panic(""!fDeepSleepVoted" @%s:%d");
	_panic(""false" @%s:%d");
	_panic(""fDriverState.resetIsFull && !fDriverState.resetIsFLR" @%s:%d");
	_panic(""fDriverState.resetProgress == kResetStepDriverQuiesced" @%s:%d");
	_panic(""fS2RPortOnStatus == kIOReturnInvalid" @%s:%d");
	_panic(""fAMFM->s2rPortControlIsManual()" @%s:%d");
	_panic(""0" @%s:%d");
	_panic(""!fDriverState.panicOnLinkDown" @%s:%d");
	_panic(""failed to lock netif, status = 0x%08x\n" @%s:%d");
	_panic(""Power state change to Sleep did not complete!" @%s:%d");
	_panic(""Scheduler work queues disabled but command submission is still enabled" @%s:%d");
	_panic("AGXk: %s:%d:%s: !!! Error, trying to change power state with disabled fender power management!\n");
	_panic("AGXk: %s:%d:%s: !!! Unimplemented\n");
	_panic(""%s:%d Unknown sample rate on pdmOut %d" @%s:%d");
	_panic(""%s:%d Invalid routing source %x detected [index %u]" @%s:%d");
	_panic(""%s:%d %p Invalid MikeyBus ASP port %d. Max ASP port allowed = %d" @%s:%d");
	_panic(""%s:%d %p No Input MCLK specified" @%s:%d");
	_panic(""%s:%d %p Receiver PDM port not specified. No receiver-pdm specified." @%s:%d");
	_panic(""%s:%d %p Invalid PDMOUT %d. Max PDMOUT allowed = %d" @%s:%d");
	_panic(""%s::%d BitsPerChannel=0x%x Unsupported" @%s:%d");
	_panic(""%s:%d Unknown ASP %d" @%s:%d");
	_panic(""%s:%d Unknown sample rate on pdmOut %d" @%s:%d");
	_panic(""%s:%d Unknown ASP port=%d direction=%d" @%s:%d");
	_panic(""%s::%d BitsPerChannel=0x%x Unsupported" @%s:%d");
	_panic(""%s:%d Unknown ASP port=%d direction=%d" @%s:%d");
	_panic(""%s:%d Unknown ASP %d" @%s:%d");
	_panic(""%s:%d Unknown adc %d" @%s:%d");
	_panic(""%s:%d %p Invalid datasource selected. Currenlty not supported. inputDataSource=%d, adc=%d" @%s:%d");
	_panic(""%s:%d %p AIN4 cannnot be routed to LADC1 inputDataSource=%d, adc=%d" @%s:%d");
	_panic(""%s:%d Unknown sample rate on adc %d" @%s:%d");
	_panic(""%s:%d Unknown adc %d" @%s:%d");
	_panic(""%s:%d %p Invalid PDMOUT port %d" @%s:%d");
	_panic(""%s %s:%d %p Unknown adc %d" @%s:%d");
	_panic(""%s:%d %p Invalid PDMOUT port %d" @%s:%d");
	_panic(""%s:%d Unknown sample rate on pdmOut %d" @%s:%d");
	_panic(""%s:%d Max 10 channels allowed for MikeyBus. rxChannelCount=%d EDT Ch:%d this=%p " @%s:%d");
	_panic(""%s %s:%d %p Unknown adc %d" @%s:%d");
	_panic(?);
	_panic(""%s:%d Trying to disable ASP when _aspEnableCount is already 0 for index:%d dir:%d" @%s:%d");
	_panic(""AppleCS42L75Audio::initMicConfig this=%p Invalid Codec IO i=%d hpADC=%d lpADC=%d\n" @%s:%d");
	_panic(""%s::%s !allowVoltageChange micBiasNumber=%d enableCount=%d Timeout=%d ms currState=%d _pendingStateTransition=%d this=%p pMicBiasConfig=%p nextAT(%lld) currAT(%lld) stateDiff_ns=%lld  now(%lld) timerStartAT(%lld) timerDiff_ns=%lld  calledByTempSensor=%d\n" @%s:%d");
	_panic(""%s::%s result=0x%x Timeout=%dms this=%p reasonForSleep=%d" @%s:%d");
	_panic(""%s::%s Temp Sensor didn't call to disable voltage change restriction for micBiasNumber=%d enableCount=%d Timeout=%d ms currState=%d _pendingStateTransition=%d this=%p pMicbiasConfig=%p nextAT(%lld) currAT(%lld) now(%lld) timerStartAT(%lld) timerDiff_ns=%lld\n" @%s:%d");
	_panic(?);
	_panic(""%s::%s(inEnable=%d) should not be called without owning workloop" @%s:%d");
	_panic(""%s::%s(provider=%p) programming error. Cannot start without a valid provider" @%s:%d");
	_panic(""%s::%s[%u] unable to allocate IOTimerEventSource." @%s:%d");
	_panic(""%s::%s(provider=%p) Unexpected error. Unable to add commandgate event source" @%s:%d");
	_panic(""%s::%s CLP_EN reference count is out of sync" @%s:%d");
	_panic(""%s::%s(inEnable=%d) should not be called without owning workloop" @%s:%d");
	_panic(""%s invalid PDM Routing" @%s:%d");
	_panic(""%s invalid CLP ASP Config" @%s:%d");
	_panic(""%s %s:%d Invalid mic %d" @%s:%d");
	_panic(""%s:%d Unknown sample rate on Mixer" @%s:%d");
	_panic(""Unexpected MCLK source selected for PrimaryMCLK=%u" @%s:%d");
	_panic(""%s:%d Unknown adc %d" @%s:%d");
	_panic(""%s:%d Unknown sample rate on EQ" @%s:%d");
	_panic(""%s:%d Unknown sample rate on DAC" @%s:%d");
	_panic(""%s:%d Trying to disable interrupts when _intrEnCount is already 0" @%s:%d");
	_panic(""%s::%s _primaryMCLKRefCount is out of sync" @%s:%d");
	_panic(""%s::%s _secondaryMCLKRefCount is out of sync" @%s:%d");
	_panic(""%s:%d Trying to power down when _pdnAllCount is already 0" @%s:%d");
	_panic(""%s:%d Trying to power down when _pcmBusCount is already 0" @%s:%d");
	_panic(""%s:%d index beyond array" @%s:%d");
	_panic(""%s:%d Trying to power down when _mixerEnCount is already 0" @%s:%d");
	_panic(""%s::%s MCLK reference count (inClient=%d) is out of sync" @%s:%d");
	_panic(""%s %s:%d this=%p Low power Mode 1.6 V is not supported on Micbiases 5 and 6" @%s:%d");
	_panic(""%s %s:%d %s property expected but not found" @%s:%d");
	_panic(""%s %s:%d %s property cannot be read" @%s:%d");
	_panic(""%s %s:%d %p Invalid voltage transition. 1.8V -> 2.7V" @%s:%d");
	_panic(""%s %s:%d %p Invalid voltage transition. 2.7V -> 1.8V" @%s:%d");
	_panic(""%s %s:%d %p Too many numSources(%d) kDSPDebug1SourceCount=%d" @%s:%d");
	_panic(""AppleDiagnosticDataAccessReadOnly does not support unloading" @%s:%d");
	_panic(""UPAAFProxy::withServiceAsync: function name too long" @%s:%d");
	_panic(""RefCounted: reference count underflow" @%s:%d");
	_panic(""%s: unknown property %s\n" @%s:%d");
	_panic(""%s: property %s is not an idle detector\n" @%s:%d");
	_panic(""%s: property %s is not a gamut conversion location\n" @%s:%d");
	_panic(""%s: unknown property %s\n" @%s:%d");
	_panic(""%s: property %s is not an idle detector\n" @%s:%d");
	_panic(""%s: can't get boot-arg for property %s\n" @%s:%d");
	_panic(""%s: could not cast IOService to IOAVVideoInterface" @%s:%d");
	_panic(""%s: could not cast pointer to IOAVHandler *" @%s:%d");
	_panic(""%s: could not cast pointer to IOAVVideoInterface *" @%s:%d");
	_panic(""%s: ERROR: entry is not in the pool\n" @%s:%d");
	_panic(""%s: no default action for argument %u!" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""%s: argument queue not empty!" @%s:%d");
	_panic(""missed notification" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""DISPLAY DRIVER FAILED TO LOAD" @%s:%d");
	_func_fffffff009bdaee0("iomfb_panic_on_boot_failure",SP + 0x184,0x4);
	_func_fffffff009bdaee0("iomfb_swap_reject_panic",SP + 0x184,0x4);
	_panic(""%s::Exceeded aborted swap limit" @%s:%d");
	_panic(""%s: implementation error for %s" @%s:%d");
	_panic(""IOMFB: cannot find AppleMobileFileIntegrity" @%s:%d");
	_panic(""IOMFB: failed to look up AMFI service!" @%s:%d");
	_panic(""IOMFB: failed to cast AMFI service!" @%s:%d");
	_panic(""IOMFB: AMFI service is null" @%s:%d");
	_panic(""%s, fDartActiveCount is zero when disable is specified" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""%s System error: Failure to prepare memory descriptor\n" @%s:%d");
	_panic(""%s System error: Mismatched data size\n" @%s:%d");
	_panic(""IOMFB: swap rejected" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""bad IOFence callback" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""%s: auto_mode_change failed with 0x%x\n" @%s:%d");
	_func_fffffff009bdaee0("disable_display_underrun_panic",SP + 0x1c,0x4);
	_panic(""IOMFB %s: failure: %s [0x%x]\n" @%s:%d");
	_panic(""IOMFB: display underrun [frame:%u] [line:%u] 0x%08x " "latencies: GP [%u, %u] PIODMA [%u] SMMU [%u] " "REPLAY [%u] " "BIC [%u] SPUC [%u], " "PDC [%u]," "DecompFail [GP0:%u] [GP1:%u], " "[Coord %08x] [ReplayDmaStatus %08x %08x %08x]" @%s:%d");
	_panic(""IOMFB: GP decompression failure: [GP0:%u] [GP1:%u]" @%s:%d");
	_panic(""%s: Illegal offset %X" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""APIODMA: RegVal buffer full regValGet %d regValPut %d count %d buf_end %d\n" @%s:%d");
	_panic(""%s: TZ Protection for PIODMA only when Generic packets supported. " "TZ %d GP %d\n" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""%s: TZ Protection for PIODMA only when Generic packets supported. " "TZ %d GP %d\n" @%s:%d");
	_panic(""IOMFB: Realloc not supported in PinnedAsync\n" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_func_fffffff009bdaee0("iomfb_panic_m3_err_detect",SP + 0xc,0x4);
	_func_fffffff009bdaee0("iomfb_panic_ca_oob",SP + 0xc,0x4);
	_func_fffffff009bdaee0("iomfb_panic_ca_imparity",SP + 0xc,0x4);
	_func_fffffff009bdaee0("iomfb_panic_stuck_polarity",SP + 0xc,0x4);
	_panic(""%s( %u, %u ) %s: power is off!" @%s:%d");
	_panic(""%s( %u, %lu, %p ) %s: power is off!" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq head %p first->prev != head @%u" @%s:%d");
	_panic(""History buffer not yet allocated" @%s:%d");
	_panic(""apt firmware: %s" @%s:%d");
	_panic(""FIXME: hook up to M3 reset" @%s:%d");
	_panic(""%s set_run_mode_safe: 0x%x" @%s:%d");
	_panic(""IOMFB: FU failed even though not coalesced with TSQ!\n" @%s:%d");
	_panic(""IOMFB: panel charge out of bounds [0x%x]" @%s:%d");
	_panic(""IOMFB: panel charge parity violation [0x%x]" @%s:%d");
	_panic(""IOMFB: polarity stuck!" @%s:%d");
	_panic(""Header size incorrect " @%s:%d");
	_panic(""%s: could not find LUTs for panel index %d\n" @%s:%d");
	_panic(""wrong number of default PDC SDC LUTs\n" @%s:%d");
	_panic(""pcc firmware: %s" @%s:%d");
	_panic(""FIXME: hook up to M3 reset" @%s:%d");
	_panic(""IOMFB: Unexpected VP index!\n" @%s:%d");
	_panic(""%s: Unsupported packet version %d\n" @%s:%d");
	_panic(""IOMFB: No associated PIODMA object\n" @%s:%d");
	_panic(""%s: error detected on AXI bus.\n" @%s:%d");
	_panic(""%s: Address bounds err in APIODMA" @%s:%d");
	_panic(""%s: APIODMA Sequence FIFO overflow" @%s:%d");
	_panic(""%s: APIODMA command parse error" @%s:%d");
	_panic(""APIODMA: cmd circbuf underflow.\n" @%s:%d");
	_panic(""APIODMA: refcount underflow.\n" @%s:%d");
	_panic(""AppleRegisterStream %s: Could not allocate base " "register for pinned buffer" @%s:%d");
	_panic(""%s: command queue stalled?" @%s:%d");
	_panic(""APIODMA: Write block request too large for RegVals\n" @%s:%d");
	_panic(""APIODMA: Write block request too large\n" @%s:%d");
	_panic(""APIODMA %s: Single command consumed " "entire command buffer." @%s:%d");
	_panic(""%s: Accmulated command bigger than command " "buffer, and auto_flush disabled.\n" @%s:%d");
	_panic(""%s: queue stalled.\n" @%s:%d");
	_panic(""%s: command queue stalled?" @%s:%d");
	_panic(""APIODMA %s: Single command consumed " "entire command buffer." @%s:%d");
	_panic(""%s: packet version %d not supported.\n" @%s:%d");
	_panic(""%s: command queue stalled?" @%s:%d");
	_panic(""%s: illegal call sequence" @%s:%d");
	_panic(""APIODMA instance not on instance list." @%s:%d");
	_panic(""IOMFB: No Power when ending async writes\n" @%s:%d");
	_panic(""write request out of bounds of register map\n" @%s:%d");
	_panic(""no provider given" @%s:%d");
	_panic("" Ycbcr Media Format supported only for 8/10/12 bits " @%s:%d");
	_panic(""No support for 32bit interleave accum" @%s:%d");
	_panic("" Not an Agx format? " @%s:%d");
	_panic(""%s: failed to map block %s" @%s:%d");
	_panic(""%s( %u ) %s: power is off!" @%s:%d");
	_panic(""IOMFB %s: Writing to Unsupported channel \n" @%s:%d");
	_panic(""fPendingSwap null" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad tailq elm %p next->prev != elm @%u" @%s:%d");
	_panic(""[%s::%s][%p] Control report timeout - Interface ID [%u]" @%s:%d");
	_panic(""thread_call_free failed on _timeoutThread" @%s:%d");
	_panic(""[%s::%s] Couldn't write into the FIFO: 0x%08X" @%s:%d");
	_panic(""[%s::%s] Couldn't read from the HW FIFO: 0x%08X" @%s:%d");
	_panic(""[%s::%s] Invalid message read from the FIFO ID %d" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad link elm %p prev->next != elm @%u" @%s:%d");
	_panic(""Bad link elm %p next->prev != elm @%u" @%s:%d");
	_panic(""Bad list head %p first->prev != head @%u" @%s:%d");
_panic:
	_panic_trap_to_debugger(0 ,SP + 0x8,0 ,0 ,0 ,0 );
	_panic("%s:%d Assertion failed: %s");
	_panic_trap_to_debugger(0 ,SP + 0x8,0 ,0 ,0 ,0 );
